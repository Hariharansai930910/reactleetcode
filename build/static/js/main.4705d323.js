/*! For license information please see main.4705d323.js.LICENSE.txt */
(()=>{"use strict";var e={4:(e,n,t)=>{var r=t(853),i=t(43),a=t(950);function o(e){var n="https://react.dev/errors/"+e;if(1<arguments.length){n+="?args[]="+encodeURIComponent(arguments[1]);for(var t=2;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t])}return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function l(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function s(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{0!==(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function u(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&(null!==(e=e.alternate)&&(n=e.memoizedState)),null!==n)return n.dehydrated}return null}function c(e){if(s(e)!==e)throw Error(o(188))}function d(e){var n=e.tag;if(5===n||26===n||27===n||6===n)return e;for(e=e.child;null!==e;){if(null!==(n=d(e)))return n;e=e.sibling}return null}var f=Object.assign,p=Symbol.for("react.element"),m=Symbol.for("react.transitional.element"),h=Symbol.for("react.portal"),g=Symbol.for("react.fragment"),y=Symbol.for("react.strict_mode"),b=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),w=Symbol.for("react.consumer"),x=Symbol.for("react.context"),k=Symbol.for("react.forward_ref"),S=Symbol.for("react.suspense"),C=Symbol.for("react.suspense_list"),_=Symbol.for("react.memo"),E=Symbol.for("react.lazy");Symbol.for("react.scope");var O=Symbol.for("react.activity");Symbol.for("react.legacy_hidden"),Symbol.for("react.tracing_marker");var T=Symbol.for("react.memo_cache_sentinel");Symbol.for("react.view_transition");var N=Symbol.iterator;function L(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=N&&e[N]||e["@@iterator"])?e:null}var q=Symbol.for("react.client.reference");function P(e){if(null==e)return null;if("function"===typeof e)return e.$$typeof===q?null:e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case g:return"Fragment";case b:return"Profiler";case y:return"StrictMode";case S:return"Suspense";case C:return"SuspenseList";case O:return"Activity"}if("object"===typeof e)switch(e.$$typeof){case h:return"Portal";case x:return(e.displayName||"Context")+".Provider";case w:return(e._context.displayName||"Context")+".Consumer";case k:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case _:return null!==(n=e.displayName||null)?n:P(e.type)||"Memo";case E:n=e._payload,e=e._init;try{return P(e(n))}catch(t){}}return null}var F=Array.isArray,z=i.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,D=a.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,j={pending:!1,data:null,method:null,action:null},R=[],M=-1;function U(e){return{current:e}}function I(e){0>M||(e.current=R[M],R[M]=null,M--)}function A(e,n){M++,R[M]=e.current,e.current=n}var W=U(null),B=U(null),H=U(null),V=U(null);function $(e,n){switch(A(H,n),A(B,e),A(W,null),n.nodeType){case 9:case 11:e=(e=n.documentElement)&&(e=e.namespaceURI)?id(e):0;break;default:if(e=n.tagName,n=n.namespaceURI)e=ad(n=id(n),e);else switch(e){case"svg":e=1;break;case"math":e=2;break;default:e=0}}I(W),A(W,e)}function G(){I(W),I(B),I(H)}function Q(e){null!==e.memoizedState&&A(V,e);var n=W.current,t=ad(n,e.type);n!==t&&(A(B,e),A(W,t))}function K(e){B.current===e&&(I(W),I(B)),V.current===e&&(I(V),Qd._currentValue=j)}var X=Object.prototype.hasOwnProperty,Y=r.unstable_scheduleCallback,J=r.unstable_cancelCallback,Z=r.unstable_shouldYield,ee=r.unstable_requestPaint,ne=r.unstable_now,te=r.unstable_getCurrentPriorityLevel,re=r.unstable_ImmediatePriority,ie=r.unstable_UserBlockingPriority,ae=r.unstable_NormalPriority,oe=r.unstable_LowPriority,le=r.unstable_IdlePriority,se=r.log,ue=r.unstable_setDisableYieldValue,ce=null,de=null;function fe(e){if("function"===typeof se&&ue(e),de&&"function"===typeof de.setStrictMode)try{de.setStrictMode(ce,e)}catch(n){}}var pe=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(me(e)/he|0)|0},me=Math.log,he=Math.LN2;var ge=256,ye=4194304;function be(e){var n=42&e;if(0!==n)return n;switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194048&e;case 4194304:case 8388608:case 16777216:case 33554432:return 62914560&e;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return e}}function ve(e,n,t){var r=e.pendingLanes;if(0===r)return 0;var i=0,a=e.suspendedLanes,o=e.pingedLanes;e=e.warmLanes;var l=134217727&r;return 0!==l?0!==(r=l&~a)?i=be(r):0!==(o&=l)?i=be(o):t||0!==(t=l&~e)&&(i=be(t)):0!==(l=r&~a)?i=be(l):0!==o?i=be(o):t||0!==(t=r&~e)&&(i=be(t)),0===i?0:0!==n&&n!==i&&0===(n&a)&&((a=i&-i)>=(t=n&-n)||32===a&&0!==(4194048&t))?n:i}function we(e,n){return 0===(e.pendingLanes&~(e.suspendedLanes&~e.pingedLanes)&n)}function xe(e,n){switch(e){case 1:case 2:case 4:case 8:case 64:return n+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function ke(){var e=ge;return 0===(4194048&(ge<<=1))&&(ge=256),e}function Se(){var e=ye;return 0===(62914560&(ye<<=1))&&(ye=4194304),e}function Ce(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function _e(e,n){e.pendingLanes|=n,268435456!==n&&(e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0)}function Ee(e,n,t){e.pendingLanes|=n,e.suspendedLanes&=~n;var r=31-pe(n);e.entangledLanes|=n,e.entanglements[r]=1073741824|e.entanglements[r]|4194090&t}function Oe(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-pe(t),i=1<<r;i&n|e[r]&n&&(e[r]|=n),t&=~i}}function Te(e){switch(e){case 2:e=1;break;case 8:e=4;break;case 32:e=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:e=128;break;case 268435456:e=134217728;break;default:e=0}return e}function Ne(e){return 2<(e&=-e)?8<e?0!==(134217727&e)?32:268435456:8:2}function Le(){var e=D.p;return 0!==e?e:void 0===(e=window.event)?32:cf(e.type)}var qe=Math.random().toString(36).slice(2),Pe="__reactFiber$"+qe,Fe="__reactProps$"+qe,ze="__reactContainer$"+qe,De="__reactEvents$"+qe,je="__reactListeners$"+qe,Re="__reactHandles$"+qe,Me="__reactResources$"+qe,Ue="__reactMarker$"+qe;function Ie(e){delete e[Pe],delete e[Fe],delete e[De],delete e[je],delete e[Re]}function Ae(e){var n=e[Pe];if(n)return n;for(var t=e.parentNode;t;){if(n=t[ze]||t[Pe]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=vd(e);null!==e;){if(t=e[Pe])return t;e=vd(e)}return n}t=(e=t).parentNode}return null}function We(e){if(e=e[Pe]||e[ze]){var n=e.tag;if(5===n||6===n||13===n||26===n||27===n||3===n)return e}return null}function Be(e){var n=e.tag;if(5===n||26===n||27===n||6===n)return e.stateNode;throw Error(o(33))}function He(e){var n=e[Me];return n||(n=e[Me]={hoistableStyles:new Map,hoistableScripts:new Map}),n}function Ve(e){e[Ue]=!0}var $e=new Set,Ge={};function Qe(e,n){Ke(e,n),Ke(e+"Capture",n)}function Ke(e,n){for(Ge[e]=n,e=0;e<n.length;e++)$e.add(n[e])}var Xe,Ye,Je=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),Ze={},en={};function nn(e,n,t){if(i=n,X.call(en,i)||!X.call(Ze,i)&&(Je.test(i)?en[i]=!0:(Ze[i]=!0,0)))if(null===t)e.removeAttribute(n);else{switch(typeof t){case"undefined":case"function":case"symbol":return void e.removeAttribute(n);case"boolean":var r=n.toLowerCase().slice(0,5);if("data-"!==r&&"aria-"!==r)return void e.removeAttribute(n)}e.setAttribute(n,""+t)}var i}function tn(e,n,t){if(null===t)e.removeAttribute(n);else{switch(typeof t){case"undefined":case"function":case"symbol":case"boolean":return void e.removeAttribute(n)}e.setAttribute(n,""+t)}}function rn(e,n,t,r){if(null===r)e.removeAttribute(t);else{switch(typeof r){case"undefined":case"function":case"symbol":case"boolean":return void e.removeAttribute(t)}e.setAttributeNS(n,t,""+r)}}function an(e){if(void 0===Xe)try{throw Error()}catch(t){var n=t.stack.trim().match(/\n( *(at )?)/);Xe=n&&n[1]||"",Ye=-1<t.stack.indexOf("\n    at")?" (<anonymous>)":-1<t.stack.indexOf("@")?"@unknown:0:0":""}return"\n"+Xe+e+Ye}var on=!1;function ln(e,n){if(!e||on)return"";on=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var r={DetermineComponentFrameRoot:function(){try{if(n){var t=function(){throw Error()};if(Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(i){var r=i}Reflect.construct(e,[],t)}else{try{t.call()}catch(a){r=a}e.call(t.prototype)}}else{try{throw Error()}catch(o){r=o}(t=e())&&"function"===typeof t.catch&&t.catch((function(){}))}}catch(l){if(l&&r&&"string"===typeof l.stack)return[l.stack,r.stack]}return[null,null]}};r.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var i=Object.getOwnPropertyDescriptor(r.DetermineComponentFrameRoot,"name");i&&i.configurable&&Object.defineProperty(r.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var a=r.DetermineComponentFrameRoot(),o=a[0],l=a[1];if(o&&l){var s=o.split("\n"),u=l.split("\n");for(i=r=0;r<s.length&&!s[r].includes("DetermineComponentFrameRoot");)r++;for(;i<u.length&&!u[i].includes("DetermineComponentFrameRoot");)i++;if(r===s.length||i===u.length)for(r=s.length-1,i=u.length-1;1<=r&&0<=i&&s[r]!==u[i];)i--;for(;1<=r&&0<=i;r--,i--)if(s[r]!==u[i]){if(1!==r||1!==i)do{if(r--,0>--i||s[r]!==u[i]){var c="\n"+s[r].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=r&&0<=i);break}}}finally{on=!1,Error.prepareStackTrace=t}return(t=e?e.displayName||e.name:"")?an(t):""}function sn(e){switch(e.tag){case 26:case 27:case 5:return an(e.type);case 16:return an("Lazy");case 13:return an("Suspense");case 19:return an("SuspenseList");case 0:case 15:return ln(e.type,!1);case 11:return ln(e.type.render,!1);case 1:return ln(e.type,!0);case 31:return an("Activity");default:return""}}function un(e){try{var n="";do{n+=sn(e),e=e.return}while(e);return n}catch(t){return"\nError generating stack: "+t.message+"\n"+t.stack}}function cn(e){switch(typeof e){case"bigint":case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function dn(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function fn(e){e._valueTracker||(e._valueTracker=function(e){var n=dn(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&"undefined"!==typeof t&&"function"===typeof t.get&&"function"===typeof t.set){var i=t.get,a=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function pn(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=dn(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function mn(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}var hn=/[\n"\\]/g;function gn(e){return e.replace(hn,(function(e){return"\\"+e.charCodeAt(0).toString(16)+" "}))}function yn(e,n,t,r,i,a,o,l){e.name="",null!=o&&"function"!==typeof o&&"symbol"!==typeof o&&"boolean"!==typeof o?e.type=o:e.removeAttribute("type"),null!=n?"number"===o?(0===n&&""===e.value||e.value!=n)&&(e.value=""+cn(n)):e.value!==""+cn(n)&&(e.value=""+cn(n)):"submit"!==o&&"reset"!==o||e.removeAttribute("value"),null!=n?vn(e,o,cn(n)):null!=t?vn(e,o,cn(t)):null!=r&&e.removeAttribute("value"),null==i&&null!=a&&(e.defaultChecked=!!a),null!=i&&(e.checked=i&&"function"!==typeof i&&"symbol"!==typeof i),null!=l&&"function"!==typeof l&&"symbol"!==typeof l&&"boolean"!==typeof l?e.name=""+cn(l):e.removeAttribute("name")}function bn(e,n,t,r,i,a,o,l){if(null!=a&&"function"!==typeof a&&"symbol"!==typeof a&&"boolean"!==typeof a&&(e.type=a),null!=n||null!=t){if(!("submit"!==a&&"reset"!==a||void 0!==n&&null!==n))return;t=null!=t?""+cn(t):"",n=null!=n?""+cn(n):t,l||n===e.value||(e.value=n),e.defaultValue=n}r="function"!==typeof(r=null!=r?r:i)&&"symbol"!==typeof r&&!!r,e.checked=l?e.checked:!!r,e.defaultChecked=!!r,null!=o&&"function"!==typeof o&&"symbol"!==typeof o&&"boolean"!==typeof o&&(e.name=o)}function vn(e,n,t){"number"===n&&mn(e.ownerDocument)===e||e.defaultValue===""+t||(e.defaultValue=""+t)}function wn(e,n,t,r){if(e=e.options,n){n={};for(var i=0;i<t.length;i++)n["$"+t[i]]=!0;for(t=0;t<e.length;t++)i=n.hasOwnProperty("$"+e[t].value),e[t].selected!==i&&(e[t].selected=i),i&&r&&(e[t].defaultSelected=!0)}else{for(t=""+cn(t),n=null,i=0;i<e.length;i++){if(e[i].value===t)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==n||e[i].disabled||(n=e[i])}null!==n&&(n.selected=!0)}}function xn(e,n,t){null==n||((n=""+cn(n))!==e.value&&(e.value=n),null!=t)?e.defaultValue=null!=t?""+cn(t):"":e.defaultValue!==n&&(e.defaultValue=n)}function kn(e,n,t,r){if(null==n){if(null!=r){if(null!=t)throw Error(o(92));if(F(r)){if(1<r.length)throw Error(o(93));r=r[0]}t=r}null==t&&(t=""),n=t}t=cn(n),e.defaultValue=t,(r=e.textContent)===t&&""!==r&&null!==r&&(e.value=r)}function Sn(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var Cn=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function _n(e,n,t){var r=0===n.indexOf("--");null==t||"boolean"===typeof t||""===t?r?e.setProperty(n,""):"float"===n?e.cssFloat="":e[n]="":r?e.setProperty(n,t):"number"!==typeof t||0===t||Cn.has(n)?"float"===n?e.cssFloat=t:e[n]=(""+t).trim():e[n]=t+"px"}function En(e,n,t){if(null!=n&&"object"!==typeof n)throw Error(o(62));if(e=e.style,null!=t){for(var r in t)!t.hasOwnProperty(r)||null!=n&&n.hasOwnProperty(r)||(0===r.indexOf("--")?e.setProperty(r,""):"float"===r?e.cssFloat="":e[r]="");for(var i in n)r=n[i],n.hasOwnProperty(i)&&t[i]!==r&&_n(e,i,r)}else for(var a in n)n.hasOwnProperty(a)&&_n(e,a,n[a])}function On(e){if(-1===e.indexOf("-"))return!1;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Tn=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),Nn=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function Ln(e){return Nn.test(""+e)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":e}var qn=null;function Pn(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Fn=null,zn=null;function Dn(e){var n=We(e);if(n&&(e=n.stateNode)){var t=e[Fe]||null;e:switch(e=n.stateNode,n.type){case"input":if(yn(e,t.value,t.defaultValue,t.defaultValue,t.checked,t.defaultChecked,t.type,t.name),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll('input[name="'+gn(""+n)+'"][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var i=r[Fe]||null;if(!i)throw Error(o(90));yn(r,i.value,i.defaultValue,i.defaultValue,i.checked,i.defaultChecked,i.type,i.name)}}for(n=0;n<t.length;n++)(r=t[n]).form===e.form&&pn(r)}break e;case"textarea":xn(e,t.value,t.defaultValue);break e;case"select":null!=(n=t.value)&&wn(e,!!t.multiple,n,!1)}}}var jn=!1;function Rn(e,n,t){if(jn)return e(n,t);jn=!0;try{return e(n)}finally{if(jn=!1,(null!==Fn||null!==zn)&&(Au(),Fn&&(n=Fn,e=zn,zn=Fn=null,Dn(n),e)))for(n=0;n<e.length;n++)Dn(e[n])}}function Mn(e,n){var t=e.stateNode;if(null===t)return null;var r=t[Fe]||null;if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!==typeof t)throw Error(o(231,n,typeof t));return t}var Un=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),In=!1;if(Un)try{var An={};Object.defineProperty(An,"passive",{get:function(){In=!0}}),window.addEventListener("test",An,An),window.removeEventListener("test",An,An)}catch(zf){In=!1}var Wn=null,Bn=null,Hn=null;function Vn(){if(Hn)return Hn;var e,n,t=Bn,r=t.length,i="value"in Wn?Wn.value:Wn.textContent,a=i.length;for(e=0;e<r&&t[e]===i[e];e++);var o=r-e;for(n=1;n<=o&&t[r-n]===i[a-n];n++);return Hn=i.slice(e,1<n?1-n:void 0)}function $n(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function Gn(){return!0}function Qn(){return!1}function Kn(e){function n(n,t,r,i,a){for(var o in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=i,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(o)&&(n=e[o],this[o]=n?n(i):i[o]);return this.isDefaultPrevented=(null!=i.defaultPrevented?i.defaultPrevented:!1===i.returnValue)?Gn:Qn,this.isPropagationStopped=Qn,this}return f(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Gn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Gn)},persist:function(){},isPersistent:Gn}),n}var Xn,Yn,Jn,Zn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},et=Kn(Zn),nt=f({},Zn,{view:0,detail:0}),tt=Kn(nt),rt=f({},nt,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:mt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==Jn&&(Jn&&"mousemove"===e.type?(Xn=e.screenX-Jn.screenX,Yn=e.screenY-Jn.screenY):Yn=Xn=0,Jn=e),Xn)},movementY:function(e){return"movementY"in e?e.movementY:Yn}}),it=Kn(rt),at=Kn(f({},rt,{dataTransfer:0})),ot=Kn(f({},nt,{relatedTarget:0})),lt=Kn(f({},Zn,{animationName:0,elapsedTime:0,pseudoElement:0})),st=Kn(f({},Zn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),ut=Kn(f({},Zn,{data:0})),ct={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},dt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ft={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function pt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=ft[e])&&!!n[e]}function mt(){return pt}var ht=Kn(f({},nt,{key:function(e){if(e.key){var n=ct[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=$n(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?dt[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:mt,charCode:function(e){return"keypress"===e.type?$n(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?$n(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),gt=Kn(f({},rt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),yt=Kn(f({},nt,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:mt})),bt=Kn(f({},Zn,{propertyName:0,elapsedTime:0,pseudoElement:0})),vt=Kn(f({},rt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),wt=Kn(f({},Zn,{newState:0,oldState:0})),xt=[9,13,27,32],kt=Un&&"CompositionEvent"in window,St=null;Un&&"documentMode"in document&&(St=document.documentMode);var Ct=Un&&"TextEvent"in window&&!St,_t=Un&&(!kt||St&&8<St&&11>=St),Et=String.fromCharCode(32),Ot=!1;function Tt(e,n){switch(e){case"keyup":return-1!==xt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Nt(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Lt=!1;var qt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Pt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!qt[e.type]:"textarea"===n}function Ft(e,n,t,r){Fn?zn?zn.push(r):zn=[r]:Fn=r,0<(n=Hc(n,"onChange")).length&&(t=new et("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var zt=null,Dt=null;function jt(e){jc(e,0)}function Rt(e){if(pn(Be(e)))return e}function Mt(e,n){if("change"===e)return n}var Ut=!1;if(Un){var It;if(Un){var At="oninput"in document;if(!At){var Wt=document.createElement("div");Wt.setAttribute("oninput","return;"),At="function"===typeof Wt.oninput}It=At}else It=!1;Ut=It&&(!document.documentMode||9<document.documentMode)}function Bt(){zt&&(zt.detachEvent("onpropertychange",Ht),Dt=zt=null)}function Ht(e){if("value"===e.propertyName&&Rt(Dt)){var n=[];Ft(n,Dt,e,Pn(e)),Rn(jt,n)}}function Vt(e,n,t){"focusin"===e?(Bt(),Dt=t,(zt=n).attachEvent("onpropertychange",Ht)):"focusout"===e&&Bt()}function $t(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Rt(Dt)}function Gt(e,n){if("click"===e)return Rt(n)}function Qt(e,n){if("input"===e||"change"===e)return Rt(n)}var Kt="function"===typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e===1/n)||e!==e&&n!==n};function Xt(e,n){if(Kt(e,n))return!0;if("object"!==typeof e||null===e||"object"!==typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var i=t[r];if(!X.call(n,i)||!Kt(e[i],n[i]))return!1}return!0}function Yt(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Jt(e,n){var t,r=Yt(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Yt(r)}}function Zt(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?Zt(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function er(e){for(var n=mn((e=null!=e&&null!=e.ownerDocument&&null!=e.ownerDocument.defaultView?e.ownerDocument.defaultView:window).document);n instanceof e.HTMLIFrameElement;){try{var t="string"===typeof n.contentWindow.location.href}catch(r){t=!1}if(!t)break;n=mn((e=n.contentWindow).document)}return n}function nr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}var tr=Un&&"documentMode"in document&&11>=document.documentMode,rr=null,ir=null,ar=null,or=!1;function lr(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;or||null==rr||rr!==mn(r)||("selectionStart"in(r=rr)&&nr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},ar&&Xt(ar,r)||(ar=r,0<(r=Hc(ir,"onSelect")).length&&(n=new et("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=rr)))}function sr(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var ur={animationend:sr("Animation","AnimationEnd"),animationiteration:sr("Animation","AnimationIteration"),animationstart:sr("Animation","AnimationStart"),transitionrun:sr("Transition","TransitionRun"),transitionstart:sr("Transition","TransitionStart"),transitioncancel:sr("Transition","TransitionCancel"),transitionend:sr("Transition","TransitionEnd")},cr={},dr={};function fr(e){if(cr[e])return cr[e];if(!ur[e])return e;var n,t=ur[e];for(n in t)if(t.hasOwnProperty(n)&&n in dr)return cr[e]=t[n];return e}Un&&(dr=document.createElement("div").style,"AnimationEvent"in window||(delete ur.animationend.animation,delete ur.animationiteration.animation,delete ur.animationstart.animation),"TransitionEvent"in window||delete ur.transitionend.transition);var pr=fr("animationend"),mr=fr("animationiteration"),hr=fr("animationstart"),gr=fr("transitionrun"),yr=fr("transitionstart"),br=fr("transitioncancel"),vr=fr("transitionend"),wr=new Map,xr="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function kr(e,n){wr.set(e,n),Qe(n,[e])}xr.push("scrollEnd");var Sr=new WeakMap;function Cr(e,n){if("object"===typeof e&&null!==e){var t=Sr.get(e);return void 0!==t?t:(n={value:e,source:n,stack:un(n)},Sr.set(e,n),n)}return{value:e,source:n,stack:un(n)}}var _r=[],Er=0,Or=0;function Tr(){for(var e=Er,n=Or=Er=0;n<e;){var t=_r[n];_r[n++]=null;var r=_r[n];_r[n++]=null;var i=_r[n];_r[n++]=null;var a=_r[n];if(_r[n++]=null,null!==r&&null!==i){var o=r.pending;null===o?i.next=i:(i.next=o.next,o.next=i),r.pending=i}0!==a&&Pr(t,i,a)}}function Nr(e,n,t,r){_r[Er++]=e,_r[Er++]=n,_r[Er++]=t,_r[Er++]=r,Or|=r,e.lanes|=r,null!==(e=e.alternate)&&(e.lanes|=r)}function Lr(e,n,t,r){return Nr(e,n,t,r),Fr(e)}function qr(e,n){return Nr(e,null,null,n),Fr(e)}function Pr(e,n,t){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t);for(var i=!1,a=e.return;null!==a;)a.childLanes|=t,null!==(r=a.alternate)&&(r.childLanes|=t),22===a.tag&&(null===(e=a.stateNode)||1&e._visibility||(i=!0)),e=a,a=a.return;return 3===e.tag?(a=e.stateNode,i&&null!==n&&(i=31-pe(t),null===(r=(e=a.hiddenUpdates)[i])?e[i]=[n]:r.push(n),n.lane=536870912|t),a):null}function Fr(e){if(50<Pu)throw Pu=0,Fu=null,Error(o(185));for(var n=e.return;null!==n;)n=(e=n).return;return 3===e.tag?e.stateNode:null}var zr={};function Dr(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function jr(e,n,t,r){return new Dr(e,n,t,r)}function Rr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Mr(e,n){var t=e.alternate;return null===t?((t=jr(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=65011712&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t.refCleanup=e.refCleanup,t}function Ur(e,n){e.flags&=65011714;var t=e.alternate;return null===t?(e.childLanes=0,e.lanes=n,e.child=null,e.subtreeFlags=0,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.stateNode=null):(e.childLanes=t.childLanes,e.lanes=t.lanes,e.child=t.child,e.subtreeFlags=0,e.deletions=null,e.memoizedProps=t.memoizedProps,e.memoizedState=t.memoizedState,e.updateQueue=t.updateQueue,e.type=t.type,n=t.dependencies,e.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext}),e}function Ir(e,n,t,r,i,a){var l=0;if(r=e,"function"===typeof e)Rr(e)&&(l=1);else if("string"===typeof e)l=function(e,n,t){if(1===t||null!=n.itemProp)return!1;switch(e){case"meta":case"title":return!0;case"style":if("string"!==typeof n.precedence||"string"!==typeof n.href||""===n.href)break;return!0;case"link":if("string"!==typeof n.rel||"string"!==typeof n.href||""===n.href||n.onLoad||n.onError)break;return"stylesheet"!==n.rel||(e=n.disabled,"string"===typeof n.precedence&&null==e);case"script":if(n.async&&"function"!==typeof n.async&&"symbol"!==typeof n.async&&!n.onLoad&&!n.onError&&n.src&&"string"===typeof n.src)return!0}return!1}(e,t,W.current)?26:"html"===e||"head"===e||"body"===e?27:5;else e:switch(e){case O:return(e=jr(31,t,n,i)).elementType=O,e.lanes=a,e;case g:return Ar(t.children,i,a,n);case y:l=8,i|=24;break;case b:return(e=jr(12,t,n,2|i)).elementType=b,e.lanes=a,e;case S:return(e=jr(13,t,n,i)).elementType=S,e.lanes=a,e;case C:return(e=jr(19,t,n,i)).elementType=C,e.lanes=a,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case v:case x:l=10;break e;case w:l=9;break e;case k:l=11;break e;case _:l=14;break e;case E:l=16,r=null;break e}l=29,t=Error(o(130,null===e?"null":typeof e,"")),r=null}return(n=jr(l,t,n,i)).elementType=e,n.type=r,n.lanes=a,n}function Ar(e,n,t,r){return(e=jr(7,e,r,n)).lanes=t,e}function Wr(e,n,t){return(e=jr(6,e,null,n)).lanes=t,e}function Br(e,n,t){return(n=jr(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}var Hr=[],Vr=0,$r=null,Gr=0,Qr=[],Kr=0,Xr=null,Yr=1,Jr="";function Zr(e,n){Hr[Vr++]=Gr,Hr[Vr++]=$r,$r=e,Gr=n}function ei(e,n,t){Qr[Kr++]=Yr,Qr[Kr++]=Jr,Qr[Kr++]=Xr,Xr=e;var r=Yr;e=Jr;var i=32-pe(r)-1;r&=~(1<<i),t+=1;var a=32-pe(n)+i;if(30<a){var o=i-i%5;a=(r&(1<<o)-1).toString(32),r>>=o,i-=o,Yr=1<<32-pe(n)+i|t<<i|r,Jr=a+e}else Yr=1<<a|t<<i|r,Jr=e}function ni(e){null!==e.return&&(Zr(e,1),ei(e,1,0))}function ti(e){for(;e===$r;)$r=Hr[--Vr],Hr[Vr]=null,Gr=Hr[--Vr],Hr[Vr]=null;for(;e===Xr;)Xr=Qr[--Kr],Qr[Kr]=null,Jr=Qr[--Kr],Qr[Kr]=null,Yr=Qr[--Kr],Qr[Kr]=null}var ri=null,ii=null,ai=!1,oi=null,li=!1,si=Error(o(519));function ui(e){throw hi(Cr(Error(o(418,"")),e)),si}function ci(e){var n=e.stateNode,t=e.type,r=e.memoizedProps;switch(n[Pe]=e,n[Fe]=r,t){case"dialog":Rc("cancel",n),Rc("close",n);break;case"iframe":case"object":case"embed":Rc("load",n);break;case"video":case"audio":for(t=0;t<zc.length;t++)Rc(zc[t],n);break;case"source":Rc("error",n);break;case"img":case"image":case"link":Rc("error",n),Rc("load",n);break;case"details":Rc("toggle",n);break;case"input":Rc("invalid",n),bn(n,r.value,r.defaultValue,r.checked,r.defaultChecked,r.type,r.name,!0),fn(n);break;case"select":Rc("invalid",n);break;case"textarea":Rc("invalid",n),kn(n,r.value,r.defaultValue,r.children),fn(n)}"string"!==typeof(t=r.children)&&"number"!==typeof t&&"bigint"!==typeof t||n.textContent===""+t||!0===r.suppressHydrationWarning||Xc(n.textContent,t)?(null!=r.popover&&(Rc("beforetoggle",n),Rc("toggle",n)),null!=r.onScroll&&Rc("scroll",n),null!=r.onScrollEnd&&Rc("scrollend",n),null!=r.onClick&&(n.onclick=Yc),n=!0):n=!1,n||ui(e)}function di(e){for(ri=e.return;ri;)switch(ri.tag){case 5:case 13:return void(li=!1);case 27:case 3:return void(li=!0);default:ri=ri.return}}function fi(e){if(e!==ri)return!1;if(!ai)return di(e),ai=!0,!1;var n,t=e.tag;if((n=3!==t&&27!==t)&&((n=5===t)&&(n=!("form"!==(n=e.type)&&"button"!==n)||od(e.type,e.memoizedProps)),n=!n),n&&ii&&ui(e),di(e),13===t){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType)if("/$"===(n=e.data)){if(0===t){ii=yd(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++;e=e.nextSibling}ii=null}}else 27===t?(t=ii,pd(e.type)?(e=bd,bd=null,ii=e):ii=t):ii=ri?yd(e.stateNode.nextSibling):null;return!0}function pi(){ii=ri=null,ai=!1}function mi(){var e=oi;return null!==e&&(null===vu?vu=e:vu.push.apply(vu,e),oi=null),e}function hi(e){null===oi?oi=[e]:oi.push(e)}var gi=U(null),yi=null,bi=null;function vi(e,n,t){A(gi,n._currentValue),n._currentValue=t}function wi(e){e._currentValue=gi.current,I(gi)}function xi(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function ki(e,n,t,r){var i=e.child;for(null!==i&&(i.return=e);null!==i;){var a=i.dependencies;if(null!==a){var l=i.child;a=a.firstContext;e:for(;null!==a;){var s=a;a=i;for(var u=0;u<n.length;u++)if(s.context===n[u]){a.lanes|=t,null!==(s=a.alternate)&&(s.lanes|=t),xi(a.return,t,e),r||(l=null);break e}a=s.next}}else if(18===i.tag){if(null===(l=i.return))throw Error(o(341));l.lanes|=t,null!==(a=l.alternate)&&(a.lanes|=t),xi(l,t,e),l=null}else l=i.child;if(null!==l)l.return=i;else for(l=i;null!==l;){if(l===e){l=null;break}if(null!==(i=l.sibling)){i.return=l.return,l=i;break}l=l.return}i=l}}function Si(e,n,t,r){e=null;for(var i=n,a=!1;null!==i;){if(!a)if(0!==(524288&i.flags))a=!0;else if(0!==(262144&i.flags))break;if(10===i.tag){var l=i.alternate;if(null===l)throw Error(o(387));if(null!==(l=l.memoizedProps)){var s=i.type;Kt(i.pendingProps.value,l.value)||(null!==e?e.push(s):e=[s])}}else if(i===V.current){if(null===(l=i.alternate))throw Error(o(387));l.memoizedState.memoizedState!==i.memoizedState.memoizedState&&(null!==e?e.push(Qd):e=[Qd])}i=i.return}null!==e&&ki(n,e,t,r),n.flags|=262144}function Ci(e){for(e=e.firstContext;null!==e;){if(!Kt(e.context._currentValue,e.memoizedValue))return!0;e=e.next}return!1}function _i(e){yi=e,bi=null,null!==(e=e.dependencies)&&(e.firstContext=null)}function Ei(e){return Ti(yi,e)}function Oi(e,n){return null===yi&&_i(e),Ti(e,n)}function Ti(e,n){var t=n._currentValue;if(n={context:n,memoizedValue:t,next:null},null===bi){if(null===e)throw Error(o(308));bi=n,e.dependencies={lanes:0,firstContext:n},e.flags|=524288}else bi=bi.next=n;return t}var Ni="undefined"!==typeof AbortController?AbortController:function(){var e=[],n=this.signal={aborted:!1,addEventListener:function(n,t){e.push(t)}};this.abort=function(){n.aborted=!0,e.forEach((function(e){return e()}))}},Li=r.unstable_scheduleCallback,qi=r.unstable_NormalPriority,Pi={$$typeof:x,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function Fi(){return{controller:new Ni,data:new Map,refCount:0}}function zi(e){e.refCount--,0===e.refCount&&Li(qi,(function(){e.controller.abort()}))}var Di=null,ji=0,Ri=0,Mi=null;function Ui(){if(0===--ji&&null!==Di){null!==Mi&&(Mi.status="fulfilled");var e=Di;Di=null,Ri=0,Mi=null;for(var n=0;n<e.length;n++)(0,e[n])()}}var Ii=z.S;z.S=function(e,n){"object"===typeof n&&null!==n&&"function"===typeof n.then&&function(e,n){if(null===Di){var t=Di=[];ji=0,Ri=Nc(),Mi={status:"pending",value:void 0,then:function(e){t.push(e)}}}ji++,n.then(Ui,Ui)}(0,n),null!==Ii&&Ii(e,n)};var Ai=U(null);function Wi(){var e=Ai.current;return null!==e?e:ru.pooledCache}function Bi(e,n){A(Ai,null===n?Ai.current:n.pool)}function Hi(){var e=Wi();return null===e?null:{parent:Pi._currentValue,pool:e}}var Vi=Error(o(460)),$i=Error(o(474)),Gi=Error(o(542)),Qi={then:function(){}};function Ki(e){return"fulfilled"===(e=e.status)||"rejected"===e}function Xi(){}function Yi(e,n,t){switch(void 0===(t=e[t])?e.push(n):t!==n&&(n.then(Xi,Xi),n=t),n.status){case"fulfilled":return n.value;case"rejected":throw ea(e=n.reason),e;default:if("string"===typeof n.status)n.then(Xi,Xi);else{if(null!==(e=ru)&&100<e.shellSuspendCounter)throw Error(o(482));(e=n).status="pending",e.then((function(e){if("pending"===n.status){var t=n;t.status="fulfilled",t.value=e}}),(function(e){if("pending"===n.status){var t=n;t.status="rejected",t.reason=e}}))}switch(n.status){case"fulfilled":return n.value;case"rejected":throw ea(e=n.reason),e}throw Ji=n,Vi}}var Ji=null;function Zi(){if(null===Ji)throw Error(o(459));var e=Ji;return Ji=null,e}function ea(e){if(e===Vi||e===Gi)throw Error(o(483))}var na=!1;function ta(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function ra(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,callbacks:null})}function ia(e){return{lane:e,tag:0,payload:null,callback:null,next:null}}function aa(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&tu)){var i=r.pending;return null===i?n.next=n:(n.next=i.next,i.next=n),r.pending=n,n=Fr(e),Pr(e,null,t),n}return Nr(e,r,n,t),Fr(e)}function oa(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,0!==(4194048&t))){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,Oe(e,t)}}function la(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var i=null,a=null;if(null!==(t=t.firstBaseUpdate)){do{var o={lane:t.lane,tag:t.tag,payload:t.payload,callback:null,next:null};null===a?i=a=o:a=a.next=o,t=t.next}while(null!==t);null===a?i=a=n:a=a.next=n}else i=a=n;return t={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:a,shared:r.shared,callbacks:r.callbacks},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}var sa=!1;function ua(){if(sa){if(null!==Mi)throw Mi}}function ca(e,n,t,r){sa=!1;var i=e.updateQueue;na=!1;var a=i.firstBaseUpdate,o=i.lastBaseUpdate,l=i.shared.pending;if(null!==l){i.shared.pending=null;var s=l,u=s.next;s.next=null,null===o?a=u:o.next=u,o=s;var c=e.alternate;null!==c&&((l=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===l?c.firstBaseUpdate=u:l.next=u,c.lastBaseUpdate=s))}if(null!==a){var d=i.baseState;for(o=0,c=u=s=null,l=a;;){var p=-536870913&l.lane,m=p!==l.lane;if(m?(au&p)===p:(r&p)===p){0!==p&&p===Ri&&(sa=!0),null!==c&&(c=c.next={lane:0,tag:l.tag,payload:l.payload,callback:null,next:null});e:{var h=e,g=l;p=n;var y=t;switch(g.tag){case 1:if("function"===typeof(h=g.payload)){d=h.call(y,d,p);break e}d=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null===(p="function"===typeof(h=g.payload)?h.call(y,d,p):h)||void 0===p)break e;d=f({},d,p);break e;case 2:na=!0}}null!==(p=l.callback)&&(e.flags|=64,m&&(e.flags|=8192),null===(m=i.callbacks)?i.callbacks=[p]:m.push(p))}else m={lane:p,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===c?(u=c=m,s=d):c=c.next=m,o|=p;if(null===(l=l.next)){if(null===(l=i.shared.pending))break;l=(m=l).next,m.next=null,i.lastBaseUpdate=m,i.shared.pending=null}}null===c&&(s=d),i.baseState=s,i.firstBaseUpdate=u,i.lastBaseUpdate=c,null===a&&(i.shared.lanes=0),pu|=o,e.lanes=o,e.memoizedState=d}}function da(e,n){if("function"!==typeof e)throw Error(o(191,e));e.call(n)}function fa(e,n){var t=e.callbacks;if(null!==t)for(e.callbacks=null,e=0;e<t.length;e++)da(t[e],n)}var pa=U(null),ma=U(0);function ha(e,n){A(ma,e=du),A(pa,n),du=e|n.baseLanes}function ga(){A(ma,du),A(pa,pa.current)}function ya(){du=ma.current,I(pa),I(ma)}var ba=0,va=null,wa=null,xa=null,ka=!1,Sa=!1,Ca=!1,_a=0,Ea=0,Oa=null,Ta=0;function Na(){throw Error(o(321))}function La(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!Kt(e[t],n[t]))return!1;return!0}function qa(e,n,t,r,i,a){return ba=a,va=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,z.H=null===e||null===e.memoizedState?$o:Go,Ca=!1,a=t(r,i),Ca=!1,Sa&&(a=Fa(n,t,r,i)),Pa(e),a}function Pa(e){z.H=Vo;var n=null!==wa&&null!==wa.next;if(ba=0,xa=wa=va=null,ka=!1,Ea=0,Oa=null,n)throw Error(o(300));null===e||Ol||null!==(e=e.dependencies)&&Ci(e)&&(Ol=!0)}function Fa(e,n,t,r){va=e;var i=0;do{if(Sa&&(Oa=null),Ea=0,Sa=!1,25<=i)throw Error(o(301));if(i+=1,xa=wa=null,null!=e.updateQueue){var a=e.updateQueue;a.lastEffect=null,a.events=null,a.stores=null,null!=a.memoCache&&(a.memoCache.index=0)}z.H=Qo,a=n(t,r)}while(Sa);return a}function za(){var e=z.H,n=e.useState()[0];return n="function"===typeof n.then?Ia(n):n,e=e.useState()[0],(null!==wa?wa.memoizedState:null)!==e&&(va.flags|=1024),n}function Da(){var e=0!==_a;return _a=0,e}function ja(e,n,t){n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~t}function Ra(e){if(ka){for(e=e.memoizedState;null!==e;){var n=e.queue;null!==n&&(n.pending=null),e=e.next}ka=!1}ba=0,xa=wa=va=null,Sa=!1,Ea=_a=0,Oa=null}function Ma(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===xa?va.memoizedState=xa=e:xa=xa.next=e,xa}function Ua(){if(null===wa){var e=va.alternate;e=null!==e?e.memoizedState:null}else e=wa.next;var n=null===xa?va.memoizedState:xa.next;if(null!==n)xa=n,wa=e;else{if(null===e){if(null===va.alternate)throw Error(o(467));throw Error(o(310))}e={memoizedState:(wa=e).memoizedState,baseState:wa.baseState,baseQueue:wa.baseQueue,queue:wa.queue,next:null},null===xa?va.memoizedState=xa=e:xa=xa.next=e}return xa}function Ia(e){var n=Ea;return Ea+=1,null===Oa&&(Oa=[]),e=Yi(Oa,e,n),n=va,null===(null===xa?n.memoizedState:xa.next)&&(n=n.alternate,z.H=null===n||null===n.memoizedState?$o:Go),e}function Aa(e){if(null!==e&&"object"===typeof e){if("function"===typeof e.then)return Ia(e);if(e.$$typeof===x)return Ei(e)}throw Error(o(438,String(e)))}function Wa(e){var n=null,t=va.updateQueue;if(null!==t&&(n=t.memoCache),null==n){var r=va.alternate;null!==r&&(null!==(r=r.updateQueue)&&(null!=(r=r.memoCache)&&(n={data:r.data.map((function(e){return e.slice()})),index:0})))}if(null==n&&(n={data:[],index:0}),null===t&&(t={lastEffect:null,events:null,stores:null,memoCache:null},va.updateQueue=t),t.memoCache=n,void 0===(t=n.data[n.index]))for(t=n.data[n.index]=Array(e),r=0;r<e;r++)t[r]=T;return n.index++,t}function Ba(e,n){return"function"===typeof n?n(e):n}function Ha(e){return Va(Ua(),wa,e)}function Va(e,n,t){var r=e.queue;if(null===r)throw Error(o(311));r.lastRenderedReducer=t;var i=e.baseQueue,a=r.pending;if(null!==a){if(null!==i){var l=i.next;i.next=a.next,a.next=l}n.baseQueue=i=a,r.pending=null}if(a=e.baseState,null===i)e.memoizedState=a;else{var s=l=null,u=null,c=n=i.next,d=!1;do{var f=-536870913&c.lane;if(f!==c.lane?(au&f)===f:(ba&f)===f){var p=c.revertLane;if(0===p)null!==u&&(u=u.next={lane:0,revertLane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),f===Ri&&(d=!0);else{if((ba&p)===p){c=c.next,p===Ri&&(d=!0);continue}f={lane:0,revertLane:c.revertLane,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null},null===u?(s=u=f,l=a):u=u.next=f,va.lanes|=p,pu|=p}f=c.action,Ca&&t(a,f),a=c.hasEagerState?c.eagerState:t(a,f)}else p={lane:f,revertLane:c.revertLane,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null},null===u?(s=u=p,l=a):u=u.next=p,va.lanes|=f,pu|=f;c=c.next}while(null!==c&&c!==n);if(null===u?l=a:u.next=s,!Kt(a,e.memoizedState)&&(Ol=!0,d&&null!==(t=Mi)))throw t;e.memoizedState=a,e.baseState=l,e.baseQueue=u,r.lastRenderedState=a}return null===i&&(r.lanes=0),[e.memoizedState,r.dispatch]}function $a(e){var n=Ua(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=t.dispatch,i=t.pending,a=n.memoizedState;if(null!==i){t.pending=null;var l=i=i.next;do{a=e(a,l.action),l=l.next}while(l!==i);Kt(a,n.memoizedState)||(Ol=!0),n.memoizedState=a,null===n.baseQueue&&(n.baseState=a),t.lastRenderedState=a}return[a,r]}function Ga(e,n,t){var r=va,i=Ua(),a=ai;if(a){if(void 0===t)throw Error(o(407));t=t()}else t=n();var l=!Kt((wa||i).memoizedState,t);if(l&&(i.memoizedState=t,Ol=!0),i=i.queue,yo(2048,8,Xa.bind(null,r,i,e),[e]),i.getSnapshot!==n||l||null!==xa&&1&xa.memoizedState.tag){if(r.flags|=2048,mo(9,{destroy:void 0,resource:void 0},Ka.bind(null,r,i,t,n),null),null===ru)throw Error(o(349));a||0!==(124&ba)||Qa(r,n,t)}return t}function Qa(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=va.updateQueue)?(n={lastEffect:null,events:null,stores:null,memoCache:null},va.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Ka(e,n,t,r){n.value=t,n.getSnapshot=r,Ya(n)&&Ja(e)}function Xa(e,n,t){return t((function(){Ya(n)&&Ja(e)}))}function Ya(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!Kt(e,t)}catch(r){return!0}}function Ja(e){var n=qr(e,2);null!==n&&ju(n,e,2)}function Za(e){var n=Ma();if("function"===typeof e){var t=e;if(e=t(),Ca){fe(!0);try{t()}finally{fe(!1)}}}return n.memoizedState=n.baseState=e,n.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ba,lastRenderedState:e},n}function eo(e,n,t,r){return e.baseState=t,Va(e,wa,"function"===typeof r?r:Ba)}function no(e,n,t,r,i){if(Wo(e))throw Error(o(485));if(null!==(e=n.action)){var a={payload:i,action:e,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(e){a.listeners.push(e)}};null!==z.T?t(!0):a.isTransition=!1,r(a),null===(t=n.pending)?(a.next=n.pending=a,to(n,a)):(a.next=t.next,n.pending=t.next=a)}}function to(e,n){var t=n.action,r=n.payload,i=e.state;if(n.isTransition){var a=z.T,o={};z.T=o;try{var l=t(i,r),s=z.S;null!==s&&s(o,l),ro(e,n,l)}catch(u){ao(e,n,u)}finally{z.T=a}}else try{ro(e,n,a=t(i,r))}catch(c){ao(e,n,c)}}function ro(e,n,t){null!==t&&"object"===typeof t&&"function"===typeof t.then?t.then((function(t){io(e,n,t)}),(function(t){return ao(e,n,t)})):io(e,n,t)}function io(e,n,t){n.status="fulfilled",n.value=t,oo(n),e.state=t,null!==(n=e.pending)&&((t=n.next)===n?e.pending=null:(t=t.next,n.next=t,to(e,t)))}function ao(e,n,t){var r=e.pending;if(e.pending=null,null!==r){r=r.next;do{n.status="rejected",n.reason=t,oo(n),n=n.next}while(n!==r)}e.action=null}function oo(e){e=e.listeners;for(var n=0;n<e.length;n++)(0,e[n])()}function lo(e,n){return n}function so(e,n){if(ai){var t=ru.formState;if(null!==t){e:{var r=va;if(ai){if(ii){n:{for(var i=ii,a=li;8!==i.nodeType;){if(!a){i=null;break n}if(null===(i=yd(i.nextSibling))){i=null;break n}}i="F!"===(a=i.data)||"F"===a?i:null}if(i){ii=yd(i.nextSibling),r="F!"===i.data;break e}}ui(r)}r=!1}r&&(n=t[0])}}return(t=Ma()).memoizedState=t.baseState=n,r={pending:null,lanes:0,dispatch:null,lastRenderedReducer:lo,lastRenderedState:n},t.queue=r,t=Uo.bind(null,va,r),r.dispatch=t,r=Za(!1),a=Ao.bind(null,va,!1,r.queue),i={state:n,dispatch:null,action:e,pending:null},(r=Ma()).queue=i,t=no.bind(null,va,i,a,t),i.dispatch=t,r.memoizedState=e,[n,t,!1]}function uo(e){return co(Ua(),wa,e)}function co(e,n,t){if(n=Va(e,n,lo)[0],e=Ha(Ba)[0],"object"===typeof n&&null!==n&&"function"===typeof n.then)try{var r=Ia(n)}catch(o){if(o===Vi)throw Gi;throw o}else r=n;var i=(n=Ua()).queue,a=i.dispatch;return t!==n.memoizedState&&(va.flags|=2048,mo(9,{destroy:void 0,resource:void 0},fo.bind(null,i,t),null)),[r,a,e]}function fo(e,n){e.action=n}function po(e){var n=Ua(),t=wa;if(null!==t)return co(n,t,e);Ua(),n=n.memoizedState;var r=(t=Ua()).queue.dispatch;return t.memoizedState=e,[n,r,!1]}function mo(e,n,t,r){return e={tag:e,create:t,deps:r,inst:n,next:null},null===(n=va.updateQueue)&&(n={lastEffect:null,events:null,stores:null,memoCache:null},va.updateQueue=n),null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function ho(){return Ua().memoizedState}function go(e,n,t,r){var i=Ma();r=void 0===r?null:r,va.flags|=e,i.memoizedState=mo(1|n,{destroy:void 0,resource:void 0},t,r)}function yo(e,n,t,r){var i=Ua();r=void 0===r?null:r;var a=i.memoizedState.inst;null!==wa&&null!==r&&La(r,wa.memoizedState.deps)?i.memoizedState=mo(n,a,t,r):(va.flags|=e,i.memoizedState=mo(1|n,a,t,r))}function bo(e,n){go(8390656,8,e,n)}function vo(e,n){yo(2048,8,e,n)}function wo(e,n){return yo(4,2,e,n)}function xo(e,n){return yo(4,4,e,n)}function ko(e,n){if("function"===typeof n){e=e();var t=n(e);return function(){"function"===typeof t?t():n(null)}}if(null!==n&&void 0!==n)return e=e(),n.current=e,function(){n.current=null}}function So(e,n,t){t=null!==t&&void 0!==t?t.concat([e]):null,yo(4,4,ko.bind(null,n,e),t)}function Co(){}function _o(e,n){var t=Ua();n=void 0===n?null:n;var r=t.memoizedState;return null!==n&&La(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Eo(e,n){var t=Ua();n=void 0===n?null:n;var r=t.memoizedState;if(null!==n&&La(n,r[1]))return r[0];if(r=e(),Ca){fe(!0);try{e()}finally{fe(!1)}}return t.memoizedState=[r,n],r}function Oo(e,n,t){return void 0===t||0!==(1073741824&ba)?e.memoizedState=n:(e.memoizedState=t,e=Du(),va.lanes|=e,pu|=e,t)}function To(e,n,t,r){return Kt(t,n)?t:null!==pa.current?(e=Oo(e,t,r),Kt(e,n)||(Ol=!0),e):0===(42&ba)?(Ol=!0,e.memoizedState=t):(e=Du(),va.lanes|=e,pu|=e,n)}function No(e,n,t,r,i){var a=D.p;D.p=0!==a&&8>a?a:8;var o=z.T,l={};z.T=l,Ao(e,!1,n,t);try{var s=i(),u=z.S;if(null!==u&&u(l,s),null!==s&&"object"===typeof s&&"function"===typeof s.then)Io(e,n,function(e,n){var t=[],r={status:"pending",value:null,reason:null,then:function(e){t.push(e)}};return e.then((function(){r.status="fulfilled",r.value=n;for(var e=0;e<t.length;e++)(0,t[e])(n)}),(function(e){for(r.status="rejected",r.reason=e,e=0;e<t.length;e++)(0,t[e])(void 0)})),r}(s,r),zu());else Io(e,n,r,zu())}catch(c){Io(e,n,{then:function(){},status:"rejected",reason:c},zu())}finally{D.p=a,z.T=o}}function Lo(){}function qo(e,n,t,r){if(5!==e.tag)throw Error(o(476));var i=Po(e).queue;No(e,i,n,j,null===t?Lo:function(){return Fo(e),t(r)})}function Po(e){var n=e.memoizedState;if(null!==n)return n;var t={};return(n={memoizedState:j,baseState:j,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ba,lastRenderedState:j},next:null}).next={memoizedState:t,baseState:t,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ba,lastRenderedState:t},next:null},e.memoizedState=n,null!==(e=e.alternate)&&(e.memoizedState=n),n}function Fo(e){Io(e,Po(e).next.queue,{},zu())}function zo(){return Ei(Qd)}function Do(){return Ua().memoizedState}function jo(){return Ua().memoizedState}function Ro(e){for(var n=e.return;null!==n;){switch(n.tag){case 24:case 3:var t=zu(),r=aa(n,e=ia(t),t);return null!==r&&(ju(r,n,t),oa(r,n,t)),n={cache:Fi()},void(e.payload=n)}n=n.return}}function Mo(e,n,t){var r=zu();t={lane:r,revertLane:0,action:t,hasEagerState:!1,eagerState:null,next:null},Wo(e)?Bo(n,t):null!==(t=Lr(e,n,t,r))&&(ju(t,e,r),Ho(t,n,r))}function Uo(e,n,t){Io(e,n,t,zu())}function Io(e,n,t,r){var i={lane:r,revertLane:0,action:t,hasEagerState:!1,eagerState:null,next:null};if(Wo(e))Bo(n,i);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=n.lastRenderedReducer))try{var o=n.lastRenderedState,l=a(o,t);if(i.hasEagerState=!0,i.eagerState=l,Kt(l,o))return Nr(e,n,i,0),null===ru&&Tr(),!1}catch(s){}if(null!==(t=Lr(e,n,i,r)))return ju(t,e,r),Ho(t,n,r),!0}return!1}function Ao(e,n,t,r){if(r={lane:2,revertLane:Nc(),action:r,hasEagerState:!1,eagerState:null,next:null},Wo(e)){if(n)throw Error(o(479))}else null!==(n=Lr(e,t,r,2))&&ju(n,e,2)}function Wo(e){var n=e.alternate;return e===va||null!==n&&n===va}function Bo(e,n){Sa=ka=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function Ho(e,n,t){if(0!==(4194048&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,Oe(e,t)}}var Vo={readContext:Ei,use:Aa,useCallback:Na,useContext:Na,useEffect:Na,useImperativeHandle:Na,useLayoutEffect:Na,useInsertionEffect:Na,useMemo:Na,useReducer:Na,useRef:Na,useState:Na,useDebugValue:Na,useDeferredValue:Na,useTransition:Na,useSyncExternalStore:Na,useId:Na,useHostTransitionStatus:Na,useFormState:Na,useActionState:Na,useOptimistic:Na,useMemoCache:Na,useCacheRefresh:Na},$o={readContext:Ei,use:Aa,useCallback:function(e,n){return Ma().memoizedState=[e,void 0===n?null:n],e},useContext:Ei,useEffect:bo,useImperativeHandle:function(e,n,t){t=null!==t&&void 0!==t?t.concat([e]):null,go(4194308,4,ko.bind(null,n,e),t)},useLayoutEffect:function(e,n){return go(4194308,4,e,n)},useInsertionEffect:function(e,n){go(4,2,e,n)},useMemo:function(e,n){var t=Ma();n=void 0===n?null:n;var r=e();if(Ca){fe(!0);try{e()}finally{fe(!1)}}return t.memoizedState=[r,n],r},useReducer:function(e,n,t){var r=Ma();if(void 0!==t){var i=t(n);if(Ca){fe(!0);try{t(n)}finally{fe(!1)}}}else i=n;return r.memoizedState=r.baseState=i,e={pending:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:i},r.queue=e,e=e.dispatch=Mo.bind(null,va,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ma().memoizedState=e},useState:function(e){var n=(e=Za(e)).queue,t=Uo.bind(null,va,n);return n.dispatch=t,[e.memoizedState,t]},useDebugValue:Co,useDeferredValue:function(e,n){return Oo(Ma(),e,n)},useTransition:function(){var e=Za(!1);return e=No.bind(null,va,e.queue,!0,!1),Ma().memoizedState=e,[!1,e]},useSyncExternalStore:function(e,n,t){var r=va,i=Ma();if(ai){if(void 0===t)throw Error(o(407));t=t()}else{if(t=n(),null===ru)throw Error(o(349));0!==(124&au)||Qa(r,n,t)}i.memoizedState=t;var a={value:t,getSnapshot:n};return i.queue=a,bo(Xa.bind(null,r,a,e),[e]),r.flags|=2048,mo(9,{destroy:void 0,resource:void 0},Ka.bind(null,r,a,t,n),null),t},useId:function(){var e=Ma(),n=ru.identifierPrefix;if(ai){var t=Jr;n="\xab"+n+"R"+(t=(Yr&~(1<<32-pe(Yr)-1)).toString(32)+t),0<(t=_a++)&&(n+="H"+t.toString(32)),n+="\xbb"}else n="\xab"+n+"r"+(t=Ta++).toString(32)+"\xbb";return e.memoizedState=n},useHostTransitionStatus:zo,useFormState:so,useActionState:so,useOptimistic:function(e){var n=Ma();n.memoizedState=n.baseState=e;var t={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return n.queue=t,n=Ao.bind(null,va,!0,t),t.dispatch=n,[e,n]},useMemoCache:Wa,useCacheRefresh:function(){return Ma().memoizedState=Ro.bind(null,va)}},Go={readContext:Ei,use:Aa,useCallback:_o,useContext:Ei,useEffect:vo,useImperativeHandle:So,useInsertionEffect:wo,useLayoutEffect:xo,useMemo:Eo,useReducer:Ha,useRef:ho,useState:function(){return Ha(Ba)},useDebugValue:Co,useDeferredValue:function(e,n){return To(Ua(),wa.memoizedState,e,n)},useTransition:function(){var e=Ha(Ba)[0],n=Ua().memoizedState;return["boolean"===typeof e?e:Ia(e),n]},useSyncExternalStore:Ga,useId:Do,useHostTransitionStatus:zo,useFormState:uo,useActionState:uo,useOptimistic:function(e,n){return eo(Ua(),0,e,n)},useMemoCache:Wa,useCacheRefresh:jo},Qo={readContext:Ei,use:Aa,useCallback:_o,useContext:Ei,useEffect:vo,useImperativeHandle:So,useInsertionEffect:wo,useLayoutEffect:xo,useMemo:Eo,useReducer:$a,useRef:ho,useState:function(){return $a(Ba)},useDebugValue:Co,useDeferredValue:function(e,n){var t=Ua();return null===wa?Oo(t,e,n):To(t,wa.memoizedState,e,n)},useTransition:function(){var e=$a(Ba)[0],n=Ua().memoizedState;return["boolean"===typeof e?e:Ia(e),n]},useSyncExternalStore:Ga,useId:Do,useHostTransitionStatus:zo,useFormState:po,useActionState:po,useOptimistic:function(e,n){var t=Ua();return null!==wa?eo(t,0,e,n):(t.baseState=e,[e,t.queue.dispatch])},useMemoCache:Wa,useCacheRefresh:jo},Ko=null,Xo=0;function Yo(e){var n=Xo;return Xo+=1,null===Ko&&(Ko=[]),Yi(Ko,e,n)}function Jo(e,n){n=n.props.ref,e.ref=void 0!==n?n:null}function Zo(e,n){if(n.$$typeof===p)throw Error(o(525));throw e=Object.prototype.toString.call(n),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function el(e){return(0,e._init)(e._payload)}function nl(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e){for(var n=new Map;null!==e;)null!==e.key?n.set(e.key,e):n.set(e.index,e),e=e.sibling;return n}function i(e,n){return(e=Mr(e,n)).index=0,e.sibling=null,e}function a(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=67108866,t):r:(n.flags|=67108866,t):(n.flags|=1048576,t)}function l(n){return e&&null===n.alternate&&(n.flags|=67108866),n}function s(e,n,t,r){return null===n||6!==n.tag?((n=Wr(t,e.mode,r)).return=e,n):((n=i(n,t)).return=e,n)}function u(e,n,t,r){var a=t.type;return a===g?d(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===E&&el(a)===n.type)?(Jo(n=i(n,t.props),t),n.return=e,n):(Jo(n=Ir(t.type,t.key,t.props,null,e.mode,r),t),n.return=e,n)}function c(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Br(t,e.mode,r)).return=e,n):((n=i(n,t.children||[])).return=e,n)}function d(e,n,t,r,a){return null===n||7!==n.tag?((n=Ar(t,e.mode,r,a)).return=e,n):((n=i(n,t)).return=e,n)}function f(e,n,t){if("string"===typeof n&&""!==n||"number"===typeof n||"bigint"===typeof n)return(n=Wr(""+n,e.mode,t)).return=e,n;if("object"===typeof n&&null!==n){switch(n.$$typeof){case m:return Jo(t=Ir(n.type,n.key,n.props,null,e.mode,t),n),t.return=e,t;case h:return(n=Br(n,e.mode,t)).return=e,n;case E:return f(e,n=(0,n._init)(n._payload),t)}if(F(n)||L(n))return(n=Ar(n,e.mode,t,null)).return=e,n;if("function"===typeof n.then)return f(e,Yo(n),t);if(n.$$typeof===x)return f(e,Oi(e,n),t);Zo(e,n)}return null}function p(e,n,t,r){var i=null!==n?n.key:null;if("string"===typeof t&&""!==t||"number"===typeof t||"bigint"===typeof t)return null!==i?null:s(e,n,""+t,r);if("object"===typeof t&&null!==t){switch(t.$$typeof){case m:return t.key===i?u(e,n,t,r):null;case h:return t.key===i?c(e,n,t,r):null;case E:return p(e,n,t=(i=t._init)(t._payload),r)}if(F(t)||L(t))return null!==i?null:d(e,n,t,r,null);if("function"===typeof t.then)return p(e,n,Yo(t),r);if(t.$$typeof===x)return p(e,n,Oi(e,t),r);Zo(e,t)}return null}function y(e,n,t,r,i){if("string"===typeof r&&""!==r||"number"===typeof r||"bigint"===typeof r)return s(n,e=e.get(t)||null,""+r,i);if("object"===typeof r&&null!==r){switch(r.$$typeof){case m:return u(n,e=e.get(null===r.key?t:r.key)||null,r,i);case h:return c(n,e=e.get(null===r.key?t:r.key)||null,r,i);case E:return y(e,n,t,r=(0,r._init)(r._payload),i)}if(F(r)||L(r))return d(n,e=e.get(t)||null,r,i,null);if("function"===typeof r.then)return y(e,n,t,Yo(r),i);if(r.$$typeof===x)return y(e,n,t,Oi(n,r),i);Zo(n,r)}return null}function b(s,u,c,d){if("object"===typeof c&&null!==c&&c.type===g&&null===c.key&&(c=c.props.children),"object"===typeof c&&null!==c){switch(c.$$typeof){case m:e:{for(var v=c.key;null!==u;){if(u.key===v){if((v=c.type)===g){if(7===u.tag){t(s,u.sibling),(d=i(u,c.props.children)).return=s,s=d;break e}}else if(u.elementType===v||"object"===typeof v&&null!==v&&v.$$typeof===E&&el(v)===u.type){t(s,u.sibling),Jo(d=i(u,c.props),c),d.return=s,s=d;break e}t(s,u);break}n(s,u),u=u.sibling}c.type===g?((d=Ar(c.props.children,s.mode,d,c.key)).return=s,s=d):(Jo(d=Ir(c.type,c.key,c.props,null,s.mode,d),c),d.return=s,s=d)}return l(s);case h:e:{for(v=c.key;null!==u;){if(u.key===v){if(4===u.tag&&u.stateNode.containerInfo===c.containerInfo&&u.stateNode.implementation===c.implementation){t(s,u.sibling),(d=i(u,c.children||[])).return=s,s=d;break e}t(s,u);break}n(s,u),u=u.sibling}(d=Br(c,s.mode,d)).return=s,s=d}return l(s);case E:return b(s,u,c=(v=c._init)(c._payload),d)}if(F(c))return function(i,o,l,s){for(var u=null,c=null,d=o,m=o=0,h=null;null!==d&&m<l.length;m++){d.index>m?(h=d,d=null):h=d.sibling;var g=p(i,d,l[m],s);if(null===g){null===d&&(d=h);break}e&&d&&null===g.alternate&&n(i,d),o=a(g,o,m),null===c?u=g:c.sibling=g,c=g,d=h}if(m===l.length)return t(i,d),ai&&Zr(i,m),u;if(null===d){for(;m<l.length;m++)null!==(d=f(i,l[m],s))&&(o=a(d,o,m),null===c?u=d:c.sibling=d,c=d);return ai&&Zr(i,m),u}for(d=r(d);m<l.length;m++)null!==(h=y(d,i,m,l[m],s))&&(e&&null!==h.alternate&&d.delete(null===h.key?m:h.key),o=a(h,o,m),null===c?u=h:c.sibling=h,c=h);return e&&d.forEach((function(e){return n(i,e)})),ai&&Zr(i,m),u}(s,u,c,d);if(L(c)){if("function"!==typeof(v=L(c)))throw Error(o(150));return function(i,l,s,u){if(null==s)throw Error(o(151));for(var c=null,d=null,m=l,h=l=0,g=null,b=s.next();null!==m&&!b.done;h++,b=s.next()){m.index>h?(g=m,m=null):g=m.sibling;var v=p(i,m,b.value,u);if(null===v){null===m&&(m=g);break}e&&m&&null===v.alternate&&n(i,m),l=a(v,l,h),null===d?c=v:d.sibling=v,d=v,m=g}if(b.done)return t(i,m),ai&&Zr(i,h),c;if(null===m){for(;!b.done;h++,b=s.next())null!==(b=f(i,b.value,u))&&(l=a(b,l,h),null===d?c=b:d.sibling=b,d=b);return ai&&Zr(i,h),c}for(m=r(m);!b.done;h++,b=s.next())null!==(b=y(m,i,h,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?h:b.key),l=a(b,l,h),null===d?c=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return n(i,e)})),ai&&Zr(i,h),c}(s,u,c=v.call(c),d)}if("function"===typeof c.then)return b(s,u,Yo(c),d);if(c.$$typeof===x)return b(s,u,Oi(s,c),d);Zo(s,c)}return"string"===typeof c&&""!==c||"number"===typeof c||"bigint"===typeof c?(c=""+c,null!==u&&6===u.tag?(t(s,u.sibling),(d=i(u,c)).return=s,s=d):(t(s,u),(d=Wr(c,s.mode,d)).return=s,s=d),l(s)):t(s,u)}return function(e,n,t,r){try{Xo=0;var i=b(e,n,t,r);return Ko=null,i}catch(o){if(o===Vi||o===Gi)throw o;var a=jr(29,o,null,e.mode);return a.lanes=r,a.return=e,a}}}var tl=nl(!0),rl=nl(!1),il=U(null),al=null;function ol(e){var n=e.alternate;A(cl,1&cl.current),A(il,e),null===al&&(null===n||null!==pa.current||null!==n.memoizedState)&&(al=e)}function ll(e){if(22===e.tag){if(A(cl,cl.current),A(il,e),null===al){var n=e.alternate;null!==n&&null!==n.memoizedState&&(al=e)}}else sl()}function sl(){A(cl,cl.current),A(il,il.current)}function ul(e){I(il),al===e&&(al=null),I(cl)}var cl=U(0);function dl(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||gd(t)))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(0!==(128&n.flags))return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}function fl(e,n,t,r){t=null===(t=t(r,n=e.memoizedState))||void 0===t?n:f({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var pl={enqueueSetState:function(e,n,t){e=e._reactInternals;var r=zu(),i=ia(r);i.payload=n,void 0!==t&&null!==t&&(i.callback=t),null!==(n=aa(e,i,r))&&(ju(n,e,r),oa(n,e,r))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=zu(),i=ia(r);i.tag=1,i.payload=n,void 0!==t&&null!==t&&(i.callback=t),null!==(n=aa(e,i,r))&&(ju(n,e,r),oa(n,e,r))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=zu(),r=ia(t);r.tag=2,void 0!==n&&null!==n&&(r.callback=n),null!==(n=aa(e,r,t))&&(ju(n,e,t),oa(n,e,t))}};function ml(e,n,t,r,i,a,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,o):!n.prototype||!n.prototype.isPureReactComponent||(!Xt(t,r)||!Xt(i,a))}function hl(e,n,t,r){e=n.state,"function"===typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"===typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&pl.enqueueReplaceState(n,n.state,null)}function gl(e,n){var t=n;if("ref"in n)for(var r in t={},n)"ref"!==r&&(t[r]=n[r]);if(e=e.defaultProps)for(var i in t===n&&(t=f({},t)),e)void 0===t[i]&&(t[i]=e[i]);return t}var yl="function"===typeof reportError?reportError:function(e){if("object"===typeof window&&"function"===typeof window.ErrorEvent){var n=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:"object"===typeof e&&null!==e&&"string"===typeof e.message?String(e.message):String(e),error:e});if(!window.dispatchEvent(n))return}else if("object"===typeof process&&"function"===typeof process.emit)return void process.emit("uncaughtException",e);console.error(e)};function bl(e){yl(e)}function vl(e){console.error(e)}function wl(e){yl(e)}function xl(e,n){try{(0,e.onUncaughtError)(n.value,{componentStack:n.stack})}catch(t){setTimeout((function(){throw t}))}}function kl(e,n,t){try{(0,e.onCaughtError)(t.value,{componentStack:t.stack,errorBoundary:1===n.tag?n.stateNode:null})}catch(r){setTimeout((function(){throw r}))}}function Sl(e,n,t){return(t=ia(t)).tag=3,t.payload={element:null},t.callback=function(){xl(e,n)},t}function Cl(e){return(e=ia(e)).tag=3,e}function _l(e,n,t,r){var i=t.type.getDerivedStateFromError;if("function"===typeof i){var a=r.value;e.payload=function(){return i(a)},e.callback=function(){kl(n,t,r)}}var o=t.stateNode;null!==o&&"function"===typeof o.componentDidCatch&&(e.callback=function(){kl(n,t,r),"function"!==typeof i&&(null===Cu?Cu=new Set([this]):Cu.add(this));var e=r.stack;this.componentDidCatch(r.value,{componentStack:null!==e?e:""})})}var El=Error(o(461)),Ol=!1;function Tl(e,n,t,r){n.child=null===e?rl(n,null,t,r):tl(n,e.child,t,r)}function Nl(e,n,t,r,i){t=t.render;var a=n.ref;if("ref"in r){var o={};for(var l in r)"ref"!==l&&(o[l]=r[l])}else o=r;return _i(n),r=qa(e,n,t,o,a,i),l=Da(),null===e||Ol?(ai&&l&&ni(n),n.flags|=1,Tl(e,n,r,i),n.child):(ja(e,n,i),Kl(e,n,i))}function Ll(e,n,t,r,i){if(null===e){var a=t.type;return"function"!==typeof a||Rr(a)||void 0!==a.defaultProps||null!==t.compare?((e=Ir(t.type,null,r,n,n.mode,i)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=a,ql(e,n,a,r,i))}if(a=e.child,!Xl(e,i)){var o=a.memoizedProps;if((t=null!==(t=t.compare)?t:Xt)(o,r)&&e.ref===n.ref)return Kl(e,n,i)}return n.flags|=1,(e=Mr(a,r)).ref=n.ref,e.return=n,n.child=e}function ql(e,n,t,r,i){if(null!==e){var a=e.memoizedProps;if(Xt(a,r)&&e.ref===n.ref){if(Ol=!1,n.pendingProps=r=a,!Xl(e,i))return n.lanes=e.lanes,Kl(e,n,i);0!==(131072&e.flags)&&(Ol=!0)}}return Dl(e,n,t,r,i)}function Pl(e,n,t){var r=n.pendingProps,i=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode){if(0!==(128&n.flags)){if(r=null!==a?a.baseLanes|t:t,null!==e){for(i=n.child=e.child,a=0;null!==i;)a=a|i.lanes|i.childLanes,i=i.sibling;n.childLanes=a&~r}else n.childLanes=0,n.child=null;return Fl(e,n,r,t)}if(0===(536870912&t))return n.lanes=n.childLanes=536870912,Fl(e,n,null!==a?a.baseLanes|t:t,t);n.memoizedState={baseLanes:0,cachePool:null},null!==e&&Bi(0,null!==a?a.cachePool:null),null!==a?ha(n,a):ga(),ll(n)}else null!==a?(Bi(0,a.cachePool),ha(n,a),sl(),n.memoizedState=null):(null!==e&&Bi(0,null),ga(),sl());return Tl(e,n,i,t),n.child}function Fl(e,n,t,r){var i=Wi();return i=null===i?null:{parent:Pi._currentValue,pool:i},n.memoizedState={baseLanes:t,cachePool:i},null!==e&&Bi(0,null),ga(),ll(n),null!==e&&Si(e,n,r,!0),null}function zl(e,n){var t=n.ref;if(null===t)null!==e&&null!==e.ref&&(n.flags|=4194816);else{if("function"!==typeof t&&"object"!==typeof t)throw Error(o(284));null!==e&&e.ref===t||(n.flags|=4194816)}}function Dl(e,n,t,r,i){return _i(n),t=qa(e,n,t,r,void 0,i),r=Da(),null===e||Ol?(ai&&r&&ni(n),n.flags|=1,Tl(e,n,t,i),n.child):(ja(e,n,i),Kl(e,n,i))}function jl(e,n,t,r,i,a){return _i(n),n.updateQueue=null,t=Fa(n,r,t,i),Pa(e),r=Da(),null===e||Ol?(ai&&r&&ni(n),n.flags|=1,Tl(e,n,t,a),n.child):(ja(e,n,a),Kl(e,n,a))}function Rl(e,n,t,r,i){if(_i(n),null===n.stateNode){var a=zr,o=t.contextType;"object"===typeof o&&null!==o&&(a=Ei(o)),a=new t(r,a),n.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,a.updater=pl,n.stateNode=a,a._reactInternals=n,(a=n.stateNode).props=r,a.state=n.memoizedState,a.refs={},ta(n),o=t.contextType,a.context="object"===typeof o&&null!==o?Ei(o):zr,a.state=n.memoizedState,"function"===typeof(o=t.getDerivedStateFromProps)&&(fl(n,t,o,r),a.state=n.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(o=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),o!==a.state&&pl.enqueueReplaceState(a,a.state,null),ca(n,r,a,i),ua(),a.state=n.memoizedState),"function"===typeof a.componentDidMount&&(n.flags|=4194308),r=!0}else if(null===e){a=n.stateNode;var l=n.memoizedProps,s=gl(t,l);a.props=s;var u=a.context,c=t.contextType;o=zr,"object"===typeof c&&null!==c&&(o=Ei(c));var d=t.getDerivedStateFromProps;c="function"===typeof d||"function"===typeof a.getSnapshotBeforeUpdate,l=n.pendingProps!==l,c||"function"!==typeof a.UNSAFE_componentWillReceiveProps&&"function"!==typeof a.componentWillReceiveProps||(l||u!==o)&&hl(n,a,r,o),na=!1;var f=n.memoizedState;a.state=f,ca(n,r,a,i),ua(),u=n.memoizedState,l||f!==u||na?("function"===typeof d&&(fl(n,t,d,r),u=n.memoizedState),(s=na||ml(n,t,s,r,f,u,o))?(c||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||("function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"===typeof a.componentDidMount&&(n.flags|=4194308)):("function"===typeof a.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=u),a.props=r,a.state=u,a.context=o,r=s):("function"===typeof a.componentDidMount&&(n.flags|=4194308),r=!1)}else{a=n.stateNode,ra(e,n),c=gl(t,o=n.memoizedProps),a.props=c,d=n.pendingProps,f=a.context,u=t.contextType,s=zr,"object"===typeof u&&null!==u&&(s=Ei(u)),(u="function"===typeof(l=t.getDerivedStateFromProps)||"function"===typeof a.getSnapshotBeforeUpdate)||"function"!==typeof a.UNSAFE_componentWillReceiveProps&&"function"!==typeof a.componentWillReceiveProps||(o!==d||f!==s)&&hl(n,a,r,s),na=!1,f=n.memoizedState,a.state=f,ca(n,r,a,i),ua();var p=n.memoizedState;o!==d||f!==p||na||null!==e&&null!==e.dependencies&&Ci(e.dependencies)?("function"===typeof l&&(fl(n,t,l,r),p=n.memoizedState),(c=na||ml(n,t,c,r,f,p,s)||null!==e&&null!==e.dependencies&&Ci(e.dependencies))?(u||"function"!==typeof a.UNSAFE_componentWillUpdate&&"function"!==typeof a.componentWillUpdate||("function"===typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,s),"function"===typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,s)),"function"===typeof a.componentDidUpdate&&(n.flags|=4),"function"===typeof a.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!==typeof a.componentDidUpdate||o===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof a.getSnapshotBeforeUpdate||o===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=p),a.props=r,a.state=p,a.context=s,r=c):("function"!==typeof a.componentDidUpdate||o===e.memoizedProps&&f===e.memoizedState||(n.flags|=4),"function"!==typeof a.getSnapshotBeforeUpdate||o===e.memoizedProps&&f===e.memoizedState||(n.flags|=1024),r=!1)}return a=r,zl(e,n),r=0!==(128&n.flags),a||r?(a=n.stateNode,t=r&&"function"!==typeof t.getDerivedStateFromError?null:a.render(),n.flags|=1,null!==e&&r?(n.child=tl(n,e.child,null,i),n.child=tl(n,null,t,i)):Tl(e,n,t,i),n.memoizedState=a.state,e=n.child):e=Kl(e,n,i),e}function Ml(e,n,t,r){return pi(),n.flags|=256,Tl(e,n,t,r),n.child}var Ul={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null};function Il(e){return{baseLanes:e,cachePool:Hi()}}function Al(e,n,t){return e=null!==e?e.childLanes&~t:0,n&&(e|=gu),e}function Wl(e,n,t){var r,i=n.pendingProps,a=!1,l=0!==(128&n.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!==(2&cl.current)),r&&(a=!0,n.flags&=-129),r=0!==(32&n.flags),n.flags&=-33,null===e){if(ai){if(a?ol(n):sl(),ai){var s,u=ii;if(s=u){e:{for(s=u,u=li;8!==s.nodeType;){if(!u){u=null;break e}if(null===(s=yd(s.nextSibling))){u=null;break e}}u=s}null!==u?(n.memoizedState={dehydrated:u,treeContext:null!==Xr?{id:Yr,overflow:Jr}:null,retryLane:536870912,hydrationErrors:null},(s=jr(18,null,null,0)).stateNode=u,s.return=n,n.child=s,ri=n,ii=null,s=!0):s=!1}s||ui(n)}if(null!==(u=n.memoizedState)&&null!==(u=u.dehydrated))return gd(u)?n.lanes=32:n.lanes=536870912,null;ul(n)}return u=i.children,i=i.fallback,a?(sl(),u=Hl({mode:"hidden",children:u},a=n.mode),i=Ar(i,a,t,null),u.return=n,i.return=n,u.sibling=i,n.child=u,(a=n.child).memoizedState=Il(t),a.childLanes=Al(e,r,t),n.memoizedState=Ul,i):(ol(n),Bl(n,u))}if(null!==(s=e.memoizedState)&&null!==(u=s.dehydrated)){if(l)256&n.flags?(ol(n),n.flags&=-257,n=Vl(e,n,t)):null!==n.memoizedState?(sl(),n.child=e.child,n.flags|=128,n=null):(sl(),a=i.fallback,u=n.mode,i=Hl({mode:"visible",children:i.children},u),(a=Ar(a,u,t,null)).flags|=2,i.return=n,a.return=n,i.sibling=a,n.child=i,tl(n,e.child,null,t),(i=n.child).memoizedState=Il(t),i.childLanes=Al(e,r,t),n.memoizedState=Ul,n=a);else if(ol(n),gd(u)){if(r=u.nextSibling&&u.nextSibling.dataset)var c=r.dgst;r=c,(i=Error(o(419))).stack="",i.digest=r,hi({value:i,source:null,stack:null}),n=Vl(e,n,t)}else if(Ol||Si(e,n,t,!1),r=0!==(t&e.childLanes),Ol||r){if(null!==(r=ru)&&(0!==(i=0!==((i=0!==(42&(i=t&-t))?1:Te(i))&(r.suspendedLanes|t))?0:i)&&i!==s.retryLane))throw s.retryLane=i,qr(e,i),ju(r,e,i),El;"$?"===u.data||Gu(),n=Vl(e,n,t)}else"$?"===u.data?(n.flags|=192,n.child=e.child,n=null):(e=s.treeContext,ii=yd(u.nextSibling),ri=n,ai=!0,oi=null,li=!1,null!==e&&(Qr[Kr++]=Yr,Qr[Kr++]=Jr,Qr[Kr++]=Xr,Yr=e.id,Jr=e.overflow,Xr=n),(n=Bl(n,i.children)).flags|=4096);return n}return a?(sl(),a=i.fallback,u=n.mode,c=(s=e.child).sibling,(i=Mr(s,{mode:"hidden",children:i.children})).subtreeFlags=65011712&s.subtreeFlags,null!==c?a=Mr(c,a):(a=Ar(a,u,t,null)).flags|=2,a.return=n,i.return=n,i.sibling=a,n.child=i,i=a,a=n.child,null===(u=e.child.memoizedState)?u=Il(t):(null!==(s=u.cachePool)?(c=Pi._currentValue,s=s.parent!==c?{parent:c,pool:c}:s):s=Hi(),u={baseLanes:u.baseLanes|t,cachePool:s}),a.memoizedState=u,a.childLanes=Al(e,r,t),n.memoizedState=Ul,i):(ol(n),e=(t=e.child).sibling,(t=Mr(t,{mode:"visible",children:i.children})).return=n,t.sibling=null,null!==e&&(null===(r=n.deletions)?(n.deletions=[e],n.flags|=16):r.push(e)),n.child=t,n.memoizedState=null,t)}function Bl(e,n){return(n=Hl({mode:"visible",children:n},e.mode)).return=e,e.child=n}function Hl(e,n){return(e=jr(22,e,null,n)).lanes=0,e.stateNode={_visibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null},e}function Vl(e,n,t){return tl(n,e.child,null,t),(e=Bl(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function $l(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),xi(e.return,n,t)}function Gl(e,n,t,r,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:i}:(a.isBackwards=n,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=t,a.tailMode=i)}function Ql(e,n,t){var r=n.pendingProps,i=r.revealOrder,a=r.tail;if(Tl(e,n,r.children,t),0!==(2&(r=cl.current)))r=1&r|2,n.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&$l(e,t,n);else if(19===e.tag)$l(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}switch(A(cl,r),i){case"forwards":for(t=n.child,i=null;null!==t;)null!==(e=t.alternate)&&null===dl(e)&&(i=t),t=t.sibling;null===(t=i)?(i=n.child,n.child=null):(i=t.sibling,t.sibling=null),Gl(n,!1,i,t,a);break;case"backwards":for(t=null,i=n.child,n.child=null;null!==i;){if(null!==(e=i.alternate)&&null===dl(e)){n.child=i;break}e=i.sibling,i.sibling=t,t=i,i=e}Gl(n,!0,t,null,a);break;case"together":Gl(n,!1,null,null,void 0);break;default:n.memoizedState=null}return n.child}function Kl(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),pu|=n.lanes,0===(t&n.childLanes)){if(null===e)return null;if(Si(e,n,t,!1),0===(t&n.childLanes))return null}if(null!==e&&n.child!==e.child)throw Error(o(153));if(null!==n.child){for(t=Mr(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Mr(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Xl(e,n){return 0!==(e.lanes&n)||!(null===(e=e.dependencies)||!Ci(e))}function Yl(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps)Ol=!0;else{if(!Xl(e,t)&&0===(128&n.flags))return Ol=!1,function(e,n,t){switch(n.tag){case 3:$(n,n.stateNode.containerInfo),vi(0,Pi,e.memoizedState.cache),pi();break;case 27:case 5:Q(n);break;case 4:$(n,n.stateNode.containerInfo);break;case 10:vi(0,n.type,n.memoizedProps.value);break;case 13:var r=n.memoizedState;if(null!==r)return null!==r.dehydrated?(ol(n),n.flags|=128,null):0!==(t&n.child.childLanes)?Wl(e,n,t):(ol(n),null!==(e=Kl(e,n,t))?e.sibling:null);ol(n);break;case 19:var i=0!==(128&e.flags);if((r=0!==(t&n.childLanes))||(Si(e,n,t,!1),r=0!==(t&n.childLanes)),i){if(r)return Ql(e,n,t);n.flags|=128}if(null!==(i=n.memoizedState)&&(i.rendering=null,i.tail=null,i.lastEffect=null),A(cl,cl.current),r)break;return null;case 22:case 23:return n.lanes=0,Pl(e,n,t);case 24:vi(0,Pi,e.memoizedState.cache)}return Kl(e,n,t)}(e,n,t);Ol=0!==(131072&e.flags)}else Ol=!1,ai&&0!==(1048576&n.flags)&&ei(n,Gr,n.index);switch(n.lanes=0,n.tag){case 16:e:{e=n.pendingProps;var r=n.elementType,i=r._init;if(r=i(r._payload),n.type=r,"function"!==typeof r){if(void 0!==r&&null!==r){if((i=r.$$typeof)===k){n.tag=11,n=Nl(null,n,r,e,t);break e}if(i===_){n.tag=14,n=Ll(null,n,r,e,t);break e}}throw n=P(r)||r,Error(o(306,n,""))}Rr(r)?(e=gl(r,e),n.tag=1,n=Rl(null,n,r,e,t)):(n.tag=0,n=Dl(null,n,r,e,t))}return n;case 0:return Dl(e,n,n.type,n.pendingProps,t);case 1:return Rl(e,n,r=n.type,i=gl(r,n.pendingProps),t);case 3:e:{if($(n,n.stateNode.containerInfo),null===e)throw Error(o(387));r=n.pendingProps;var a=n.memoizedState;i=a.element,ra(e,n),ca(n,r,null,t);var l=n.memoizedState;if(r=l.cache,vi(0,Pi,r),r!==a.cache&&ki(n,[Pi],t,!0),ua(),r=l.element,a.isDehydrated){if(a={element:r,isDehydrated:!1,cache:l.cache},n.updateQueue.baseState=a,n.memoizedState=a,256&n.flags){n=Ml(e,n,r,t);break e}if(r!==i){hi(i=Cr(Error(o(424)),n)),n=Ml(e,n,r,t);break e}if(9===(e=n.stateNode.containerInfo).nodeType)e=e.body;else e="HTML"===e.nodeName?e.ownerDocument.body:e;for(ii=yd(e.firstChild),ri=n,ai=!0,oi=null,li=!0,t=rl(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(pi(),r===i){n=Kl(e,n,t);break e}Tl(e,n,r,t)}n=n.child}return n;case 26:return zl(e,n),null===e?(t=Td(n.type,null,n.pendingProps,null))?n.memoizedState=t:ai||(t=n.type,e=n.pendingProps,(r=rd(H.current).createElement(t))[Pe]=n,r[Fe]=e,ed(r,t,e),Ve(r),n.stateNode=r):n.memoizedState=Td(n.type,e.memoizedProps,n.pendingProps,e.memoizedState),null;case 27:return Q(n),null===e&&ai&&(r=n.stateNode=wd(n.type,n.pendingProps,H.current),ri=n,li=!0,i=ii,pd(n.type)?(bd=i,ii=yd(r.firstChild)):ii=i),Tl(e,n,n.pendingProps.children,t),zl(e,n),null===e&&(n.flags|=4194304),n.child;case 5:return null===e&&ai&&((i=r=ii)&&(null!==(r=function(e,n,t,r){for(;1===e.nodeType;){var i=t;if(e.nodeName.toLowerCase()!==n.toLowerCase()){if(!r&&("INPUT"!==e.nodeName||"hidden"!==e.type))break}else if(r){if(!e[Ue])switch(n){case"meta":if(!e.hasAttribute("itemprop"))break;return e;case"link":if("stylesheet"===(a=e.getAttribute("rel"))&&e.hasAttribute("data-precedence"))break;if(a!==i.rel||e.getAttribute("href")!==(null==i.href||""===i.href?null:i.href)||e.getAttribute("crossorigin")!==(null==i.crossOrigin?null:i.crossOrigin)||e.getAttribute("title")!==(null==i.title?null:i.title))break;return e;case"style":if(e.hasAttribute("data-precedence"))break;return e;case"script":if(((a=e.getAttribute("src"))!==(null==i.src?null:i.src)||e.getAttribute("type")!==(null==i.type?null:i.type)||e.getAttribute("crossorigin")!==(null==i.crossOrigin?null:i.crossOrigin))&&a&&e.hasAttribute("async")&&!e.hasAttribute("itemprop"))break;return e;default:return e}}else{if("input"!==n||"hidden"!==e.type)return e;var a=null==i.name?null:""+i.name;if("hidden"===i.type&&e.getAttribute("name")===a)return e}if(null===(e=yd(e.nextSibling)))break}return null}(r,n.type,n.pendingProps,li))?(n.stateNode=r,ri=n,ii=yd(r.firstChild),li=!1,i=!0):i=!1),i||ui(n)),Q(n),i=n.type,a=n.pendingProps,l=null!==e?e.memoizedProps:null,r=a.children,od(i,a)?r=null:null!==l&&od(i,l)&&(n.flags|=32),null!==n.memoizedState&&(i=qa(e,n,za,null,null,t),Qd._currentValue=i),zl(e,n),Tl(e,n,r,t),n.child;case 6:return null===e&&ai&&((e=t=ii)&&(null!==(t=function(e,n,t){if(""===n)return null;for(;3!==e.nodeType;){if((1!==e.nodeType||"INPUT"!==e.nodeName||"hidden"!==e.type)&&!t)return null;if(null===(e=yd(e.nextSibling)))return null}return e}(t,n.pendingProps,li))?(n.stateNode=t,ri=n,ii=null,e=!0):e=!1),e||ui(n)),null;case 13:return Wl(e,n,t);case 4:return $(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=tl(n,null,r,t):Tl(e,n,r,t),n.child;case 11:return Nl(e,n,n.type,n.pendingProps,t);case 7:return Tl(e,n,n.pendingProps,t),n.child;case 8:case 12:return Tl(e,n,n.pendingProps.children,t),n.child;case 10:return r=n.pendingProps,vi(0,n.type,r.value),Tl(e,n,r.children,t),n.child;case 9:return i=n.type._context,r=n.pendingProps.children,_i(n),r=r(i=Ei(i)),n.flags|=1,Tl(e,n,r,t),n.child;case 14:return Ll(e,n,n.type,n.pendingProps,t);case 15:return ql(e,n,n.type,n.pendingProps,t);case 19:return Ql(e,n,t);case 31:return r=n.pendingProps,t=n.mode,r={mode:r.mode,children:r.children},null===e?((t=Hl(r,t)).ref=n.ref,n.child=t,t.return=n,n=t):((t=Mr(e.child,r)).ref=n.ref,n.child=t,t.return=n,n=t),n;case 22:return Pl(e,n,t);case 24:return _i(n),r=Ei(Pi),null===e?(null===(i=Wi())&&(i=ru,a=Fi(),i.pooledCache=a,a.refCount++,null!==a&&(i.pooledCacheLanes|=t),i=a),n.memoizedState={parent:r,cache:i},ta(n),vi(0,Pi,i)):(0!==(e.lanes&t)&&(ra(e,n),ca(n,null,null,t),ua()),i=e.memoizedState,a=n.memoizedState,i.parent!==r?(i={parent:r,cache:r},n.memoizedState=i,0===n.lanes&&(n.memoizedState=n.updateQueue.baseState=i),vi(0,Pi,r)):(r=a.cache,vi(0,Pi,r),r!==i.cache&&ki(n,[Pi],t,!0))),Tl(e,n,n.pendingProps.children,t),n.child;case 29:throw n.pendingProps}throw Error(o(156,n.tag))}function Jl(e){e.flags|=4}function Zl(e,n){if("stylesheet"!==n.type||0!==(4&n.state.loading))e.flags&=-16777217;else if(e.flags|=16777216,!Ad(n)){if(null!==(n=il.current)&&((4194048&au)===au?null!==al:(62914560&au)!==au&&0===(536870912&au)||n!==al))throw Ji=Qi,$i;e.flags|=8192}}function es(e,n){null!==n&&(e.flags|=4),16384&e.flags&&(n=22!==e.tag?Se():536870912,e.lanes|=n,yu|=n)}function ns(e,n){if(!ai)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ts(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var i=e.child;null!==i;)t|=i.lanes|i.childLanes,r|=65011712&i.subtreeFlags,r|=65011712&i.flags,i.return=e,i=i.sibling;else for(i=e.child;null!==i;)t|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function rs(e,n,t){var r=n.pendingProps;switch(ti(n),n.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:case 1:return ts(n),null;case 3:return t=n.stateNode,r=null,null!==e&&(r=e.memoizedState.cache),n.memoizedState.cache!==r&&(n.flags|=2048),wi(Pi),G(),t.pendingContext&&(t.context=t.pendingContext,t.pendingContext=null),null!==e&&null!==e.child||(fi(n)?Jl(n):null===e||e.memoizedState.isDehydrated&&0===(256&n.flags)||(n.flags|=1024,mi())),ts(n),null;case 26:return t=n.memoizedState,null===e?(Jl(n),null!==t?(ts(n),Zl(n,t)):(ts(n),n.flags&=-16777217)):t?t!==e.memoizedState?(Jl(n),ts(n),Zl(n,t)):(ts(n),n.flags&=-16777217):(e.memoizedProps!==r&&Jl(n),ts(n),n.flags&=-16777217),null;case 27:K(n),t=H.current;var i=n.type;if(null!==e&&null!=n.stateNode)e.memoizedProps!==r&&Jl(n);else{if(!r){if(null===n.stateNode)throw Error(o(166));return ts(n),null}e=W.current,fi(n)?ci(n):(e=wd(i,r,t),n.stateNode=e,Jl(n))}return ts(n),null;case 5:if(K(n),t=n.type,null!==e&&null!=n.stateNode)e.memoizedProps!==r&&Jl(n);else{if(!r){if(null===n.stateNode)throw Error(o(166));return ts(n),null}if(e=W.current,fi(n))ci(n);else{switch(i=rd(H.current),e){case 1:e=i.createElementNS("http://www.w3.org/2000/svg",t);break;case 2:e=i.createElementNS("http://www.w3.org/1998/Math/MathML",t);break;default:switch(t){case"svg":e=i.createElementNS("http://www.w3.org/2000/svg",t);break;case"math":e=i.createElementNS("http://www.w3.org/1998/Math/MathML",t);break;case"script":(e=i.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild);break;case"select":e="string"===typeof r.is?i.createElement("select",{is:r.is}):i.createElement("select"),r.multiple?e.multiple=!0:r.size&&(e.size=r.size);break;default:e="string"===typeof r.is?i.createElement(t,{is:r.is}):i.createElement(t)}}e[Pe]=n,e[Fe]=r;e:for(i=n.child;null!==i;){if(5===i.tag||6===i.tag)e.appendChild(i.stateNode);else if(4!==i.tag&&27!==i.tag&&null!==i.child){i.child.return=i,i=i.child;continue}if(i===n)break e;for(;null===i.sibling;){if(null===i.return||i.return===n)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}n.stateNode=e;e:switch(ed(e,t,r),t){case"button":case"input":case"select":case"textarea":e=!!r.autoFocus;break e;case"img":e=!0;break e;default:e=!1}e&&Jl(n)}}return ts(n),n.flags&=-16777217,null;case 6:if(e&&null!=n.stateNode)e.memoizedProps!==r&&Jl(n);else{if("string"!==typeof r&&null===n.stateNode)throw Error(o(166));if(e=H.current,fi(n)){if(e=n.stateNode,t=n.memoizedProps,r=null,null!==(i=ri))switch(i.tag){case 27:case 5:r=i.memoizedProps}e[Pe]=n,(e=!!(e.nodeValue===t||null!==r&&!0===r.suppressHydrationWarning||Xc(e.nodeValue,t)))||ui(n)}else(e=rd(e).createTextNode(r))[Pe]=n,n.stateNode=e}return ts(n),null;case 13:if(r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(i=fi(n),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(o(318));if(!(i=null!==(i=n.memoizedState)?i.dehydrated:null))throw Error(o(317));i[Pe]=n}else pi(),0===(128&n.flags)&&(n.memoizedState=null),n.flags|=4;ts(n),i=!1}else i=mi(),null!==e&&null!==e.memoizedState&&(e.memoizedState.hydrationErrors=i),i=!0;if(!i)return 256&n.flags?(ul(n),n):(ul(n),null)}if(ul(n),0!==(128&n.flags))return n.lanes=t,n;if(t=null!==r,e=null!==e&&null!==e.memoizedState,t){i=null,null!==(r=n.child).alternate&&null!==r.alternate.memoizedState&&null!==r.alternate.memoizedState.cachePool&&(i=r.alternate.memoizedState.cachePool.pool);var a=null;null!==r.memoizedState&&null!==r.memoizedState.cachePool&&(a=r.memoizedState.cachePool.pool),a!==i&&(r.flags|=2048)}return t!==e&&t&&(n.child.flags|=8192),es(n,n.updateQueue),ts(n),null;case 4:return G(),null===e&&Ic(n.stateNode.containerInfo),ts(n),null;case 10:return wi(n.type),ts(n),null;case 19:if(I(cl),null===(i=n.memoizedState))return ts(n),null;if(r=0!==(128&n.flags),null===(a=i.rendering))if(r)ns(i,!1);else{if(0!==fu||null!==e&&0!==(128&e.flags))for(e=n.child;null!==e;){if(null!==(a=dl(e))){for(n.flags|=128,ns(i,!1),e=a.updateQueue,n.updateQueue=e,es(n,e),n.subtreeFlags=0,e=t,t=n.child;null!==t;)Ur(t,e),t=t.sibling;return A(cl,1&cl.current|2),n.child}e=e.sibling}null!==i.tail&&ne()>ku&&(n.flags|=128,r=!0,ns(i,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=dl(a))){if(n.flags|=128,r=!0,e=e.updateQueue,n.updateQueue=e,es(n,e),ns(i,!0),null===i.tail&&"hidden"===i.tailMode&&!a.alternate&&!ai)return ts(n),null}else 2*ne()-i.renderingStartTime>ku&&536870912!==t&&(n.flags|=128,r=!0,ns(i,!1),n.lanes=4194304);i.isBackwards?(a.sibling=n.child,n.child=a):(null!==(e=i.last)?e.sibling=a:n.child=a,i.last=a)}return null!==i.tail?(n=i.tail,i.rendering=n,i.tail=n.sibling,i.renderingStartTime=ne(),n.sibling=null,e=cl.current,A(cl,r?1&e|2:1&e),n):(ts(n),null);case 22:case 23:return ul(n),ya(),r=null!==n.memoizedState,null!==e?null!==e.memoizedState!==r&&(n.flags|=8192):r&&(n.flags|=8192),r?0!==(536870912&t)&&0===(128&n.flags)&&(ts(n),6&n.subtreeFlags&&(n.flags|=8192)):ts(n),null!==(t=n.updateQueue)&&es(n,t.retryQueue),t=null,null!==e&&null!==e.memoizedState&&null!==e.memoizedState.cachePool&&(t=e.memoizedState.cachePool.pool),r=null,null!==n.memoizedState&&null!==n.memoizedState.cachePool&&(r=n.memoizedState.cachePool.pool),r!==t&&(n.flags|=2048),null!==e&&I(Ai),null;case 24:return t=null,null!==e&&(t=e.memoizedState.cache),n.memoizedState.cache!==t&&(n.flags|=2048),wi(Pi),ts(n),null;case 25:case 30:return null}throw Error(o(156,n.tag))}function is(e,n){switch(ti(n),n.tag){case 1:return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return wi(Pi),G(),0!==(65536&(e=n.flags))&&0===(128&e)?(n.flags=-65537&e|128,n):null;case 26:case 27:case 5:return K(n),null;case 13:if(ul(n),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(o(340));pi()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return I(cl),null;case 4:return G(),null;case 10:return wi(n.type),null;case 22:case 23:return ul(n),ya(),null!==e&&I(Ai),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 24:return wi(Pi),null;default:return null}}function as(e,n){switch(ti(n),n.tag){case 3:wi(Pi),G();break;case 26:case 27:case 5:K(n);break;case 4:G();break;case 13:ul(n);break;case 19:I(cl);break;case 10:wi(n.type);break;case 22:case 23:ul(n),ya(),null!==e&&I(Ai);break;case 24:wi(Pi)}}function os(e,n){try{var t=n.updateQueue,r=null!==t?t.lastEffect:null;if(null!==r){var i=r.next;t=i;do{if((t.tag&e)===e){r=void 0;var a=t.create,o=t.inst;r=a(),o.destroy=r}t=t.next}while(t!==i)}}catch(l){cc(n,n.return,l)}}function ls(e,n,t){try{var r=n.updateQueue,i=null!==r?r.lastEffect:null;if(null!==i){var a=i.next;r=a;do{if((r.tag&e)===e){var o=r.inst,l=o.destroy;if(void 0!==l){o.destroy=void 0,i=n;var s=t,u=l;try{u()}catch(c){cc(i,s,c)}}}r=r.next}while(r!==a)}}catch(c){cc(n,n.return,c)}}function ss(e){var n=e.updateQueue;if(null!==n){var t=e.stateNode;try{fa(n,t)}catch(r){cc(e,e.return,r)}}}function us(e,n,t){t.props=gl(e.type,e.memoizedProps),t.state=e.memoizedState;try{t.componentWillUnmount()}catch(r){cc(e,n,r)}}function cs(e,n){try{var t=e.ref;if(null!==t){switch(e.tag){case 26:case 27:case 5:var r=e.stateNode;break;default:r=e.stateNode}"function"===typeof t?e.refCleanup=t(r):t.current=r}}catch(i){cc(e,n,i)}}function ds(e,n){var t=e.ref,r=e.refCleanup;if(null!==t)if("function"===typeof r)try{r()}catch(i){cc(e,n,i)}finally{e.refCleanup=null,null!=(e=e.alternate)&&(e.refCleanup=null)}else if("function"===typeof t)try{t(null)}catch(a){cc(e,n,a)}else t.current=null}function fs(e){var n=e.type,t=e.memoizedProps,r=e.stateNode;try{e:switch(n){case"button":case"input":case"select":case"textarea":t.autoFocus&&r.focus();break e;case"img":t.src?r.src=t.src:t.srcSet&&(r.srcset=t.srcSet)}}catch(i){cc(e,e.return,i)}}function ps(e,n,t){try{var r=e.stateNode;!function(e,n,t,r){switch(n){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var i=null,a=null,l=null,s=null,u=null,c=null,d=null;for(m in t){var f=t[m];if(t.hasOwnProperty(m)&&null!=f)switch(m){case"checked":case"value":break;case"defaultValue":u=f;default:r.hasOwnProperty(m)||Jc(e,n,m,null,r,f)}}for(var p in r){var m=r[p];if(f=t[p],r.hasOwnProperty(p)&&(null!=m||null!=f))switch(p){case"type":a=m;break;case"name":i=m;break;case"checked":c=m;break;case"defaultChecked":d=m;break;case"value":l=m;break;case"defaultValue":s=m;break;case"children":case"dangerouslySetInnerHTML":if(null!=m)throw Error(o(137,n));break;default:m!==f&&Jc(e,n,p,m,r,f)}}return void yn(e,l,s,u,c,d,a,i);case"select":for(a in m=l=s=p=null,t)if(u=t[a],t.hasOwnProperty(a)&&null!=u)switch(a){case"value":break;case"multiple":m=u;default:r.hasOwnProperty(a)||Jc(e,n,a,null,r,u)}for(i in r)if(a=r[i],u=t[i],r.hasOwnProperty(i)&&(null!=a||null!=u))switch(i){case"value":p=a;break;case"defaultValue":s=a;break;case"multiple":l=a;default:a!==u&&Jc(e,n,i,a,r,u)}return n=s,t=l,r=m,void(null!=p?wn(e,!!t,p,!1):!!r!==!!t&&(null!=n?wn(e,!!t,n,!0):wn(e,!!t,t?[]:"",!1)));case"textarea":for(s in m=p=null,t)if(i=t[s],t.hasOwnProperty(s)&&null!=i&&!r.hasOwnProperty(s))switch(s){case"value":case"children":break;default:Jc(e,n,s,null,r,i)}for(l in r)if(i=r[l],a=t[l],r.hasOwnProperty(l)&&(null!=i||null!=a))switch(l){case"value":p=i;break;case"defaultValue":m=i;break;case"children":break;case"dangerouslySetInnerHTML":if(null!=i)throw Error(o(91));break;default:i!==a&&Jc(e,n,l,i,r,a)}return void xn(e,p,m);case"option":for(var h in t)if(p=t[h],t.hasOwnProperty(h)&&null!=p&&!r.hasOwnProperty(h))if("selected"===h)e.selected=!1;else Jc(e,n,h,null,r,p);for(u in r)if(p=r[u],m=t[u],r.hasOwnProperty(u)&&p!==m&&(null!=p||null!=m))if("selected"===u)e.selected=p&&"function"!==typeof p&&"symbol"!==typeof p;else Jc(e,n,u,p,r,m);return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var g in t)p=t[g],t.hasOwnProperty(g)&&null!=p&&!r.hasOwnProperty(g)&&Jc(e,n,g,null,r,p);for(c in r)if(p=r[c],m=t[c],r.hasOwnProperty(c)&&p!==m&&(null!=p||null!=m))switch(c){case"children":case"dangerouslySetInnerHTML":if(null!=p)throw Error(o(137,n));break;default:Jc(e,n,c,p,r,m)}return;default:if(On(n)){for(var y in t)p=t[y],t.hasOwnProperty(y)&&void 0!==p&&!r.hasOwnProperty(y)&&Zc(e,n,y,void 0,r,p);for(d in r)p=r[d],m=t[d],!r.hasOwnProperty(d)||p===m||void 0===p&&void 0===m||Zc(e,n,d,p,r,m);return}}for(var b in t)p=t[b],t.hasOwnProperty(b)&&null!=p&&!r.hasOwnProperty(b)&&Jc(e,n,b,null,r,p);for(f in r)p=r[f],m=t[f],!r.hasOwnProperty(f)||p===m||null==p&&null==m||Jc(e,n,f,p,r,m)}(r,e.type,t,n),r[Fe]=n}catch(i){cc(e,e.return,i)}}function ms(e){return 5===e.tag||3===e.tag||26===e.tag||27===e.tag&&pd(e.type)||4===e.tag}function hs(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ms(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(27===e.tag&&pd(e.type))continue e;if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function gs(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?(9===t.nodeType?t.body:"HTML"===t.nodeName?t.ownerDocument.body:t).insertBefore(e,n):((n=9===t.nodeType?t.body:"HTML"===t.nodeName?t.ownerDocument.body:t).appendChild(e),null!==(t=t._reactRootContainer)&&void 0!==t||null!==n.onclick||(n.onclick=Yc));else if(4!==r&&(27===r&&pd(e.type)&&(t=e.stateNode,n=null),null!==(e=e.child)))for(gs(e,n,t),e=e.sibling;null!==e;)gs(e,n,t),e=e.sibling}function ys(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&(27===r&&pd(e.type)&&(t=e.stateNode),null!==(e=e.child)))for(ys(e,n,t),e=e.sibling;null!==e;)ys(e,n,t),e=e.sibling}function bs(e){var n=e.stateNode,t=e.memoizedProps;try{for(var r=e.type,i=n.attributes;i.length;)n.removeAttributeNode(i[0]);ed(n,r,t),n[Pe]=e,n[Fe]=t}catch(a){cc(e,e.return,a)}}var vs=!1,ws=!1,xs=!1,ks="function"===typeof WeakSet?WeakSet:Set,Ss=null;function Cs(e,n,t){var r=t.flags;switch(t.tag){case 0:case 11:case 15:Rs(e,t),4&r&&os(5,t);break;case 1:if(Rs(e,t),4&r)if(e=t.stateNode,null===n)try{e.componentDidMount()}catch(o){cc(t,t.return,o)}else{var i=gl(t.type,n.memoizedProps);n=n.memoizedState;try{e.componentDidUpdate(i,n,e.__reactInternalSnapshotBeforeUpdate)}catch(l){cc(t,t.return,l)}}64&r&&ss(t),512&r&&cs(t,t.return);break;case 3:if(Rs(e,t),64&r&&null!==(e=t.updateQueue)){if(n=null,null!==t.child)switch(t.child.tag){case 27:case 5:case 1:n=t.child.stateNode}try{fa(e,n)}catch(o){cc(t,t.return,o)}}break;case 27:null===n&&4&r&&bs(t);case 26:case 5:Rs(e,t),null===n&&4&r&&fs(t),512&r&&cs(t,t.return);break;case 12:Rs(e,t);break;case 13:Rs(e,t),4&r&&Ls(e,t),64&r&&(null!==(e=t.memoizedState)&&(null!==(e=e.dehydrated)&&function(e,n){var t=e.ownerDocument;if("$?"!==e.data||"complete"===t.readyState)n();else{var r=function(){n(),t.removeEventListener("DOMContentLoaded",r)};t.addEventListener("DOMContentLoaded",r),e._reactRetry=r}}(e,t=mc.bind(null,t))));break;case 22:if(!(r=null!==t.memoizedState||vs)){n=null!==n&&null!==n.memoizedState||ws,i=vs;var a=ws;vs=r,(ws=n)&&!a?Us(e,t,0!==(8772&t.subtreeFlags)):Rs(e,t),vs=i,ws=a}break;case 30:break;default:Rs(e,t)}}function _s(e){var n=e.alternate;null!==n&&(e.alternate=null,_s(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(n=e.stateNode)&&Ie(n)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}var Es=null,Os=!1;function Ts(e,n,t){for(t=t.child;null!==t;)Ns(e,n,t),t=t.sibling}function Ns(e,n,t){if(de&&"function"===typeof de.onCommitFiberUnmount)try{de.onCommitFiberUnmount(ce,t)}catch(a){}switch(t.tag){case 26:ws||ds(t,n),Ts(e,n,t),t.memoizedState?t.memoizedState.count--:t.stateNode&&(t=t.stateNode).parentNode.removeChild(t);break;case 27:ws||ds(t,n);var r=Es,i=Os;pd(t.type)&&(Es=t.stateNode,Os=!1),Ts(e,n,t),xd(t.stateNode),Es=r,Os=i;break;case 5:ws||ds(t,n);case 6:if(r=Es,i=Os,Es=null,Ts(e,n,t),Os=i,null!==(Es=r))if(Os)try{(9===Es.nodeType?Es.body:"HTML"===Es.nodeName?Es.ownerDocument.body:Es).removeChild(t.stateNode)}catch(o){cc(t,n,o)}else try{Es.removeChild(t.stateNode)}catch(o){cc(t,n,o)}break;case 18:null!==Es&&(Os?(md(9===(e=Es).nodeType?e.body:"HTML"===e.nodeName?e.ownerDocument.body:e,t.stateNode),Tf(e)):md(Es,t.stateNode));break;case 4:r=Es,i=Os,Es=t.stateNode.containerInfo,Os=!0,Ts(e,n,t),Es=r,Os=i;break;case 0:case 11:case 14:case 15:ws||ls(2,t,n),ws||ls(4,t,n),Ts(e,n,t);break;case 1:ws||(ds(t,n),"function"===typeof(r=t.stateNode).componentWillUnmount&&us(t,n,r)),Ts(e,n,t);break;case 21:Ts(e,n,t);break;case 22:ws=(r=ws)||null!==t.memoizedState,Ts(e,n,t),ws=r;break;default:Ts(e,n,t)}}function Ls(e,n){if(null===n.memoizedState&&(null!==(e=n.alternate)&&(null!==(e=e.memoizedState)&&null!==(e=e.dehydrated))))try{Tf(e)}catch(t){cc(n,n.return,t)}}function qs(e,n){var t=function(e){switch(e.tag){case 13:case 19:var n=e.stateNode;return null===n&&(n=e.stateNode=new ks),n;case 22:return null===(n=(e=e.stateNode)._retryCache)&&(n=e._retryCache=new ks),n;default:throw Error(o(435,e.tag))}}(e);n.forEach((function(n){var r=hc.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}function Ps(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var i=t[r],a=e,l=n,s=l;e:for(;null!==s;){switch(s.tag){case 27:if(pd(s.type)){Es=s.stateNode,Os=!1;break e}break;case 5:Es=s.stateNode,Os=!1;break e;case 3:case 4:Es=s.stateNode.containerInfo,Os=!0;break e}s=s.return}if(null===Es)throw Error(o(160));Ns(a,l,i),Es=null,Os=!1,null!==(a=i.alternate)&&(a.return=null),i.return=null}if(13878&n.subtreeFlags)for(n=n.child;null!==n;)zs(n,e),n=n.sibling}var Fs=null;function zs(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:Ps(n,e),Ds(e),4&r&&(ls(3,e,e.return),os(3,e),ls(5,e,e.return));break;case 1:Ps(n,e),Ds(e),512&r&&(ws||null===t||ds(t,t.return)),64&r&&vs&&(null!==(e=e.updateQueue)&&(null!==(r=e.callbacks)&&(t=e.shared.hiddenCallbacks,e.shared.hiddenCallbacks=null===t?r:t.concat(r))));break;case 26:var i=Fs;if(Ps(n,e),Ds(e),512&r&&(ws||null===t||ds(t,t.return)),4&r){var a=null!==t?t.memoizedState:null;if(r=e.memoizedState,null===t)if(null===r)if(null===e.stateNode){e:{r=e.type,t=e.memoizedProps,i=i.ownerDocument||i;n:switch(r){case"title":(!(a=i.getElementsByTagName("title")[0])||a[Ue]||a[Pe]||"http://www.w3.org/2000/svg"===a.namespaceURI||a.hasAttribute("itemprop"))&&(a=i.createElement(r),i.head.insertBefore(a,i.querySelector("head > title"))),ed(a,r,t),a[Pe]=e,Ve(a),r=a;break e;case"link":var l=Ud("link","href",i).get(r+(t.href||""));if(l)for(var s=0;s<l.length;s++)if((a=l[s]).getAttribute("href")===(null==t.href||""===t.href?null:t.href)&&a.getAttribute("rel")===(null==t.rel?null:t.rel)&&a.getAttribute("title")===(null==t.title?null:t.title)&&a.getAttribute("crossorigin")===(null==t.crossOrigin?null:t.crossOrigin)){l.splice(s,1);break n}ed(a=i.createElement(r),r,t),i.head.appendChild(a);break;case"meta":if(l=Ud("meta","content",i).get(r+(t.content||"")))for(s=0;s<l.length;s++)if((a=l[s]).getAttribute("content")===(null==t.content?null:""+t.content)&&a.getAttribute("name")===(null==t.name?null:t.name)&&a.getAttribute("property")===(null==t.property?null:t.property)&&a.getAttribute("http-equiv")===(null==t.httpEquiv?null:t.httpEquiv)&&a.getAttribute("charset")===(null==t.charSet?null:t.charSet)){l.splice(s,1);break n}ed(a=i.createElement(r),r,t),i.head.appendChild(a);break;default:throw Error(o(468,r))}a[Pe]=e,Ve(a),r=a}e.stateNode=r}else Id(i,e.type,e.stateNode);else e.stateNode=zd(i,r,e.memoizedProps);else a!==r?(null===a?null!==t.stateNode&&(t=t.stateNode).parentNode.removeChild(t):a.count--,null===r?Id(i,e.type,e.stateNode):zd(i,r,e.memoizedProps)):null===r&&null!==e.stateNode&&ps(e,e.memoizedProps,t.memoizedProps)}break;case 27:Ps(n,e),Ds(e),512&r&&(ws||null===t||ds(t,t.return)),null!==t&&4&r&&ps(e,e.memoizedProps,t.memoizedProps);break;case 5:if(Ps(n,e),Ds(e),512&r&&(ws||null===t||ds(t,t.return)),32&e.flags){i=e.stateNode;try{Sn(i,"")}catch(m){cc(e,e.return,m)}}4&r&&null!=e.stateNode&&ps(e,i=e.memoizedProps,null!==t?t.memoizedProps:i),1024&r&&(xs=!0);break;case 6:if(Ps(n,e),Ds(e),4&r){if(null===e.stateNode)throw Error(o(162));r=e.memoizedProps,t=e.stateNode;try{t.nodeValue=r}catch(m){cc(e,e.return,m)}}break;case 3:if(Md=null,i=Fs,Fs=Cd(n.containerInfo),Ps(n,e),Fs=i,Ds(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Tf(n.containerInfo)}catch(m){cc(e,e.return,m)}xs&&(xs=!1,js(e));break;case 4:r=Fs,Fs=Cd(e.stateNode.containerInfo),Ps(n,e),Ds(e),Fs=r;break;case 12:default:Ps(n,e),Ds(e);break;case 13:Ps(n,e),Ds(e),8192&e.child.flags&&null!==e.memoizedState!==(null!==t&&null!==t.memoizedState)&&(xu=ne()),4&r&&(null!==(r=e.updateQueue)&&(e.updateQueue=null,qs(e,r)));break;case 22:i=null!==e.memoizedState;var u=null!==t&&null!==t.memoizedState,c=vs,d=ws;if(vs=c||i,ws=d||u,Ps(n,e),ws=d,vs=c,Ds(e),8192&r)e:for(n=e.stateNode,n._visibility=i?-2&n._visibility:1|n._visibility,i&&(null===t||u||vs||ws||Ms(e)),t=null,n=e;;){if(5===n.tag||26===n.tag){if(null===t){u=t=n;try{if(a=u.stateNode,i)"function"===typeof(l=a.style).setProperty?l.setProperty("display","none","important"):l.display="none";else{s=u.stateNode;var f=u.memoizedProps.style,p=void 0!==f&&null!==f&&f.hasOwnProperty("display")?f.display:null;s.style.display=null==p||"boolean"===typeof p?"":(""+p).trim()}}catch(m){cc(u,u.return,m)}}}else if(6===n.tag){if(null===t){u=n;try{u.stateNode.nodeValue=i?"":u.memoizedProps}catch(m){cc(u,u.return,m)}}}else if((22!==n.tag&&23!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break e;for(;null===n.sibling;){if(null===n.return||n.return===e)break e;t===n&&(t=null),n=n.return}t===n&&(t=null),n.sibling.return=n.return,n=n.sibling}4&r&&(null!==(r=e.updateQueue)&&(null!==(t=r.retryQueue)&&(r.retryQueue=null,qs(e,t))));break;case 19:Ps(n,e),Ds(e),4&r&&(null!==(r=e.updateQueue)&&(e.updateQueue=null,qs(e,r)));case 30:case 21:}}function Ds(e){var n=e.flags;if(2&n){try{for(var t,r=e.return;null!==r;){if(ms(r)){t=r;break}r=r.return}if(null==t)throw Error(o(160));switch(t.tag){case 27:var i=t.stateNode;ys(e,hs(e),i);break;case 5:var a=t.stateNode;32&t.flags&&(Sn(a,""),t.flags&=-33),ys(e,hs(e),a);break;case 3:case 4:var l=t.stateNode.containerInfo;gs(e,hs(e),l);break;default:throw Error(o(161))}}catch(s){cc(e,e.return,s)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function js(e){if(1024&e.subtreeFlags)for(e=e.child;null!==e;){var n=e;js(n),5===n.tag&&1024&n.flags&&n.stateNode.reset(),e=e.sibling}}function Rs(e,n){if(8772&n.subtreeFlags)for(n=n.child;null!==n;)Cs(e,n.alternate,n),n=n.sibling}function Ms(e){for(e=e.child;null!==e;){var n=e;switch(n.tag){case 0:case 11:case 14:case 15:ls(4,n,n.return),Ms(n);break;case 1:ds(n,n.return);var t=n.stateNode;"function"===typeof t.componentWillUnmount&&us(n,n.return,t),Ms(n);break;case 27:xd(n.stateNode);case 26:case 5:ds(n,n.return),Ms(n);break;case 22:null===n.memoizedState&&Ms(n);break;default:Ms(n)}e=e.sibling}}function Us(e,n,t){for(t=t&&0!==(8772&n.subtreeFlags),n=n.child;null!==n;){var r=n.alternate,i=e,a=n,o=a.flags;switch(a.tag){case 0:case 11:case 15:Us(i,a,t),os(4,a);break;case 1:if(Us(i,a,t),"function"===typeof(i=(r=a).stateNode).componentDidMount)try{i.componentDidMount()}catch(u){cc(r,r.return,u)}if(null!==(i=(r=a).updateQueue)){var l=r.stateNode;try{var s=i.shared.hiddenCallbacks;if(null!==s)for(i.shared.hiddenCallbacks=null,i=0;i<s.length;i++)da(s[i],l)}catch(u){cc(r,r.return,u)}}t&&64&o&&ss(a),cs(a,a.return);break;case 27:bs(a);case 26:case 5:Us(i,a,t),t&&null===r&&4&o&&fs(a),cs(a,a.return);break;case 12:Us(i,a,t);break;case 13:Us(i,a,t),t&&4&o&&Ls(i,a);break;case 22:null===a.memoizedState&&Us(i,a,t),cs(a,a.return);break;case 30:break;default:Us(i,a,t)}n=n.sibling}}function Is(e,n){var t=null;null!==e&&null!==e.memoizedState&&null!==e.memoizedState.cachePool&&(t=e.memoizedState.cachePool.pool),e=null,null!==n.memoizedState&&null!==n.memoizedState.cachePool&&(e=n.memoizedState.cachePool.pool),e!==t&&(null!=e&&e.refCount++,null!=t&&zi(t))}function As(e,n){e=null,null!==n.alternate&&(e=n.alternate.memoizedState.cache),(n=n.memoizedState.cache)!==e&&(n.refCount++,null!=e&&zi(e))}function Ws(e,n,t,r){if(10256&n.subtreeFlags)for(n=n.child;null!==n;)Bs(e,n,t,r),n=n.sibling}function Bs(e,n,t,r){var i=n.flags;switch(n.tag){case 0:case 11:case 15:Ws(e,n,t,r),2048&i&&os(9,n);break;case 1:case 13:default:Ws(e,n,t,r);break;case 3:Ws(e,n,t,r),2048&i&&(e=null,null!==n.alternate&&(e=n.alternate.memoizedState.cache),(n=n.memoizedState.cache)!==e&&(n.refCount++,null!=e&&zi(e)));break;case 12:if(2048&i){Ws(e,n,t,r),e=n.stateNode;try{var a=n.memoizedProps,o=a.id,l=a.onPostCommit;"function"===typeof l&&l(o,null===n.alternate?"mount":"update",e.passiveEffectDuration,-0)}catch(s){cc(n,n.return,s)}}else Ws(e,n,t,r);break;case 23:break;case 22:a=n.stateNode,o=n.alternate,null!==n.memoizedState?2&a._visibility?Ws(e,n,t,r):Vs(e,n):2&a._visibility?Ws(e,n,t,r):(a._visibility|=2,Hs(e,n,t,r,0!==(10256&n.subtreeFlags))),2048&i&&Is(o,n);break;case 24:Ws(e,n,t,r),2048&i&&As(n.alternate,n)}}function Hs(e,n,t,r,i){for(i=i&&0!==(10256&n.subtreeFlags),n=n.child;null!==n;){var a=e,o=n,l=t,s=r,u=o.flags;switch(o.tag){case 0:case 11:case 15:Hs(a,o,l,s,i),os(8,o);break;case 23:break;case 22:var c=o.stateNode;null!==o.memoizedState?2&c._visibility?Hs(a,o,l,s,i):Vs(a,o):(c._visibility|=2,Hs(a,o,l,s,i)),i&&2048&u&&Is(o.alternate,o);break;case 24:Hs(a,o,l,s,i),i&&2048&u&&As(o.alternate,o);break;default:Hs(a,o,l,s,i)}n=n.sibling}}function Vs(e,n){if(10256&n.subtreeFlags)for(n=n.child;null!==n;){var t=e,r=n,i=r.flags;switch(r.tag){case 22:Vs(t,r),2048&i&&Is(r.alternate,r);break;case 24:Vs(t,r),2048&i&&As(r.alternate,r);break;default:Vs(t,r)}n=n.sibling}}var $s=8192;function Gs(e){if(e.subtreeFlags&$s)for(e=e.child;null!==e;)Qs(e),e=e.sibling}function Qs(e){switch(e.tag){case 26:Gs(e),e.flags&$s&&null!==e.memoizedState&&function(e,n,t){if(null===Wd)throw Error(o(475));var r=Wd;if("stylesheet"===n.type&&("string"!==typeof t.media||!1!==matchMedia(t.media).matches)&&0===(4&n.state.loading)){if(null===n.instance){var i=Nd(t.href),a=e.querySelector(Ld(i));if(a)return null!==(e=a._p)&&"object"===typeof e&&"function"===typeof e.then&&(r.count++,r=Hd.bind(r),e.then(r,r)),n.state.loading|=4,n.instance=a,void Ve(a);a=e.ownerDocument||e,t=qd(t),(i=kd.get(i))&&jd(t,i),Ve(a=a.createElement("link"));var l=a;l._p=new Promise((function(e,n){l.onload=e,l.onerror=n})),ed(a,"link",t),n.instance=a}null===r.stylesheets&&(r.stylesheets=new Map),r.stylesheets.set(n,e),(e=n.state.preload)&&0===(3&n.state.loading)&&(r.count++,n=Hd.bind(r),e.addEventListener("load",n),e.addEventListener("error",n))}}(Fs,e.memoizedState,e.memoizedProps);break;case 5:default:Gs(e);break;case 3:case 4:var n=Fs;Fs=Cd(e.stateNode.containerInfo),Gs(e),Fs=n;break;case 22:null===e.memoizedState&&(null!==(n=e.alternate)&&null!==n.memoizedState?(n=$s,$s=16777216,Gs(e),$s=n):Gs(e))}}function Ks(e){var n=e.alternate;if(null!==n&&null!==(e=n.child)){n.child=null;do{n=e.sibling,e.sibling=null,e=n}while(null!==e)}}function Xs(e){var n=e.deletions;if(0!==(16&e.flags)){if(null!==n)for(var t=0;t<n.length;t++){var r=n[t];Ss=r,Zs(r,e)}Ks(e)}if(10256&e.subtreeFlags)for(e=e.child;null!==e;)Ys(e),e=e.sibling}function Ys(e){switch(e.tag){case 0:case 11:case 15:Xs(e),2048&e.flags&&ls(9,e,e.return);break;case 3:case 12:default:Xs(e);break;case 22:var n=e.stateNode;null!==e.memoizedState&&2&n._visibility&&(null===e.return||13!==e.return.tag)?(n._visibility&=-3,Js(e)):Xs(e)}}function Js(e){var n=e.deletions;if(0!==(16&e.flags)){if(null!==n)for(var t=0;t<n.length;t++){var r=n[t];Ss=r,Zs(r,e)}Ks(e)}for(e=e.child;null!==e;){switch((n=e).tag){case 0:case 11:case 15:ls(8,n,n.return),Js(n);break;case 22:2&(t=n.stateNode)._visibility&&(t._visibility&=-3,Js(n));break;default:Js(n)}e=e.sibling}}function Zs(e,n){for(;null!==Ss;){var t=Ss;switch(t.tag){case 0:case 11:case 15:ls(8,t,n);break;case 23:case 22:if(null!==t.memoizedState&&null!==t.memoizedState.cachePool){var r=t.memoizedState.cachePool.pool;null!=r&&r.refCount++}break;case 24:zi(t.memoizedState.cache)}if(null!==(r=t.child))r.return=t,Ss=r;else e:for(t=e;null!==Ss;){var i=(r=Ss).sibling,a=r.return;if(_s(r),r===t){Ss=null;break e}if(null!==i){i.return=a,Ss=i;break e}Ss=a}}}var eu={getCacheForType:function(e){var n=Ei(Pi),t=n.data.get(e);return void 0===t&&(t=e(),n.data.set(e,t)),t}},nu="function"===typeof WeakMap?WeakMap:Map,tu=0,ru=null,iu=null,au=0,ou=0,lu=null,su=!1,uu=!1,cu=!1,du=0,fu=0,pu=0,mu=0,hu=0,gu=0,yu=0,bu=null,vu=null,wu=!1,xu=0,ku=1/0,Su=null,Cu=null,_u=0,Eu=null,Ou=null,Tu=0,Nu=0,Lu=null,qu=null,Pu=0,Fu=null;function zu(){if(0!==(2&tu)&&0!==au)return au&-au;if(null!==z.T){return 0!==Ri?Ri:Nc()}return Le()}function Du(){0===gu&&(gu=0===(536870912&au)||ai?ke():536870912);var e=il.current;return null!==e&&(e.flags|=32),gu}function ju(e,n,t){(e!==ru||2!==ou&&9!==ou)&&null===e.cancelPendingCommit||(Bu(e,0),Iu(e,au,gu,!1)),_e(e,t),0!==(2&tu)&&e===ru||(e===ru&&(0===(2&tu)&&(mu|=t),4===fu&&Iu(e,au,gu,!1)),kc(e))}function Ru(e,n,t){if(0!==(6&tu))throw Error(o(327));for(var r=!t&&0===(124&n)&&0===(n&e.expiredLanes)||we(e,n),i=r?function(e,n){var t=tu;tu|=2;var r=Vu(),i=$u();ru!==e||au!==n?(Su=null,ku=ne()+500,Bu(e,n)):uu=we(e,n);e:for(;;)try{if(0!==ou&&null!==iu){n=iu;var a=lu;n:switch(ou){case 1:ou=0,lu=null,Zu(e,n,a,1);break;case 2:case 9:if(Ki(a)){ou=0,lu=null,Ju(n);break}n=function(){2!==ou&&9!==ou||ru!==e||(ou=7),kc(e)},a.then(n,n);break e;case 3:ou=7;break e;case 4:ou=5;break e;case 7:Ki(a)?(ou=0,lu=null,Ju(n)):(ou=0,lu=null,Zu(e,n,a,7));break;case 5:var l=null;switch(iu.tag){case 26:l=iu.memoizedState;case 5:case 27:var s=iu;if(!l||Ad(l)){ou=0,lu=null;var u=s.sibling;if(null!==u)iu=u;else{var c=s.return;null!==c?(iu=c,ec(c)):iu=null}break n}}ou=0,lu=null,Zu(e,n,a,5);break;case 6:ou=0,lu=null,Zu(e,n,a,6);break;case 8:Wu(),fu=6;break e;default:throw Error(o(462))}}Xu();break}catch(d){Hu(e,d)}return bi=yi=null,z.H=r,z.A=i,tu=t,null!==iu?0:(ru=null,au=0,Tr(),fu)}(e,n):Qu(e,n,!0),a=r;;){if(0===i){uu&&!r&&Iu(e,n,0,!1);break}if(t=e.current.alternate,!a||Uu(t)){if(2===i){if(a=n,e.errorRecoveryDisabledLanes&a)var l=0;else l=0!==(l=-536870913&e.pendingLanes)?l:536870912&l?536870912:0;if(0!==l){n=l;e:{var s=e;i=bu;var u=s.current.memoizedState.isDehydrated;if(u&&(Bu(s,l).flags|=256),2!==(l=Qu(s,l,!1))){if(cu&&!u){s.errorRecoveryDisabledLanes|=a,mu|=a,i=4;break e}a=vu,vu=i,null!==a&&(null===vu?vu=a:vu.push.apply(vu,a))}i=l}if(a=!1,2!==i)continue}}if(1===i){Bu(e,0),Iu(e,n,0,!0);break}e:{switch(r=e,a=i){case 0:case 1:throw Error(o(345));case 4:if((4194048&n)!==n)break;case 6:Iu(r,n,gu,!su);break e;case 2:vu=null;break;case 3:case 5:break;default:throw Error(o(329))}if((62914560&n)===n&&10<(i=xu+300-ne())){if(Iu(r,n,gu,!su),0!==ve(r,0,!0))break e;r.timeoutHandle=sd(Mu.bind(null,r,t,vu,Su,wu,n,gu,mu,yu,su,a,2,-0,0),i)}else Mu(r,t,vu,Su,wu,n,gu,mu,yu,su,a,0,-0,0)}break}i=Qu(e,n,!1),a=!1}kc(e)}function Mu(e,n,t,r,i,a,l,s,u,c,d,f,p,m){if(e.timeoutHandle=-1,(8192&(f=n.subtreeFlags)||16785408===(16785408&f))&&(Wd={stylesheets:null,count:0,unsuspend:Bd},Qs(n),null!==(f=function(){if(null===Wd)throw Error(o(475));var e=Wd;return e.stylesheets&&0===e.count&&$d(e,e.stylesheets),0<e.count?function(n){var t=setTimeout((function(){if(e.stylesheets&&$d(e,e.stylesheets),e.unsuspend){var n=e.unsuspend;e.unsuspend=null,n()}}),6e4);return e.unsuspend=n,function(){e.unsuspend=null,clearTimeout(t)}}:null}())))return e.cancelPendingCommit=f(tc.bind(null,e,n,a,t,r,i,l,s,u,d,1,p,m)),void Iu(e,a,l,!c);tc(e,n,a,t,r,i,l,s,u)}function Uu(e){for(var n=e;;){var t=n.tag;if((0===t||11===t||15===t)&&16384&n.flags&&(null!==(t=n.updateQueue)&&null!==(t=t.stores)))for(var r=0;r<t.length;r++){var i=t[r],a=i.getSnapshot;i=i.value;try{if(!Kt(a(),i))return!1}catch(o){return!1}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}function Iu(e,n,t,r){n&=~hu,n&=~mu,e.suspendedLanes|=n,e.pingedLanes&=~n,r&&(e.warmLanes|=n),r=e.expirationTimes;for(var i=n;0<i;){var a=31-pe(i),o=1<<a;r[a]=-1,i&=~o}0!==t&&Ee(e,t,n)}function Au(){return 0!==(6&tu)||(Sc(0,!1),!1)}function Wu(){if(null!==iu){if(0===ou)var e=iu.return;else bi=yi=null,Ra(e=iu),Ko=null,Xo=0,e=iu;for(;null!==e;)as(e.alternate,e),e=e.return;iu=null}}function Bu(e,n){var t=e.timeoutHandle;-1!==t&&(e.timeoutHandle=-1,ud(t)),null!==(t=e.cancelPendingCommit)&&(e.cancelPendingCommit=null,t()),Wu(),ru=e,iu=t=Mr(e.current,null),au=n,ou=0,lu=null,su=!1,uu=we(e,n),cu=!1,yu=gu=hu=mu=pu=fu=0,vu=bu=null,wu=!1,0!==(8&n)&&(n|=32&n);var r=e.entangledLanes;if(0!==r)for(e=e.entanglements,r&=n;0<r;){var i=31-pe(r),a=1<<i;n|=e[i],r&=~a}return du=n,Tr(),t}function Hu(e,n){va=null,z.H=Vo,n===Vi||n===Gi?(n=Zi(),ou=3):n===$i?(n=Zi(),ou=4):ou=n===El?8:null!==n&&"object"===typeof n&&"function"===typeof n.then?6:1,lu=n,null===iu&&(fu=1,xl(e,Cr(n,e.current)))}function Vu(){var e=z.H;return z.H=Vo,null===e?Vo:e}function $u(){var e=z.A;return z.A=eu,e}function Gu(){fu=4,su||(4194048&au)!==au&&null!==il.current||(uu=!0),0===(134217727&pu)&&0===(134217727&mu)||null===ru||Iu(ru,au,gu,!1)}function Qu(e,n,t){var r=tu;tu|=2;var i=Vu(),a=$u();ru===e&&au===n||(Su=null,Bu(e,n)),n=!1;var o=fu;e:for(;;)try{if(0!==ou&&null!==iu){var l=iu,s=lu;switch(ou){case 8:Wu(),o=6;break e;case 3:case 2:case 9:case 6:null===il.current&&(n=!0);var u=ou;if(ou=0,lu=null,Zu(e,l,s,u),t&&uu){o=0;break e}break;default:u=ou,ou=0,lu=null,Zu(e,l,s,u)}}Ku(),o=fu;break}catch(c){Hu(e,c)}return n&&e.shellSuspendCounter++,bi=yi=null,tu=r,z.H=i,z.A=a,null===iu&&(ru=null,au=0,Tr()),o}function Ku(){for(;null!==iu;)Yu(iu)}function Xu(){for(;null!==iu&&!Z();)Yu(iu)}function Yu(e){var n=Yl(e.alternate,e,du);e.memoizedProps=e.pendingProps,null===n?ec(e):iu=n}function Ju(e){var n=e,t=n.alternate;switch(n.tag){case 15:case 0:n=jl(t,n,n.pendingProps,n.type,void 0,au);break;case 11:n=jl(t,n,n.pendingProps,n.type.render,n.ref,au);break;case 5:Ra(n);default:as(t,n),n=Yl(t,n=iu=Ur(n,du),du)}e.memoizedProps=e.pendingProps,null===n?ec(e):iu=n}function Zu(e,n,t,r){bi=yi=null,Ra(n),Ko=null,Xo=0;var i=n.return;try{if(function(e,n,t,r,i){if(t.flags|=32768,null!==r&&"object"===typeof r&&"function"===typeof r.then){if(null!==(n=t.alternate)&&Si(n,t,i,!0),null!==(t=il.current)){switch(t.tag){case 13:return null===al?Gu():null===t.alternate&&0===fu&&(fu=3),t.flags&=-257,t.flags|=65536,t.lanes=i,r===Qi?t.flags|=16384:(null===(n=t.updateQueue)?t.updateQueue=new Set([r]):n.add(r),dc(e,r,i)),!1;case 22:return t.flags|=65536,r===Qi?t.flags|=16384:(null===(n=t.updateQueue)?(n={transitions:null,markerInstances:null,retryQueue:new Set([r])},t.updateQueue=n):null===(t=n.retryQueue)?n.retryQueue=new Set([r]):t.add(r),dc(e,r,i)),!1}throw Error(o(435,t.tag))}return dc(e,r,i),Gu(),!1}if(ai)return null!==(n=il.current)?(0===(65536&n.flags)&&(n.flags|=256),n.flags|=65536,n.lanes=i,r!==si&&hi(Cr(e=Error(o(422),{cause:r}),t))):(r!==si&&hi(Cr(n=Error(o(423),{cause:r}),t)),(e=e.current.alternate).flags|=65536,i&=-i,e.lanes|=i,r=Cr(r,t),la(e,i=Sl(e.stateNode,r,i)),4!==fu&&(fu=2)),!1;var a=Error(o(520),{cause:r});if(a=Cr(a,t),null===bu?bu=[a]:bu.push(a),4!==fu&&(fu=2),null===n)return!0;r=Cr(r,t),t=n;do{switch(t.tag){case 3:return t.flags|=65536,e=i&-i,t.lanes|=e,la(t,e=Sl(t.stateNode,r,e)),!1;case 1:if(n=t.type,a=t.stateNode,0===(128&t.flags)&&("function"===typeof n.getDerivedStateFromError||null!==a&&"function"===typeof a.componentDidCatch&&(null===Cu||!Cu.has(a))))return t.flags|=65536,i&=-i,t.lanes|=i,_l(i=Cl(i),e,t,r),la(t,i),!1}t=t.return}while(null!==t);return!1}(e,i,n,t,au))return fu=1,xl(e,Cr(t,e.current)),void(iu=null)}catch(a){if(null!==i)throw iu=i,a;return fu=1,xl(e,Cr(t,e.current)),void(iu=null)}32768&n.flags?(ai||1===r?e=!0:uu||0!==(536870912&au)?e=!1:(su=e=!0,(2===r||9===r||3===r||6===r)&&(null!==(r=il.current)&&13===r.tag&&(r.flags|=16384))),nc(n,e)):ec(n)}function ec(e){var n=e;do{if(0!==(32768&n.flags))return void nc(n,su);e=n.return;var t=rs(n.alternate,n,du);if(null!==t)return void(iu=t);if(null!==(n=n.sibling))return void(iu=n);iu=n=e}while(null!==n);0===fu&&(fu=5)}function nc(e,n){do{var t=is(e.alternate,e);if(null!==t)return t.flags&=32767,void(iu=t);if(null!==(t=e.return)&&(t.flags|=32768,t.subtreeFlags=0,t.deletions=null),!n&&null!==(e=e.sibling))return void(iu=e);iu=e=t}while(null!==e);fu=6,iu=null}function tc(e,n,t,r,i,a,l,s,u){e.cancelPendingCommit=null;do{lc()}while(0!==_u);if(0!==(6&tu))throw Error(o(327));if(null!==n){if(n===e.current)throw Error(o(177));if(a=n.lanes|n.childLanes,function(e,n,t,r,i,a){var o=e.pendingLanes;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0,e.expiredLanes&=t,e.entangledLanes&=t,e.errorRecoveryDisabledLanes&=t,e.shellSuspendCounter=0;var l=e.entanglements,s=e.expirationTimes,u=e.hiddenUpdates;for(t=o&~t;0<t;){var c=31-pe(t),d=1<<c;l[c]=0,s[c]=-1;var f=u[c];if(null!==f)for(u[c]=null,c=0;c<f.length;c++){var p=f[c];null!==p&&(p.lane&=-536870913)}t&=~d}0!==r&&Ee(e,r,0),0!==a&&0===i&&0!==e.tag&&(e.suspendedLanes|=a&~(o&~n))}(e,t,a|=Or,l,s,u),e===ru&&(iu=ru=null,au=0),Ou=n,Eu=e,Tu=t,Nu=a,Lu=i,qu=r,0!==(10256&n.subtreeFlags)||0!==(10256&n.flags)?(e.callbackNode=null,e.callbackPriority=0,Y(ae,(function(){return sc(),null}))):(e.callbackNode=null,e.callbackPriority=0),r=0!==(13878&n.flags),0!==(13878&n.subtreeFlags)||r){r=z.T,z.T=null,i=D.p,D.p=2,l=tu,tu|=4;try{!function(e,n){if(e=e.containerInfo,nd=tf,nr(e=er(e))){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var i=r.anchorOffset,a=r.focusNode;r=r.focusOffset;try{t.nodeType,a.nodeType}catch(g){t=null;break e}var l=0,s=-1,u=-1,c=0,d=0,f=e,p=null;n:for(;;){for(var m;f!==t||0!==i&&3!==f.nodeType||(s=l+i),f!==a||0!==r&&3!==f.nodeType||(u=l+r),3===f.nodeType&&(l+=f.nodeValue.length),null!==(m=f.firstChild);)p=f,f=m;for(;;){if(f===e)break n;if(p===t&&++c===i&&(s=l),p===a&&++d===r&&(u=l),null!==(m=f.nextSibling))break;p=(f=p).parentNode}f=m}t=-1===s||-1===u?null:{start:s,end:u}}else t=null}t=t||{start:0,end:0}}else t=null;for(td={focusedElem:e,selectionRange:t},tf=!1,Ss=n;null!==Ss;)if(e=(n=Ss).child,0!==(1024&n.subtreeFlags)&&null!==e)e.return=n,Ss=e;else for(;null!==Ss;){switch(a=(n=Ss).alternate,e=n.flags,n.tag){case 0:case 11:case 15:case 5:case 26:case 27:case 6:case 4:case 17:break;case 1:if(0!==(1024&e)&&null!==a){e=void 0,t=n,i=a.memoizedProps,a=a.memoizedState,r=t.stateNode;try{var h=gl(t.type,i,(t.elementType,t.type));e=r.getSnapshotBeforeUpdate(h,a),r.__reactInternalSnapshotBeforeUpdate=e}catch(y){cc(t,t.return,y)}}break;case 3:if(0!==(1024&e))if(9===(t=(e=n.stateNode.containerInfo).nodeType))hd(e);else if(1===t)switch(e.nodeName){case"HEAD":case"HTML":case"BODY":hd(e);break;default:e.textContent=""}break;default:if(0!==(1024&e))throw Error(o(163))}if(null!==(e=n.sibling)){e.return=n.return,Ss=e;break}Ss=n.return}}(e,n)}finally{tu=l,D.p=i,z.T=r}}_u=1,rc(),ic(),ac()}}function rc(){if(1===_u){_u=0;var e=Eu,n=Ou,t=0!==(13878&n.flags);if(0!==(13878&n.subtreeFlags)||t){t=z.T,z.T=null;var r=D.p;D.p=2;var i=tu;tu|=4;try{zs(n,e);var a=td,o=er(e.containerInfo),l=a.focusedElem,s=a.selectionRange;if(o!==l&&l&&l.ownerDocument&&Zt(l.ownerDocument.documentElement,l)){if(null!==s&&nr(l)){var u=s.start,c=s.end;if(void 0===c&&(c=u),"selectionStart"in l)l.selectionStart=u,l.selectionEnd=Math.min(c,l.value.length);else{var d=l.ownerDocument||document,f=d&&d.defaultView||window;if(f.getSelection){var p=f.getSelection(),m=l.textContent.length,h=Math.min(s.start,m),g=void 0===s.end?h:Math.min(s.end,m);!p.extend&&h>g&&(o=g,g=h,h=o);var y=Jt(l,h),b=Jt(l,g);if(y&&b&&(1!==p.rangeCount||p.anchorNode!==y.node||p.anchorOffset!==y.offset||p.focusNode!==b.node||p.focusOffset!==b.offset)){var v=d.createRange();v.setStart(y.node,y.offset),p.removeAllRanges(),h>g?(p.addRange(v),p.extend(b.node,b.offset)):(v.setEnd(b.node,b.offset),p.addRange(v))}}}}for(d=[],p=l;p=p.parentNode;)1===p.nodeType&&d.push({element:p,left:p.scrollLeft,top:p.scrollTop});for("function"===typeof l.focus&&l.focus(),l=0;l<d.length;l++){var w=d[l];w.element.scrollLeft=w.left,w.element.scrollTop=w.top}}tf=!!nd,td=nd=null}finally{tu=i,D.p=r,z.T=t}}e.current=n,_u=2}}function ic(){if(2===_u){_u=0;var e=Eu,n=Ou,t=0!==(8772&n.flags);if(0!==(8772&n.subtreeFlags)||t){t=z.T,z.T=null;var r=D.p;D.p=2;var i=tu;tu|=4;try{Cs(e,n.alternate,n)}finally{tu=i,D.p=r,z.T=t}}_u=3}}function ac(){if(4===_u||3===_u){_u=0,ee();var e=Eu,n=Ou,t=Tu,r=qu;0!==(10256&n.subtreeFlags)||0!==(10256&n.flags)?_u=5:(_u=0,Ou=Eu=null,oc(e,e.pendingLanes));var i=e.pendingLanes;if(0===i&&(Cu=null),Ne(t),n=n.stateNode,de&&"function"===typeof de.onCommitFiberRoot)try{de.onCommitFiberRoot(ce,n,void 0,128===(128&n.current.flags))}catch(s){}if(null!==r){n=z.T,i=D.p,D.p=2,z.T=null;try{for(var a=e.onRecoverableError,o=0;o<r.length;o++){var l=r[o];a(l.value,{componentStack:l.stack})}}finally{z.T=n,D.p=i}}0!==(3&Tu)&&lc(),kc(e),i=e.pendingLanes,0!==(4194090&t)&&0!==(42&i)?e===Fu?Pu++:(Pu=0,Fu=e):Pu=0,Sc(0,!1)}}function oc(e,n){0===(e.pooledCacheLanes&=n)&&(null!=(n=e.pooledCache)&&(e.pooledCache=null,zi(n)))}function lc(e){return rc(),ic(),ac(),sc()}function sc(){if(5!==_u)return!1;var e=Eu,n=Nu;Nu=0;var t=Ne(Tu),r=z.T,i=D.p;try{D.p=32>t?32:t,z.T=null,t=Lu,Lu=null;var a=Eu,l=Tu;if(_u=0,Ou=Eu=null,Tu=0,0!==(6&tu))throw Error(o(331));var s=tu;if(tu|=4,Ys(a.current),Bs(a,a.current,l,t),tu=s,Sc(0,!1),de&&"function"===typeof de.onPostCommitFiberRoot)try{de.onPostCommitFiberRoot(ce,a)}catch(u){}return!0}finally{D.p=i,z.T=r,oc(e,n)}}function uc(e,n,t){n=Cr(t,n),null!==(e=aa(e,n=Sl(e.stateNode,n,2),2))&&(_e(e,2),kc(e))}function cc(e,n,t){if(3===e.tag)uc(e,e,t);else for(;null!==n;){if(3===n.tag){uc(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Cu||!Cu.has(r))){e=Cr(t,e),null!==(r=aa(n,t=Cl(2),2))&&(_l(t,r,n,e),_e(r,2),kc(r));break}}n=n.return}}function dc(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new nu;var i=new Set;r.set(n,i)}else void 0===(i=r.get(n))&&(i=new Set,r.set(n,i));i.has(t)||(cu=!0,i.add(t),e=fc.bind(null,e,n,t),n.then(e,e))}function fc(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),e.pingedLanes|=e.suspendedLanes&t,e.warmLanes&=~t,ru===e&&(au&t)===t&&(4===fu||3===fu&&(62914560&au)===au&&300>ne()-xu?0===(2&tu)&&Bu(e,0):hu|=t,yu===au&&(yu=0)),kc(e)}function pc(e,n){0===n&&(n=Se()),null!==(e=qr(e,n))&&(_e(e,n),kc(e))}function mc(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),pc(e,t)}function hc(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,i=e.memoizedState;null!==i&&(t=i.retryLane);break;case 19:r=e.stateNode;break;case 22:r=e.stateNode._retryCache;break;default:throw Error(o(314))}null!==r&&r.delete(n),pc(e,t)}var gc=null,yc=null,bc=!1,vc=!1,wc=!1,xc=0;function kc(e){e!==yc&&null===e.next&&(null===yc?gc=yc=e:yc=yc.next=e),vc=!0,bc||(bc=!0,dd((function(){0!==(6&tu)?Y(re,Cc):_c()})))}function Sc(e,n){if(!wc&&vc){wc=!0;do{for(var t=!1,r=gc;null!==r;){if(!n)if(0!==e){var i=r.pendingLanes;if(0===i)var a=0;else{var o=r.suspendedLanes,l=r.pingedLanes;a=(1<<31-pe(42|e)+1)-1,a=201326741&(a&=i&~(o&~l))?201326741&a|1:a?2|a:0}0!==a&&(t=!0,Tc(r,a))}else a=au,0===(3&(a=ve(r,r===ru?a:0,null!==r.cancelPendingCommit||-1!==r.timeoutHandle)))||we(r,a)||(t=!0,Tc(r,a));r=r.next}}while(t);wc=!1}}function Cc(){_c()}function _c(){vc=bc=!1;var e=0;0!==xc&&(function(){var e=window.event;if(e&&"popstate"===e.type)return e!==ld&&(ld=e,!0);return ld=null,!1}()&&(e=xc),xc=0);for(var n=ne(),t=null,r=gc;null!==r;){var i=r.next,a=Ec(r,n);0===a?(r.next=null,null===t?gc=i:t.next=i,null===i&&(yc=t)):(t=r,(0!==e||0!==(3&a))&&(vc=!0)),r=i}Sc(e,!1)}function Ec(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,i=e.expirationTimes,a=-62914561&e.pendingLanes;0<a;){var o=31-pe(a),l=1<<o,s=i[o];-1===s?0!==(l&t)&&0===(l&r)||(i[o]=xe(l,n)):s<=n&&(e.expiredLanes|=l),a&=~l}if(t=au,t=ve(e,e===(n=ru)?t:0,null!==e.cancelPendingCommit||-1!==e.timeoutHandle),r=e.callbackNode,0===t||e===n&&(2===ou||9===ou)||null!==e.cancelPendingCommit)return null!==r&&null!==r&&J(r),e.callbackNode=null,e.callbackPriority=0;if(0===(3&t)||we(e,t)){if((n=t&-t)===e.callbackPriority)return n;switch(null!==r&&J(r),Ne(t)){case 2:case 8:t=ie;break;case 32:default:t=ae;break;case 268435456:t=le}return r=Oc.bind(null,e),t=Y(t,r),e.callbackPriority=n,e.callbackNode=t,n}return null!==r&&null!==r&&J(r),e.callbackPriority=2,e.callbackNode=null,2}function Oc(e,n){if(0!==_u&&5!==_u)return e.callbackNode=null,e.callbackPriority=0,null;var t=e.callbackNode;if(lc()&&e.callbackNode!==t)return null;var r=au;return 0===(r=ve(e,e===ru?r:0,null!==e.cancelPendingCommit||-1!==e.timeoutHandle))?null:(Ru(e,r,n),Ec(e,ne()),null!=e.callbackNode&&e.callbackNode===t?Oc.bind(null,e):null)}function Tc(e,n){if(lc())return null;Ru(e,n,!0)}function Nc(){return 0===xc&&(xc=ke()),xc}function Lc(e){return null==e||"symbol"===typeof e||"boolean"===typeof e?null:"function"===typeof e?e:Ln(""+e)}function qc(e,n){var t=n.ownerDocument.createElement("input");return t.name=n.name,t.value=n.value,e.id&&t.setAttribute("form",e.id),n.parentNode.insertBefore(t,n),e=new FormData(e),t.parentNode.removeChild(t),e}for(var Pc=0;Pc<xr.length;Pc++){var Fc=xr[Pc];kr(Fc.toLowerCase(),"on"+(Fc[0].toUpperCase()+Fc.slice(1)))}kr(pr,"onAnimationEnd"),kr(mr,"onAnimationIteration"),kr(hr,"onAnimationStart"),kr("dblclick","onDoubleClick"),kr("focusin","onFocus"),kr("focusout","onBlur"),kr(gr,"onTransitionRun"),kr(yr,"onTransitionStart"),kr(br,"onTransitionCancel"),kr(vr,"onTransitionEnd"),Ke("onMouseEnter",["mouseout","mouseover"]),Ke("onMouseLeave",["mouseout","mouseover"]),Ke("onPointerEnter",["pointerout","pointerover"]),Ke("onPointerLeave",["pointerout","pointerover"]),Qe("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Qe("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Qe("onBeforeInput",["compositionend","keypress","textInput","paste"]),Qe("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Qe("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Qe("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var zc="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Dc=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(zc));function jc(e,n){n=0!==(4&n);for(var t=0;t<e.length;t++){var r=e[t],i=r.event;r=r.listeners;e:{var a=void 0;if(n)for(var o=r.length-1;0<=o;o--){var l=r[o],s=l.instance,u=l.currentTarget;if(l=l.listener,s!==a&&i.isPropagationStopped())break e;a=l,i.currentTarget=u;try{a(i)}catch(c){yl(c)}i.currentTarget=null,a=s}else for(o=0;o<r.length;o++){if(s=(l=r[o]).instance,u=l.currentTarget,l=l.listener,s!==a&&i.isPropagationStopped())break e;a=l,i.currentTarget=u;try{a(i)}catch(c){yl(c)}i.currentTarget=null,a=s}}}}function Rc(e,n){var t=n[De];void 0===t&&(t=n[De]=new Set);var r=e+"__bubble";t.has(r)||(Ac(n,e,2,!1),t.add(r))}function Mc(e,n,t){var r=0;n&&(r|=4),Ac(t,e,r,n)}var Uc="_reactListening"+Math.random().toString(36).slice(2);function Ic(e){if(!e[Uc]){e[Uc]=!0,$e.forEach((function(n){"selectionchange"!==n&&(Dc.has(n)||Mc(n,!1,e),Mc(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Uc]||(n[Uc]=!0,Mc("selectionchange",!1,n))}}function Ac(e,n,t,r){switch(cf(n)){case 2:var i=rf;break;case 8:i=af;break;default:i=of}t=i.bind(null,n,t,e),i=void 0,!In||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(i=!0),r?void 0!==i?e.addEventListener(n,t,{capture:!0,passive:i}):e.addEventListener(n,t,!0):void 0!==i?e.addEventListener(n,t,{passive:i}):e.addEventListener(n,t,!1)}function Wc(e,n,t,r,i){var a=r;if(0===(1&n)&&0===(2&n)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var l=r.stateNode.containerInfo;if(l===i)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&o.stateNode.containerInfo===i)return;o=o.return}for(;null!==l;){if(null===(o=Ae(l)))return;if(5===(u=o.tag)||6===u||26===u||27===u){r=a=o;continue e}l=l.parentNode}}r=r.return}Rn((function(){var r=a,i=Pn(t),o=[];e:{var l=wr.get(e);if(void 0!==l){var u=et,c=e;switch(e){case"keypress":if(0===$n(t))break e;case"keydown":case"keyup":u=ht;break;case"focusin":c="focus",u=ot;break;case"focusout":c="blur",u=ot;break;case"beforeblur":case"afterblur":u=ot;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=it;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=at;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=yt;break;case pr:case mr:case hr:u=lt;break;case vr:u=bt;break;case"scroll":case"scrollend":u=tt;break;case"wheel":u=vt;break;case"copy":case"cut":case"paste":u=st;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=gt;break;case"toggle":case"beforetoggle":u=wt}var d=0!==(4&n),f=!d&&("scroll"===e||"scrollend"===e),p=d?null!==l?l+"Capture":null:l;d=[];for(var m,h=r;null!==h;){var g=h;if(m=g.stateNode,5!==(g=g.tag)&&26!==g&&27!==g||null===m||null===p||null!=(g=Mn(h,p))&&d.push(Bc(h,g,m)),f)break;h=h.return}0<d.length&&(l=new u(l,c,null,t,i),o.push({event:l,listeners:d}))}}if(0===(7&n)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||t===qn||!(c=t.relatedTarget||t.fromElement)||!Ae(c)&&!c[ze])&&(u||l)&&(l=i.window===i?i:(l=i.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(c=(c=t.relatedTarget||t.toElement)?Ae(c):null)&&(f=s(c),d=c.tag,c!==f||5!==d&&27!==d&&6!==d)&&(c=null)):(u=null,c=r),u!==c)){if(d=it,g="onMouseLeave",p="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(d=gt,g="onPointerLeave",p="onPointerEnter",h="pointer"),f=null==u?l:Be(u),m=null==c?l:Be(c),(l=new d(g,h+"leave",u,t,i)).target=f,l.relatedTarget=m,g=null,Ae(i)===r&&((d=new d(p,h+"enter",c,t,i)).target=m,d.relatedTarget=f,g=d),f=g,u&&c)e:{for(p=c,h=0,m=d=u;m;m=Vc(m))h++;for(m=0,g=p;g;g=Vc(g))m++;for(;0<h-m;)d=Vc(d),h--;for(;0<m-h;)p=Vc(p),m--;for(;h--;){if(d===p||null!==p&&d===p.alternate)break e;d=Vc(d),p=Vc(p)}d=null}else d=null;null!==u&&$c(o,l,u,d,!1),null!==c&&null!==f&&$c(o,f,c,d,!0)}if("select"===(u=(l=r?Be(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var y=Mt;else if(Pt(l))if(Ut)y=Qt;else{y=$t;var b=Vt}else!(u=l.nodeName)||"input"!==u.toLowerCase()||"checkbox"!==l.type&&"radio"!==l.type?r&&On(r.elementType)&&(y=Mt):y=Gt;switch(y&&(y=y(e,r))?Ft(o,y,t,i):(b&&b(e,l,r),"focusout"===e&&r&&"number"===l.type&&null!=r.memoizedProps.value&&vn(l,"number",l.value)),b=r?Be(r):window,e){case"focusin":(Pt(b)||"true"===b.contentEditable)&&(rr=b,ir=r,ar=null);break;case"focusout":ar=ir=rr=null;break;case"mousedown":or=!0;break;case"contextmenu":case"mouseup":case"dragend":or=!1,lr(o,t,i);break;case"selectionchange":if(tr)break;case"keydown":case"keyup":lr(o,t,i)}var v;if(kt)e:{switch(e){case"compositionstart":var w="onCompositionStart";break e;case"compositionend":w="onCompositionEnd";break e;case"compositionupdate":w="onCompositionUpdate";break e}w=void 0}else Lt?Tt(e,t)&&(w="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(w="onCompositionStart");w&&(_t&&"ko"!==t.locale&&(Lt||"onCompositionStart"!==w?"onCompositionEnd"===w&&Lt&&(v=Vn()):(Bn="value"in(Wn=i)?Wn.value:Wn.textContent,Lt=!0)),0<(b=Hc(r,w)).length&&(w=new ut(w,e,null,t,i),o.push({event:w,listeners:b}),v?w.data=v:null!==(v=Nt(t))&&(w.data=v))),(v=Ct?function(e,n){switch(e){case"compositionend":return Nt(n);case"keypress":return 32!==n.which?null:(Ot=!0,Et);case"textInput":return(e=n.data)===Et&&Ot?null:e;default:return null}}(e,t):function(e,n){if(Lt)return"compositionend"===e||!kt&&Tt(e,n)?(e=Vn(),Hn=Bn=Wn=null,Lt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return _t&&"ko"!==n.locale?null:n.data}}(e,t))&&(0<(w=Hc(r,"onBeforeInput")).length&&(b=new ut("onBeforeInput","beforeinput",null,t,i),o.push({event:b,listeners:w}),b.data=v)),function(e,n,t,r,i){if("submit"===n&&t&&t.stateNode===i){var a=Lc((i[Fe]||null).action),o=r.submitter;o&&null!==(n=(n=o[Fe]||null)?Lc(n.formAction):o.getAttribute("formAction"))&&(a=n,o=null);var l=new et("action","action",null,r,i);e.push({event:l,listeners:[{instance:null,listener:function(){if(r.defaultPrevented){if(0!==xc){var e=o?qc(i,o):new FormData(i);qo(t,{pending:!0,data:e,method:i.method,action:a},null,e)}}else"function"===typeof a&&(l.preventDefault(),e=o?qc(i,o):new FormData(i),qo(t,{pending:!0,data:e,method:i.method,action:a},a,e))},currentTarget:i}]})}}(o,e,r,t,i)}jc(o,n)}))}function Bc(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Hc(e,n){for(var t=n+"Capture",r=[];null!==e;){var i=e,a=i.stateNode;if(5!==(i=i.tag)&&26!==i&&27!==i||null===a||(null!=(i=Mn(e,t))&&r.unshift(Bc(e,i,a)),null!=(i=Mn(e,n))&&r.push(Bc(e,i,a))),3===e.tag)return r;e=e.return}return[]}function Vc(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag&&27!==e.tag);return e||null}function $c(e,n,t,r,i){for(var a=n._reactName,o=[];null!==t&&t!==r;){var l=t,s=l.alternate,u=l.stateNode;if(l=l.tag,null!==s&&s===r)break;5!==l&&26!==l&&27!==l||null===u||(s=u,i?null!=(u=Mn(t,a))&&o.unshift(Bc(t,u,s)):i||null!=(u=Mn(t,a))&&o.push(Bc(t,u,s))),t=t.return}0!==o.length&&e.push({event:n,listeners:o})}var Gc=/\r\n?/g,Qc=/\u0000|\uFFFD/g;function Kc(e){return("string"===typeof e?e:""+e).replace(Gc,"\n").replace(Qc,"")}function Xc(e,n){return n=Kc(n),Kc(e)===n}function Yc(){}function Jc(e,n,t,r,i,a){switch(t){case"children":"string"===typeof r?"body"===n||"textarea"===n&&""===r||Sn(e,r):("number"===typeof r||"bigint"===typeof r)&&"body"!==n&&Sn(e,""+r);break;case"className":tn(e,"class",r);break;case"tabIndex":tn(e,"tabindex",r);break;case"dir":case"role":case"viewBox":case"width":case"height":tn(e,t,r);break;case"style":En(e,r,a);break;case"data":if("object"!==n){tn(e,"data",r);break}case"src":case"href":if(""===r&&("a"!==n||"href"!==t)){e.removeAttribute(t);break}if(null==r||"function"===typeof r||"symbol"===typeof r||"boolean"===typeof r){e.removeAttribute(t);break}r=Ln(""+r),e.setAttribute(t,r);break;case"action":case"formAction":if("function"===typeof r){e.setAttribute(t,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}if("function"===typeof a&&("formAction"===t?("input"!==n&&Jc(e,n,"name",i.name,i,null),Jc(e,n,"formEncType",i.formEncType,i,null),Jc(e,n,"formMethod",i.formMethod,i,null),Jc(e,n,"formTarget",i.formTarget,i,null)):(Jc(e,n,"encType",i.encType,i,null),Jc(e,n,"method",i.method,i,null),Jc(e,n,"target",i.target,i,null))),null==r||"symbol"===typeof r||"boolean"===typeof r){e.removeAttribute(t);break}r=Ln(""+r),e.setAttribute(t,r);break;case"onClick":null!=r&&(e.onclick=Yc);break;case"onScroll":null!=r&&Rc("scroll",e);break;case"onScrollEnd":null!=r&&Rc("scrollend",e);break;case"dangerouslySetInnerHTML":if(null!=r){if("object"!==typeof r||!("__html"in r))throw Error(o(61));if(null!=(t=r.__html)){if(null!=i.children)throw Error(o(60));e.innerHTML=t}}break;case"multiple":e.multiple=r&&"function"!==typeof r&&"symbol"!==typeof r;break;case"muted":e.muted=r&&"function"!==typeof r&&"symbol"!==typeof r;break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":case"autoFocus":break;case"xlinkHref":if(null==r||"function"===typeof r||"boolean"===typeof r||"symbol"===typeof r){e.removeAttribute("xlink:href");break}t=Ln(""+r),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",t);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":null!=r&&"function"!==typeof r&&"symbol"!==typeof r?e.setAttribute(t,""+r):e.removeAttribute(t);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":r&&"function"!==typeof r&&"symbol"!==typeof r?e.setAttribute(t,""):e.removeAttribute(t);break;case"capture":case"download":!0===r?e.setAttribute(t,""):!1!==r&&null!=r&&"function"!==typeof r&&"symbol"!==typeof r?e.setAttribute(t,r):e.removeAttribute(t);break;case"cols":case"rows":case"size":case"span":null!=r&&"function"!==typeof r&&"symbol"!==typeof r&&!isNaN(r)&&1<=r?e.setAttribute(t,r):e.removeAttribute(t);break;case"rowSpan":case"start":null==r||"function"===typeof r||"symbol"===typeof r||isNaN(r)?e.removeAttribute(t):e.setAttribute(t,r);break;case"popover":Rc("beforetoggle",e),Rc("toggle",e),nn(e,"popover",r);break;case"xlinkActuate":rn(e,"http://www.w3.org/1999/xlink","xlink:actuate",r);break;case"xlinkArcrole":rn(e,"http://www.w3.org/1999/xlink","xlink:arcrole",r);break;case"xlinkRole":rn(e,"http://www.w3.org/1999/xlink","xlink:role",r);break;case"xlinkShow":rn(e,"http://www.w3.org/1999/xlink","xlink:show",r);break;case"xlinkTitle":rn(e,"http://www.w3.org/1999/xlink","xlink:title",r);break;case"xlinkType":rn(e,"http://www.w3.org/1999/xlink","xlink:type",r);break;case"xmlBase":rn(e,"http://www.w3.org/XML/1998/namespace","xml:base",r);break;case"xmlLang":rn(e,"http://www.w3.org/XML/1998/namespace","xml:lang",r);break;case"xmlSpace":rn(e,"http://www.w3.org/XML/1998/namespace","xml:space",r);break;case"is":nn(e,"is",r);break;case"innerText":case"textContent":break;default:(!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&nn(e,t=Tn.get(t)||t,r)}}function Zc(e,n,t,r,i,a){switch(t){case"style":En(e,r,a);break;case"dangerouslySetInnerHTML":if(null!=r){if("object"!==typeof r||!("__html"in r))throw Error(o(61));if(null!=(t=r.__html)){if(null!=i.children)throw Error(o(60));e.innerHTML=t}}break;case"children":"string"===typeof r?Sn(e,r):("number"===typeof r||"bigint"===typeof r)&&Sn(e,""+r);break;case"onScroll":null!=r&&Rc("scroll",e);break;case"onScrollEnd":null!=r&&Rc("scrollend",e);break;case"onClick":null!=r&&(e.onclick=Yc);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":case"innerText":case"textContent":break;default:Ge.hasOwnProperty(t)||("o"!==t[0]||"n"!==t[1]||(i=t.endsWith("Capture"),n=t.slice(2,i?t.length-7:void 0),"function"===typeof(a=null!=(a=e[Fe]||null)?a[t]:null)&&e.removeEventListener(n,a,i),"function"!==typeof r)?t in e?e[t]=r:!0===r?e.setAttribute(t,""):nn(e,t,r):("function"!==typeof a&&null!==a&&(t in e?e[t]=null:e.hasAttribute(t)&&e.removeAttribute(t)),e.addEventListener(n,r,i)))}}function ed(e,n,t){switch(n){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":Rc("error",e),Rc("load",e);var r,i=!1,a=!1;for(r in t)if(t.hasOwnProperty(r)){var l=t[r];if(null!=l)switch(r){case"src":i=!0;break;case"srcSet":a=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(o(137,n));default:Jc(e,n,r,l,t,null)}}return a&&Jc(e,n,"srcSet",t.srcSet,t,null),void(i&&Jc(e,n,"src",t.src,t,null));case"input":Rc("invalid",e);var s=r=l=a=null,u=null,c=null;for(i in t)if(t.hasOwnProperty(i)){var d=t[i];if(null!=d)switch(i){case"name":a=d;break;case"type":l=d;break;case"checked":u=d;break;case"defaultChecked":c=d;break;case"value":r=d;break;case"defaultValue":s=d;break;case"children":case"dangerouslySetInnerHTML":if(null!=d)throw Error(o(137,n));break;default:Jc(e,n,i,d,t,null)}}return bn(e,r,s,u,c,l,a,!1),void fn(e);case"select":for(a in Rc("invalid",e),i=l=r=null,t)if(t.hasOwnProperty(a)&&null!=(s=t[a]))switch(a){case"value":r=s;break;case"defaultValue":l=s;break;case"multiple":i=s;default:Jc(e,n,a,s,t,null)}return n=r,t=l,e.multiple=!!i,void(null!=n?wn(e,!!i,n,!1):null!=t&&wn(e,!!i,t,!0));case"textarea":for(l in Rc("invalid",e),r=a=i=null,t)if(t.hasOwnProperty(l)&&null!=(s=t[l]))switch(l){case"value":i=s;break;case"defaultValue":a=s;break;case"children":r=s;break;case"dangerouslySetInnerHTML":if(null!=s)throw Error(o(91));break;default:Jc(e,n,l,s,t,null)}return kn(e,i,a,r),void fn(e);case"option":for(u in t)if(t.hasOwnProperty(u)&&null!=(i=t[u]))if("selected"===u)e.selected=i&&"function"!==typeof i&&"symbol"!==typeof i;else Jc(e,n,u,i,t,null);return;case"dialog":Rc("beforetoggle",e),Rc("toggle",e),Rc("cancel",e),Rc("close",e);break;case"iframe":case"object":Rc("load",e);break;case"video":case"audio":for(i=0;i<zc.length;i++)Rc(zc[i],e);break;case"image":Rc("error",e),Rc("load",e);break;case"details":Rc("toggle",e);break;case"embed":case"source":case"link":Rc("error",e),Rc("load",e);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(c in t)if(t.hasOwnProperty(c)&&null!=(i=t[c]))switch(c){case"children":case"dangerouslySetInnerHTML":throw Error(o(137,n));default:Jc(e,n,c,i,t,null)}return;default:if(On(n)){for(d in t)t.hasOwnProperty(d)&&(void 0!==(i=t[d])&&Zc(e,n,d,i,t,void 0));return}}for(s in t)t.hasOwnProperty(s)&&(null!=(i=t[s])&&Jc(e,n,s,i,t,null))}var nd=null,td=null;function rd(e){return 9===e.nodeType?e:e.ownerDocument}function id(e){switch(e){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function ad(e,n){if(0===e)switch(n){case"svg":return 1;case"math":return 2;default:return 0}return 1===e&&"foreignObject"===n?0:e}function od(e,n){return"textarea"===e||"noscript"===e||"string"===typeof n.children||"number"===typeof n.children||"bigint"===typeof n.children||"object"===typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ld=null;var sd="function"===typeof setTimeout?setTimeout:void 0,ud="function"===typeof clearTimeout?clearTimeout:void 0,cd="function"===typeof Promise?Promise:void 0,dd="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof cd?function(e){return cd.resolve(null).then(e).catch(fd)}:sd;function fd(e){setTimeout((function(){throw e}))}function pd(e){return"head"===e}function md(e,n){var t=n,r=0,i=0;do{var a=t.nextSibling;if(e.removeChild(t),a&&8===a.nodeType)if("/$"===(t=a.data)){if(0<r&&8>r){t=r;var o=e.ownerDocument;if(1&t&&xd(o.documentElement),2&t&&xd(o.body),4&t)for(xd(t=o.head),o=t.firstChild;o;){var l=o.nextSibling,s=o.nodeName;o[Ue]||"SCRIPT"===s||"STYLE"===s||"LINK"===s&&"stylesheet"===o.rel.toLowerCase()||t.removeChild(o),o=l}}if(0===i)return e.removeChild(a),void Tf(n);i--}else"$"===t||"$?"===t||"$!"===t?i++:r=t.charCodeAt(0)-48;else r=0;t=a}while(t);Tf(n)}function hd(e){var n=e.firstChild;for(n&&10===n.nodeType&&(n=n.nextSibling);n;){var t=n;switch(n=n.nextSibling,t.nodeName){case"HTML":case"HEAD":case"BODY":hd(t),Ie(t);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if("stylesheet"===t.rel.toLowerCase())continue}e.removeChild(t)}}function gd(e){return"$!"===e.data||"$?"===e.data&&"complete"===e.ownerDocument.readyState}function yd(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n||"F!"===n||"F"===n)break;if("/$"===n)return null}}return e}var bd=null;function vd(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}function wd(e,n,t){switch(n=rd(t),e){case"html":if(!(e=n.documentElement))throw Error(o(452));return e;case"head":if(!(e=n.head))throw Error(o(453));return e;case"body":if(!(e=n.body))throw Error(o(454));return e;default:throw Error(o(451))}}function xd(e){for(var n=e.attributes;n.length;)e.removeAttributeNode(n[0]);Ie(e)}var kd=new Map,Sd=new Set;function Cd(e){return"function"===typeof e.getRootNode?e.getRootNode():9===e.nodeType?e:e.ownerDocument}var _d=D.d;D.d={f:function(){var e=_d.f(),n=Au();return e||n},r:function(e){var n=We(e);null!==n&&5===n.tag&&"form"===n.type?Fo(n):_d.r(e)},D:function(e){_d.D(e),Od("dns-prefetch",e,null)},C:function(e,n){_d.C(e,n),Od("preconnect",e,n)},L:function(e,n,t){_d.L(e,n,t);var r=Ed;if(r&&e&&n){var i='link[rel="preload"][as="'+gn(n)+'"]';"image"===n&&t&&t.imageSrcSet?(i+='[imagesrcset="'+gn(t.imageSrcSet)+'"]',"string"===typeof t.imageSizes&&(i+='[imagesizes="'+gn(t.imageSizes)+'"]')):i+='[href="'+gn(e)+'"]';var a=i;switch(n){case"style":a=Nd(e);break;case"script":a=Pd(e)}kd.has(a)||(e=f({rel:"preload",href:"image"===n&&t&&t.imageSrcSet?void 0:e,as:n},t),kd.set(a,e),null!==r.querySelector(i)||"style"===n&&r.querySelector(Ld(a))||"script"===n&&r.querySelector(Fd(a))||(ed(n=r.createElement("link"),"link",e),Ve(n),r.head.appendChild(n)))}},m:function(e,n){_d.m(e,n);var t=Ed;if(t&&e){var r=n&&"string"===typeof n.as?n.as:"script",i='link[rel="modulepreload"][as="'+gn(r)+'"][href="'+gn(e)+'"]',a=i;switch(r){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":a=Pd(e)}if(!kd.has(a)&&(e=f({rel:"modulepreload",href:e},n),kd.set(a,e),null===t.querySelector(i))){switch(r){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(t.querySelector(Fd(a)))return}ed(r=t.createElement("link"),"link",e),Ve(r),t.head.appendChild(r)}}},X:function(e,n){_d.X(e,n);var t=Ed;if(t&&e){var r=He(t).hoistableScripts,i=Pd(e),a=r.get(i);a||((a=t.querySelector(Fd(i)))||(e=f({src:e,async:!0},n),(n=kd.get(i))&&Rd(e,n),Ve(a=t.createElement("script")),ed(a,"link",e),t.head.appendChild(a)),a={type:"script",instance:a,count:1,state:null},r.set(i,a))}},S:function(e,n,t){_d.S(e,n,t);var r=Ed;if(r&&e){var i=He(r).hoistableStyles,a=Nd(e);n=n||"default";var o=i.get(a);if(!o){var l={loading:0,preload:null};if(o=r.querySelector(Ld(a)))l.loading=5;else{e=f({rel:"stylesheet",href:e,"data-precedence":n},t),(t=kd.get(a))&&jd(e,t);var s=o=r.createElement("link");Ve(s),ed(s,"link",e),s._p=new Promise((function(e,n){s.onload=e,s.onerror=n})),s.addEventListener("load",(function(){l.loading|=1})),s.addEventListener("error",(function(){l.loading|=2})),l.loading|=4,Dd(o,n,r)}o={type:"stylesheet",instance:o,count:1,state:l},i.set(a,o)}}},M:function(e,n){_d.M(e,n);var t=Ed;if(t&&e){var r=He(t).hoistableScripts,i=Pd(e),a=r.get(i);a||((a=t.querySelector(Fd(i)))||(e=f({src:e,async:!0,type:"module"},n),(n=kd.get(i))&&Rd(e,n),Ve(a=t.createElement("script")),ed(a,"link",e),t.head.appendChild(a)),a={type:"script",instance:a,count:1,state:null},r.set(i,a))}}};var Ed="undefined"===typeof document?null:document;function Od(e,n,t){var r=Ed;if(r&&"string"===typeof n&&n){var i=gn(n);i='link[rel="'+e+'"][href="'+i+'"]',"string"===typeof t&&(i+='[crossorigin="'+t+'"]'),Sd.has(i)||(Sd.add(i),e={rel:e,crossOrigin:t,href:n},null===r.querySelector(i)&&(ed(n=r.createElement("link"),"link",e),Ve(n),r.head.appendChild(n)))}}function Td(e,n,t,r){var i,a,l,s,u=(u=H.current)?Cd(u):null;if(!u)throw Error(o(446));switch(e){case"meta":case"title":return null;case"style":return"string"===typeof t.precedence&&"string"===typeof t.href?(n=Nd(t.href),(r=(t=He(u).hoistableStyles).get(n))||(r={type:"style",instance:null,count:0,state:null},t.set(n,r)),r):{type:"void",instance:null,count:0,state:null};case"link":if("stylesheet"===t.rel&&"string"===typeof t.href&&"string"===typeof t.precedence){e=Nd(t.href);var c=He(u).hoistableStyles,d=c.get(e);if(d||(u=u.ownerDocument||u,d={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},c.set(e,d),(c=u.querySelector(Ld(e)))&&!c._p&&(d.instance=c,d.state.loading=5),kd.has(e)||(t={rel:"preload",as:"style",href:t.href,crossOrigin:t.crossOrigin,integrity:t.integrity,media:t.media,hrefLang:t.hrefLang,referrerPolicy:t.referrerPolicy},kd.set(e,t),c||(i=u,a=e,l=t,s=d.state,i.querySelector('link[rel="preload"][as="style"]['+a+"]")?s.loading=1:(a=i.createElement("link"),s.preload=a,a.addEventListener("load",(function(){return s.loading|=1})),a.addEventListener("error",(function(){return s.loading|=2})),ed(a,"link",l),Ve(a),i.head.appendChild(a))))),n&&null===r)throw Error(o(528,""));return d}if(n&&null!==r)throw Error(o(529,""));return null;case"script":return n=t.async,"string"===typeof(t=t.src)&&n&&"function"!==typeof n&&"symbol"!==typeof n?(n=Pd(t),(r=(t=He(u).hoistableScripts).get(n))||(r={type:"script",instance:null,count:0,state:null},t.set(n,r)),r):{type:"void",instance:null,count:0,state:null};default:throw Error(o(444,e))}}function Nd(e){return'href="'+gn(e)+'"'}function Ld(e){return'link[rel="stylesheet"]['+e+"]"}function qd(e){return f({},e,{"data-precedence":e.precedence,precedence:null})}function Pd(e){return'[src="'+gn(e)+'"]'}function Fd(e){return"script[async]"+e}function zd(e,n,t){if(n.count++,null===n.instance)switch(n.type){case"style":var r=e.querySelector('style[data-href~="'+gn(t.href)+'"]');if(r)return n.instance=r,Ve(r),r;var i=f({},t,{"data-href":t.href,"data-precedence":t.precedence,href:null,precedence:null});return Ve(r=(e.ownerDocument||e).createElement("style")),ed(r,"style",i),Dd(r,t.precedence,e),n.instance=r;case"stylesheet":i=Nd(t.href);var a=e.querySelector(Ld(i));if(a)return n.state.loading|=4,n.instance=a,Ve(a),a;r=qd(t),(i=kd.get(i))&&jd(r,i),Ve(a=(e.ownerDocument||e).createElement("link"));var l=a;return l._p=new Promise((function(e,n){l.onload=e,l.onerror=n})),ed(a,"link",r),n.state.loading|=4,Dd(a,t.precedence,e),n.instance=a;case"script":return a=Pd(t.src),(i=e.querySelector(Fd(a)))?(n.instance=i,Ve(i),i):(r=t,(i=kd.get(a))&&Rd(r=f({},t),i),Ve(i=(e=e.ownerDocument||e).createElement("script")),ed(i,"link",r),e.head.appendChild(i),n.instance=i);case"void":return null;default:throw Error(o(443,n.type))}else"stylesheet"===n.type&&0===(4&n.state.loading)&&(r=n.instance,n.state.loading|=4,Dd(r,t.precedence,e));return n.instance}function Dd(e,n,t){for(var r=t.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),i=r.length?r[r.length-1]:null,a=i,o=0;o<r.length;o++){var l=r[o];if(l.dataset.precedence===n)a=l;else if(a!==i)break}a?a.parentNode.insertBefore(e,a.nextSibling):(n=9===t.nodeType?t.head:t).insertBefore(e,n.firstChild)}function jd(e,n){null==e.crossOrigin&&(e.crossOrigin=n.crossOrigin),null==e.referrerPolicy&&(e.referrerPolicy=n.referrerPolicy),null==e.title&&(e.title=n.title)}function Rd(e,n){null==e.crossOrigin&&(e.crossOrigin=n.crossOrigin),null==e.referrerPolicy&&(e.referrerPolicy=n.referrerPolicy),null==e.integrity&&(e.integrity=n.integrity)}var Md=null;function Ud(e,n,t){if(null===Md){var r=new Map,i=Md=new Map;i.set(t,r)}else(r=(i=Md).get(t))||(r=new Map,i.set(t,r));if(r.has(e))return r;for(r.set(e,null),t=t.getElementsByTagName(e),i=0;i<t.length;i++){var a=t[i];if(!(a[Ue]||a[Pe]||"link"===e&&"stylesheet"===a.getAttribute("rel"))&&"http://www.w3.org/2000/svg"!==a.namespaceURI){var o=a.getAttribute(n)||"";o=e+o;var l=r.get(o);l?l.push(a):r.set(o,[a])}}return r}function Id(e,n,t){(e=e.ownerDocument||e).head.insertBefore(t,"title"===n?e.querySelector("head > title"):null)}function Ad(e){return"stylesheet"!==e.type||0!==(3&e.state.loading)}var Wd=null;function Bd(){}function Hd(){if(this.count--,0===this.count)if(this.stylesheets)$d(this,this.stylesheets);else if(this.unsuspend){var e=this.unsuspend;this.unsuspend=null,e()}}var Vd=null;function $d(e,n){e.stylesheets=null,null!==e.unsuspend&&(e.count++,Vd=new Map,n.forEach(Gd,e),Vd=null,Hd.call(e))}function Gd(e,n){if(!(4&n.state.loading)){var t=Vd.get(e);if(t)var r=t.get(null);else{t=new Map,Vd.set(e,t);for(var i=e.querySelectorAll("link[data-precedence],style[data-precedence]"),a=0;a<i.length;a++){var o=i[a];"LINK"!==o.nodeName&&"not all"===o.getAttribute("media")||(t.set(o.dataset.precedence,o),r=o)}r&&t.set(null,r)}o=(i=n.instance).getAttribute("data-precedence"),(a=t.get(o)||r)===r&&t.set(null,i),t.set(o,i),this.count++,r=Hd.bind(this),i.addEventListener("load",r),i.addEventListener("error",r),a?a.parentNode.insertBefore(i,a.nextSibling):(e=9===e.nodeType?e.head:e).insertBefore(i,e.firstChild),n.state.loading|=4}}var Qd={$$typeof:x,Provider:null,Consumer:null,_currentValue:j,_currentValue2:j,_threadCount:0};function Kd(e,n,t,r,i,a,o,l){this.tag=1,this.containerInfo=e,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Ce(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ce(0),this.hiddenUpdates=Ce(null),this.identifierPrefix=r,this.onUncaughtError=i,this.onCaughtError=a,this.onRecoverableError=o,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=l,this.incompleteTransitions=new Map}function Xd(e,n,t,r,i,a,o,l,s,u,c,d){return e=new Kd(e,n,t,o,l,s,u,d),n=1,!0===a&&(n|=24),a=jr(3,null,null,n),e.current=a,a.stateNode=e,(n=Fi()).refCount++,e.pooledCache=n,n.refCount++,a.memoizedState={element:r,isDehydrated:t,cache:n},ta(a),e}function Yd(e){return e?e=zr:zr}function Jd(e,n,t,r,i,a){i=Yd(i),null===r.context?r.context=i:r.pendingContext=i,(r=ia(n)).payload={element:t},null!==(a=void 0===a?null:a)&&(r.callback=a),null!==(t=aa(e,r,n))&&(ju(t,0,n),oa(t,e,n))}function Zd(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function ef(e,n){Zd(e,n),(e=e.alternate)&&Zd(e,n)}function nf(e){if(13===e.tag){var n=qr(e,67108864);null!==n&&ju(n,0,67108864),ef(e,67108864)}}var tf=!0;function rf(e,n,t,r){var i=z.T;z.T=null;var a=D.p;try{D.p=2,of(e,n,t,r)}finally{D.p=a,z.T=i}}function af(e,n,t,r){var i=z.T;z.T=null;var a=D.p;try{D.p=8,of(e,n,t,r)}finally{D.p=a,z.T=i}}function of(e,n,t,r){if(tf){var i=lf(r);if(null===i)Wc(e,n,r,sf,t),vf(e,r);else if(function(e,n,t,r,i){switch(n){case"focusin":return ff=wf(ff,e,n,t,r,i),!0;case"dragenter":return pf=wf(pf,e,n,t,r,i),!0;case"mouseover":return mf=wf(mf,e,n,t,r,i),!0;case"pointerover":var a=i.pointerId;return hf.set(a,wf(hf.get(a)||null,e,n,t,r,i)),!0;case"gotpointercapture":return a=i.pointerId,gf.set(a,wf(gf.get(a)||null,e,n,t,r,i)),!0}return!1}(i,e,n,t,r))r.stopPropagation();else if(vf(e,r),4&n&&-1<bf.indexOf(e)){for(;null!==i;){var a=We(i);if(null!==a)switch(a.tag){case 3:if((a=a.stateNode).current.memoizedState.isDehydrated){var o=be(a.pendingLanes);if(0!==o){var l=a;for(l.pendingLanes|=2,l.entangledLanes|=2;o;){var s=1<<31-pe(o);l.entanglements[1]|=s,o&=~s}kc(a),0===(6&tu)&&(ku=ne()+500,Sc(0,!1))}}break;case 13:null!==(l=qr(a,2))&&ju(l,0,2),Au(),ef(a,2)}if(null===(a=lf(r))&&Wc(e,n,r,sf,t),a===i)break;i=a}null!==i&&r.stopPropagation()}else Wc(e,n,r,null,t)}}function lf(e){return uf(e=Pn(e))}var sf=null;function uf(e){if(sf=null,null!==(e=Ae(e))){var n=s(e);if(null===n)e=null;else{var t=n.tag;if(13===t){if(null!==(e=u(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null)}}return sf=e,null}function cf(e){switch(e){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(te()){case re:return 2;case ie:return 8;case ae:case oe:return 32;case le:return 268435456;default:return 32}default:return 32}}var df=!1,ff=null,pf=null,mf=null,hf=new Map,gf=new Map,yf=[],bf="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function vf(e,n){switch(e){case"focusin":case"focusout":ff=null;break;case"dragenter":case"dragleave":pf=null;break;case"mouseover":case"mouseout":mf=null;break;case"pointerover":case"pointerout":hf.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":gf.delete(n.pointerId)}}function wf(e,n,t,r,i,a){return null===e||e.nativeEvent!==a?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:a,targetContainers:[i]},null!==n&&(null!==(n=We(n))&&nf(n)),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==i&&-1===n.indexOf(i)&&n.push(i),e)}function xf(e){var n=Ae(e.target);if(null!==n){var t=s(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=u(t)))return e.blockedOn=n,void function(e,n){var t=D.p;try{return D.p=e,n()}finally{D.p=t}}(e.priority,(function(){if(13===t.tag){var e=zu();e=Te(e);var n=qr(t,e);null!==n&&ju(n,0,e),ef(t,e)}}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function kf(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=lf(e.nativeEvent);if(null!==t)return null!==(n=We(t))&&nf(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);qn=r,t.target.dispatchEvent(r),qn=null,n.shift()}return!0}function Sf(e,n,t){kf(e)&&t.delete(n)}function Cf(){df=!1,null!==ff&&kf(ff)&&(ff=null),null!==pf&&kf(pf)&&(pf=null),null!==mf&&kf(mf)&&(mf=null),hf.forEach(Sf),gf.forEach(Sf)}function _f(e,n){e.blockedOn===n&&(e.blockedOn=null,df||(df=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Cf)))}var Ef=null;function Of(e){Ef!==e&&(Ef=e,r.unstable_scheduleCallback(r.unstable_NormalPriority,(function(){Ef===e&&(Ef=null);for(var n=0;n<e.length;n+=3){var t=e[n],r=e[n+1],i=e[n+2];if("function"!==typeof r){if(null===uf(r||t))continue;break}var a=We(t);null!==a&&(e.splice(n,3),n-=3,qo(a,{pending:!0,data:i,method:t.method,action:r},r,i))}})))}function Tf(e){function n(n){return _f(n,e)}null!==ff&&_f(ff,e),null!==pf&&_f(pf,e),null!==mf&&_f(mf,e),hf.forEach(n),gf.forEach(n);for(var t=0;t<yf.length;t++){var r=yf[t];r.blockedOn===e&&(r.blockedOn=null)}for(;0<yf.length&&null===(t=yf[0]).blockedOn;)xf(t),null===t.blockedOn&&yf.shift();if(null!=(t=(e.ownerDocument||e).$$reactFormReplay))for(r=0;r<t.length;r+=3){var i=t[r],a=t[r+1],o=i[Fe]||null;if("function"===typeof a)o||Of(t);else if(o){var l=null;if(a&&a.hasAttribute("formAction")){if(i=a,o=a[Fe]||null)l=o.formAction;else if(null!==uf(i))continue}else l=o.action;"function"===typeof l?t[r+1]=l:(t.splice(r,3),r-=3),Of(t)}}}function Nf(e){this._internalRoot=e}function Lf(e){this._internalRoot=e}Lf.prototype.render=Nf.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(o(409));Jd(n.current,zu(),e,n,null,null)},Lf.prototype.unmount=Nf.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;Jd(e.current,2,null,e,null,null),Au(),n[ze]=null}},Lf.prototype.unstable_scheduleHydration=function(e){if(e){var n=Le();e={blockedOn:null,target:e,priority:n};for(var t=0;t<yf.length&&0!==n&&n<yf[t].priority;t++);yf.splice(t,0,e),0===t&&xf(e)}};var qf=i.version;if("19.1.0"!==qf)throw Error(o(527,qf,"19.1.0"));D.findDOMNode=function(e){var n=e._reactInternals;if(void 0===n){if("function"===typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return e=function(e){var n=e.alternate;if(!n){if(null===(n=s(e)))throw Error(o(188));return n!==e?null:e}for(var t=e,r=n;;){var i=t.return;if(null===i)break;var a=i.alternate;if(null===a){if(null!==(r=i.return)){t=r;continue}break}if(i.child===a.child){for(a=i.child;a;){if(a===t)return c(i),e;if(a===r)return c(i),n;a=a.sibling}throw Error(o(188))}if(t.return!==r.return)t=i,r=a;else{for(var l=!1,u=i.child;u;){if(u===t){l=!0,t=i,r=a;break}if(u===r){l=!0,r=i,t=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===t){l=!0,t=a,r=i;break}if(u===r){l=!0,r=a,t=i;break}u=u.sibling}if(!l)throw Error(o(189))}}if(t.alternate!==r)throw Error(o(190))}if(3!==t.tag)throw Error(o(188));return t.stateNode.current===t?e:n}(n),e=null===(e=null!==e?d(e):null)?null:e.stateNode};var Pf={bundleType:0,version:"19.1.0",rendererPackageName:"react-dom",currentDispatcherRef:z,reconcilerVersion:"19.1.0"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Ff=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ff.isDisabled&&Ff.supportsFiber)try{ce=Ff.inject(Pf),de=Ff}catch(Df){}}n.createRoot=function(e,n){if(!l(e))throw Error(o(299));var t=!1,r="",i=bl,a=vl,s=wl;return null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onUncaughtError&&(i=n.onUncaughtError),void 0!==n.onCaughtError&&(a=n.onCaughtError),void 0!==n.onRecoverableError&&(s=n.onRecoverableError),void 0!==n.unstable_transitionCallbacks&&n.unstable_transitionCallbacks),n=Xd(e,1,!1,null,0,t,r,i,a,s,0,null),e[ze]=n.current,Ic(e),new Nf(n)},n.hydrateRoot=function(e,n,t){if(!l(e))throw Error(o(299));var r=!1,i="",a=bl,s=vl,u=wl,c=null;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(r=!0),void 0!==t.identifierPrefix&&(i=t.identifierPrefix),void 0!==t.onUncaughtError&&(a=t.onUncaughtError),void 0!==t.onCaughtError&&(s=t.onCaughtError),void 0!==t.onRecoverableError&&(u=t.onRecoverableError),void 0!==t.unstable_transitionCallbacks&&t.unstable_transitionCallbacks,void 0!==t.formState&&(c=t.formState)),(n=Xd(e,1,!0,n,0,r,i,a,s,u,0,c)).context=Yd(null),t=n.current,(i=ia(r=Te(r=zu()))).callback=null,aa(t,i,r),t=r,n.current.lanes=t,_e(n,t),kc(n),e[ze]=n.current,Ic(e),new Lf(n)},n.version="19.1.0"},43:(e,n,t)=>{e.exports=t(288)},288:(e,n)=>{var t=Symbol.for("react.transitional.element"),r=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),l=Symbol.for("react.consumer"),s=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator;var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,g={};function y(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||m}function b(){}function v(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||m}y.prototype.isReactComponent={},y.prototype.setState=function(e,n){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var w=v.prototype=new b;w.constructor=v,h(w,y.prototype),w.isPureReactComponent=!0;var x=Array.isArray,k={H:null,A:null,T:null,S:null,V:null},S=Object.prototype.hasOwnProperty;function C(e,n,r,i,a,o){return r=o.ref,{$$typeof:t,type:e,key:n,ref:void 0!==r?r:null,props:o}}function _(e){return"object"===typeof e&&null!==e&&e.$$typeof===t}var E=/\/+/g;function O(e,n){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function T(){}function N(e,n,i,a,o){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var s,u,c=!1;if(null===e)c=!0;else switch(l){case"bigint":case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case t:case r:c=!0;break;case f:return N((c=e._init)(e._payload),n,i,a,o)}}if(c)return o=o(e),c=""===a?"."+O(e,0):a,x(o)?(i="",null!=c&&(i=c.replace(E,"$&/")+"/"),N(o,n,i,"",(function(e){return e}))):null!=o&&(_(o)&&(s=o,u=i+(null==o.key||e&&e.key===o.key?"":(""+o.key).replace(E,"$&/")+"/")+c,o=C(s.type,u,void 0,0,0,s.props)),n.push(o)),1;c=0;var d,m=""===a?".":a+":";if(x(e))for(var h=0;h<e.length;h++)c+=N(a=e[h],n,i,l=m+O(a,h),o);else if("function"===typeof(h=null===(d=e)||"object"!==typeof d?null:"function"===typeof(d=p&&d[p]||d["@@iterator"])?d:null))for(e=h.call(e),h=0;!(a=e.next()).done;)c+=N(a=a.value,n,i,l=m+O(a,h++),o);else if("object"===l){if("function"===typeof e.then)return N(function(e){switch(e.status){case"fulfilled":return e.value;case"rejected":throw e.reason;default:switch("string"===typeof e.status?e.then(T,T):(e.status="pending",e.then((function(n){"pending"===e.status&&(e.status="fulfilled",e.value=n)}),(function(n){"pending"===e.status&&(e.status="rejected",e.reason=n)}))),e.status){case"fulfilled":return e.value;case"rejected":throw e.reason}}throw e}(e),n,i,a,o);throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.")}return c}function L(e,n,t){if(null==e)return e;var r=[],i=0;return N(e,r,"","",(function(e){return n.call(t,e,i++)})),r}function q(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var P="function"===typeof reportError?reportError:function(e){if("object"===typeof window&&"function"===typeof window.ErrorEvent){var n=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:"object"===typeof e&&null!==e&&"string"===typeof e.message?String(e.message):String(e),error:e});if(!window.dispatchEvent(n))return}else if("object"===typeof process&&"function"===typeof process.emit)return void process.emit("uncaughtException",e);console.error(e)};function F(){}n.Children={map:L,forEach:function(e,n,t){L(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return L(e,(function(){n++})),n},toArray:function(e){return L(e,(function(e){return e}))||[]},only:function(e){if(!_(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=y,n.Fragment=i,n.Profiler=o,n.PureComponent=v,n.StrictMode=a,n.Suspense=c,n.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=k,n.__COMPILER_RUNTIME={__proto__:null,c:function(e){return k.H.useMemoCache(e)}},n.cache=function(e){return function(){return e.apply(null,arguments)}},n.cloneElement=function(e,n,t){if(null===e||void 0===e)throw Error("The argument must be a React element, but you passed "+e+".");var r=h({},e.props),i=e.key;if(null!=n)for(a in void 0!==n.ref&&void 0,void 0!==n.key&&(i=""+n.key),n)!S.call(n,a)||"key"===a||"__self"===a||"__source"===a||"ref"===a&&void 0===n.ref||(r[a]=n[a]);var a=arguments.length-2;if(1===a)r.children=t;else if(1<a){for(var o=Array(a),l=0;l<a;l++)o[l]=arguments[l+2];r.children=o}return C(e.type,i,void 0,0,0,r)},n.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider=e,e.Consumer={$$typeof:l,_context:e},e},n.createElement=function(e,n,t){var r,i={},a=null;if(null!=n)for(r in void 0!==n.key&&(a=""+n.key),n)S.call(n,r)&&"key"!==r&&"__self"!==r&&"__source"!==r&&(i[r]=n[r]);var o=arguments.length-2;if(1===o)i.children=t;else if(1<o){for(var l=Array(o),s=0;s<o;s++)l[s]=arguments[s+2];i.children=l}if(e&&e.defaultProps)for(r in o=e.defaultProps)void 0===i[r]&&(i[r]=o[r]);return C(e,a,void 0,0,0,i)},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:u,render:e}},n.isValidElement=_,n.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:q}},n.memo=function(e,n){return{$$typeof:d,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=k.T,t={};k.T=t;try{var r=e(),i=k.S;null!==i&&i(t,r),"object"===typeof r&&null!==r&&"function"===typeof r.then&&r.then(F,P)}catch(a){P(a)}finally{k.T=n}},n.unstable_useCacheRefresh=function(){return k.H.useCacheRefresh()},n.use=function(e){return k.H.use(e)},n.useActionState=function(e,n,t){return k.H.useActionState(e,n,t)},n.useCallback=function(e,n){return k.H.useCallback(e,n)},n.useContext=function(e){return k.H.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e,n){return k.H.useDeferredValue(e,n)},n.useEffect=function(e,n,t){var r=k.H;if("function"===typeof t)throw Error("useEffect CRUD overload is not enabled in this build of React.");return r.useEffect(e,n)},n.useId=function(){return k.H.useId()},n.useImperativeHandle=function(e,n,t){return k.H.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return k.H.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return k.H.useLayoutEffect(e,n)},n.useMemo=function(e,n){return k.H.useMemo(e,n)},n.useOptimistic=function(e,n){return k.H.useOptimistic(e,n)},n.useReducer=function(e,n,t){return k.H.useReducer(e,n,t)},n.useRef=function(e){return k.H.useRef(e)},n.useState=function(e){return k.H.useState(e)},n.useSyncExternalStore=function(e,n,t){return k.H.useSyncExternalStore(e,n,t)},n.useTransition=function(){return k.H.useTransition()},n.version="19.1.0"},391:(e,n,t)=>{!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}(),e.exports=t(4)},579:(e,n,t)=>{e.exports=t(799)},672:(e,n,t)=>{var r=t(43);function i(e){var n="https://react.dev/errors/"+e;if(1<arguments.length){n+="?args[]="+encodeURIComponent(arguments[1]);for(var t=2;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t])}return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function a(){}var o={d:{f:a,r:function(){throw Error(i(522))},D:a,C:a,L:a,m:a,X:a,S:a,M:a},p:0,findDOMNode:null},l=Symbol.for("react.portal");var s=r.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function u(e,n){return"font"===e?"":"string"===typeof n?"use-credentials"===n?n:"":void 0}n.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=o,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!n||1!==n.nodeType&&9!==n.nodeType&&11!==n.nodeType)throw Error(i(299));return function(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:l,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}(e,n,null,t)},n.flushSync=function(e){var n=s.T,t=o.p;try{if(s.T=null,o.p=2,e)return e()}finally{s.T=n,o.p=t,o.d.f()}},n.preconnect=function(e,n){"string"===typeof e&&(n?n="string"===typeof(n=n.crossOrigin)?"use-credentials"===n?n:"":void 0:n=null,o.d.C(e,n))},n.prefetchDNS=function(e){"string"===typeof e&&o.d.D(e)},n.preinit=function(e,n){if("string"===typeof e&&n&&"string"===typeof n.as){var t=n.as,r=u(t,n.crossOrigin),i="string"===typeof n.integrity?n.integrity:void 0,a="string"===typeof n.fetchPriority?n.fetchPriority:void 0;"style"===t?o.d.S(e,"string"===typeof n.precedence?n.precedence:void 0,{crossOrigin:r,integrity:i,fetchPriority:a}):"script"===t&&o.d.X(e,{crossOrigin:r,integrity:i,fetchPriority:a,nonce:"string"===typeof n.nonce?n.nonce:void 0})}},n.preinitModule=function(e,n){if("string"===typeof e)if("object"===typeof n&&null!==n){if(null==n.as||"script"===n.as){var t=u(n.as,n.crossOrigin);o.d.M(e,{crossOrigin:t,integrity:"string"===typeof n.integrity?n.integrity:void 0,nonce:"string"===typeof n.nonce?n.nonce:void 0})}}else null==n&&o.d.M(e)},n.preload=function(e,n){if("string"===typeof e&&"object"===typeof n&&null!==n&&"string"===typeof n.as){var t=n.as,r=u(t,n.crossOrigin);o.d.L(e,t,{crossOrigin:r,integrity:"string"===typeof n.integrity?n.integrity:void 0,nonce:"string"===typeof n.nonce?n.nonce:void 0,type:"string"===typeof n.type?n.type:void 0,fetchPriority:"string"===typeof n.fetchPriority?n.fetchPriority:void 0,referrerPolicy:"string"===typeof n.referrerPolicy?n.referrerPolicy:void 0,imageSrcSet:"string"===typeof n.imageSrcSet?n.imageSrcSet:void 0,imageSizes:"string"===typeof n.imageSizes?n.imageSizes:void 0,media:"string"===typeof n.media?n.media:void 0})}},n.preloadModule=function(e,n){if("string"===typeof e)if(n){var t=u(n.as,n.crossOrigin);o.d.m(e,{as:"string"===typeof n.as&&"script"!==n.as?n.as:void 0,crossOrigin:t,integrity:"string"===typeof n.integrity?n.integrity:void 0})}else o.d.m(e)},n.requestFormReset=function(e){o.d.r(e)},n.unstable_batchedUpdates=function(e,n){return e(n)},n.useFormState=function(e,n,t){return s.H.useFormState(e,n,t)},n.useFormStatus=function(){return s.H.useHostTransitionStatus()},n.version="19.1.0"},799:(e,n)=>{var t=Symbol.for("react.transitional.element");function r(e,n,r){var i=null;if(void 0!==r&&(i=""+r),void 0!==n.key&&(i=""+n.key),"key"in n)for(var a in r={},n)"key"!==a&&(r[a]=n[a]);else r=n;return n=r.ref,{$$typeof:t,type:e,key:i,ref:void 0!==n?n:null,props:r}}Symbol.for("react.fragment"),n.jsx=r,n.jsxs=r},853:(e,n,t)=>{e.exports=t(896)},896:(e,n)=>{function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,i=e[r];if(!(0<a(i,n)))break e;e[r]=n,e[t]=i,t=r}}function r(e){return 0===e.length?null:e[0]}function i(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,i=e.length,o=i>>>1;r<o;){var l=2*(r+1)-1,s=e[l],u=l+1,c=e[u];if(0>a(s,t))u<i&&0>a(c,s)?(e[r]=c,e[u]=t,r=u):(e[r]=s,e[l]=t,r=l);else{if(!(u<i&&0>a(c,t)))break e;e[r]=c,e[u]=t,r=u}}}return n}function a(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if(n.unstable_now=void 0,"object"===typeof performance&&"function"===typeof performance.now){var o=performance;n.unstable_now=function(){return o.now()}}else{var l=Date,s=l.now();n.unstable_now=function(){return l.now()-s}}var u=[],c=[],d=1,f=null,p=3,m=!1,h=!1,g=!1,y=!1,b="function"===typeof setTimeout?setTimeout:null,v="function"===typeof clearTimeout?clearTimeout:null,w="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var n=r(c);null!==n;){if(null===n.callback)i(c);else{if(!(n.startTime<=e))break;i(c),n.sortIndex=n.expirationTime,t(u,n)}n=r(c)}}function k(e){if(g=!1,x(e),!h)if(null!==r(u))h=!0,C||(C=!0,S());else{var n=r(c);null!==n&&P(k,n.startTime-e)}}var S,C=!1,_=-1,E=5,O=-1;function T(){return!!y||!(n.unstable_now()-O<E)}function N(){if(y=!1,C){var e=n.unstable_now();O=e;var t=!0;try{e:{h=!1,g&&(g=!1,v(_),_=-1),m=!0;var a=p;try{n:{for(x(e),f=r(u);null!==f&&!(f.expirationTime>e&&T());){var o=f.callback;if("function"===typeof o){f.callback=null,p=f.priorityLevel;var l=o(f.expirationTime<=e);if(e=n.unstable_now(),"function"===typeof l){f.callback=l,x(e),t=!0;break n}f===r(u)&&i(u),x(e)}else i(u);f=r(u)}if(null!==f)t=!0;else{var s=r(c);null!==s&&P(k,s.startTime-e),t=!1}}break e}finally{f=null,p=a,m=!1}t=void 0}}finally{t?S():C=!1}}}if("function"===typeof w)S=function(){w(N)};else if("undefined"!==typeof MessageChannel){var L=new MessageChannel,q=L.port2;L.port1.onmessage=N,S=function(){q.postMessage(null)}}else S=function(){b(N,0)};function P(e,t){_=b((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):E=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_requestPaint=function(){y=!0},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,i,a){var o=n.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?o+a:o:a=o,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:d++,callback:i,priorityLevel:e,startTime:a,expirationTime:l=a+l,sortIndex:-1},a>o?(e.sortIndex=a,t(c,e),null===r(u)&&e===r(c)&&(g?(v(_),_=-1):g=!0,P(k,a-o))):(e.sortIndex=l,t(u,e),h||m||(h=!0,C||(C=!0,S()))),e},n.unstable_shouldYield=T,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},950:(e,n,t)=>{!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(n){console.error(n)}}(),e.exports=t(672)}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.f={},t.e=e=>Promise.all(Object.keys(t.f).reduce(((n,r)=>(t.f[r](e,n),n)),[])),t.u=e=>"static/js/"+e+".4f19c5da.chunk.js",t.miniCssF=e=>{},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e={},n="leetcodeflipcards:";t.l=(r,i,a,o)=>{if(e[r])e[r].push(i);else{var l,s;if(void 0!==a)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var d=u[c];if(d.getAttribute("src")==r||d.getAttribute("data-webpack")==n+a){l=d;break}}l||(s=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,t.nc&&l.setAttribute("nonce",t.nc),l.setAttribute("data-webpack",n+a),l.src=r),e[r]=[i];var f=(n,t)=>{l.onerror=l.onload=null,clearTimeout(p);var i=e[r];if(delete e[r],l.parentNode&&l.parentNode.removeChild(l),i&&i.forEach((e=>e(t))),n)return n(t)},p=setTimeout(f.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=f.bind(null,l.onerror),l.onload=f.bind(null,l.onload),s&&document.head.appendChild(l)}}})(),t.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.p="/",(()=>{var e={792:0};t.f.j=(n,r)=>{var i=t.o(e,n)?e[n]:void 0;if(0!==i)if(i)r.push(i[2]);else{var a=new Promise(((t,r)=>i=e[n]=[t,r]));r.push(i[2]=a);var o=t.p+t.u(n),l=new Error;t.l(o,(r=>{if(t.o(e,n)&&(0!==(i=e[n])&&(e[n]=void 0),i)){var a=r&&("load"===r.type?"missing":r.type),o=r&&r.target&&r.target.src;l.message="Loading chunk "+n+" failed.\n("+a+": "+o+")",l.name="ChunkLoadError",l.type=a,l.request=o,i[1](l)}}),"chunk-"+n,n)}};var n=(n,r)=>{var i,a,o=r[0],l=r[1],s=r[2],u=0;if(o.some((n=>0!==e[n]))){for(i in l)t.o(l,i)&&(t.m[i]=l[i]);if(s)s(t)}for(n&&n(r);u<o.length;u++)a=o[u],t.o(e,a)&&e[a]&&e[a][0](),e[a]=0},r=self.webpackChunkleetcodeflipcards=self.webpackChunkleetcodeflipcards||[];r.forEach(n.bind(null,0)),r.push=n.bind(null,r.push.bind(r))})();var r=t(43),i=t(391);const a=[{id:1,title:"Contains Duplicate",question:"Check if an array contains any duplicates.",hint:"Think about using a data structure that allows for quick lookup.",oneLiner:"Use a set to check if any element repeats.",simpleExplanation:"We go through each number.\nWe keep a list of ones we've already seen.\nIf a number shows up again, we know it's a duplicate.",mnemonics:['"Seen before?" \u2192 if num in seen: return True','"Add new" \u2192 seen.add(num)','"End clean" \u2192 return False'],code:"def hasDuplicate(nums):\n    seen = set()\n    for num in nums:\n        if num in seen:\n            return True\n        seen.add(num)\n    return False",timeComplexity:"O(n) - one pass through the array",spaceComplexity:"O(n) - in worst case, all elements in set"},{id:2,title:"Valid Anagram",question:"Determine if two strings are anagrams (contain the same letters).",hint:"Count the frequency of characters in both strings and compare.",oneLiner:"Use counters (hashmaps) to compare character frequencies.",simpleExplanation:"We count the letters in both words.\nIf every letter shows up the same number of times, it's an anagram.\nOtherwise, it's not.",mnemonics:['"Count both" \u2192 Counter(s) == Counter(t)','"Compare maps" \u2192 for key in counts: compare values','"Return result" \u2192 return True/False'],code:"def isAnagram(s, t):\n    if len(s) != len(t):\n        return False\n\n    count = [0] * 26\n    for i in range(len(s)):\n        count[ord(s[i]) - ord('a')] += 1\n        count[ord(t[i]) - ord('a')] -= 1\n\n    for val in count:\n        if val != 0:\n            return False\n    return True",timeComplexity:"O(n) - where n is the length of the strings",spaceComplexity:"O(1) - fixed array size for character counts"},{id:3,title:"Two Sum",question:"Find two numbers in an array that add up to a target.",hint:"Use a hash map to store values you've seen and their indices.",oneLiner:"Store each number's complement in a hashmap as we loop.",simpleExplanation:"We look for two numbers that add to a target.\nWe remember each number we see and what we need to reach the target.\nIf we find the right pair, we return their positions.",mnemonics:['"Check map" \u2192 if target - num in seen: return [i, seen[target - num]]','"Store index" \u2192 seen[num] = i','"Loop through" \u2192 for i, num in enumerate(nums):'],code:"def twoSum(nums, target):\n    indices = {}  # val -> index\n    for i, n in enumerate(nums):\n        diff = target - n\n        if diff in indices:\n            return [indices[diff], i]\n        indices[n] = i\n    return []",timeComplexity:"O(n) - one pass through the array",spaceComplexity:"O(n) - for the hash map"},{id:4,title:"Group Anagrams",question:"Group a list of strings such that all anagrams are together.",hint:"Use a common representation (like sorted string) as a key to group anagrams.",oneLiner:"Group words using sorted letters as a key in a hashmap.",simpleExplanation:"We sort the letters in each word.\nWords with the same letters go into the same group.\nWe collect all the groups.",mnemonics:["\"Sort word\" \u2192 key = ''.join(sorted(word))",'"Group by key" \u2192 anagram_map[key].append(word)','"Return values" \u2192 return anagram_map.values()'],code:"def groupAnagrams(strs):\n    res = defaultdict(list)\n    for s in strs:\n        count = [0] * 26\n        for c in s:\n            count[ord(c) - ord('a')] += 1\n        res[tuple(count)].append(s)\n    return list(res.values())",timeComplexity:"O(n*k) - where n is the number of strings and k is the max string length",spaceComplexity:"O(n) - for storing all strings"},{id:5,title:"Top K Frequent Elements",question:"Find the k most frequent elements in an array.",hint:"Use a counter to track frequencies and a heap to find the top k elements.",oneLiner:"Use a counter and a heap to get the top k items.",simpleExplanation:"We count how many times each number shows up.\nWe keep the k most common ones.\nThen we return them.",mnemonics:['"Count frequency" \u2192 count = Counter(nums)','"Heap select top" \u2192 heapq.nlargest(k, count.keys(), key=count.get)','"Return result" \u2192 return result'],code:"def topKFrequent(nums, k):\n    count = {}\n    freq = [[] for i in range(len(nums) + 1)]\n\n    for num in nums:\n        count[num] = 1 + count.get(num, 0)\n    for num, cnt in count.items():\n        freq[cnt].append(num)\n    \n    res = []\n    for i in range(len(freq) - 1, 0, -1):\n        for num in freq[i]:\n            res.append(num)\n            if len(res) == k:\n                return res",timeComplexity:"O(n) - bucket sort approach",spaceComplexity:"O(n) - for the frequency counters"},{id:6,title:"Encode and Decode Strings",question:"Design an algorithm to encode and decode a list of strings into a single string.",hint:"Use a delimiter with length information to separate strings unambiguously.",oneLiner:"Use a length prefix or delimiter to encode, then decode safely.",simpleExplanation:"We turn each word into a number + word combo.\nThat way we can separate them later.\nWe read the length to split them back correctly.",mnemonics:['"Encode with length" \u2192 s = str(len(word)) + "#" + word','"Split by count" \u2192 length = int(s[:i]), then s[i+1:i+1+length]','"Loop until done" \u2192 while i < len(s): decode'],code:'class Solution:\n    def encode(self, strs):\n        res = ""\n        for s in strs:\n            res += str(len(s)) + "#" + s\n        return res\n\n    def decode(self, s):\n        res = []\n        i = 0\n        \n        while i < len(s):\n            j = i\n            while s[j] != \'#\':\n                j += 1\n            length = int(s[i:j])\n            i = j + 1\n            j = i + length\n            res.append(s[i:j])\n            i = j\n            \n        return res',timeComplexity:"O(n) - linear in total string length",spaceComplexity:"O(n) - for the encoded/decoded strings"},{id:7,title:"Product of Array Except Self",question:"Compute the product of all elements except self without division.",hint:"Use prefix and suffix products to compute the result in two passes.",oneLiner:"Use prefix and suffix multiplications without division.",simpleExplanation:"We find how much every number would be if we multiply all other numbers.\nFirst, we go left to right.\nThen, we go right to left and finish the math.",mnemonics:['"Left pass" \u2192 for i in range(n): res[i] *= prefix','"Right pass" \u2192 for i in reversed(range(n)): res[i] *= suffix','"Update prefixes" \u2192 prefix *= nums[i], suffix *= nums[i]'],code:"def productExceptSelf(nums):\n    res = [1] * (len(nums))\n\n    prefix = 1\n    for i in range(len(nums)):\n        res[i] = prefix\n        prefix *= nums[i]\n    postfix = 1\n    for i in range(len(nums) - 1, -1, -1):\n        res[i] *= postfix\n        postfix *= nums[i]\n    return res",timeComplexity:"O(n) - two passes through the array",spaceComplexity:"O(1) - excluding output array"},{id:8,title:"Valid Sudoku",question:"Determine if a 9x9 Sudoku board is valid.",hint:"Check each row, column, and 3x3 sub-box for duplicates.",oneLiner:"Use sets to check each row, column, and 3x3 box.",simpleExplanation:"Each row, column, and box must have unique numbers.\nWe go through the board and record what we see.\nIf anything repeats in the same row, column, or box, it's not valid.",mnemonics:['"Check each cell" \u2192 for i in range(9): for j in range(9):','"Use 3 keys" \u2192 row[i], col[j], box[i//3, j//3]','"Add or return False" \u2192 if val in set: return False else: add'],code:'def isValidSudoku(board):\n    for row in range(9):\n        seen = set()\n        for i in range(9):\n            if board[row][i] == ".": \n                continue\n            if board[row][i] in seen:\n                return False\n            seen.add(board[row][i])\n    \n    for col in range(9):\n        seen = set()\n        for i in range(9):\n            if board[i][col] == ".":\n                continue\n            if board[i][col] in seen:\n                return False\n            seen.add(board[i][col])\n        \n    for square in range(9):\n        seen = set()\n        for i in range(3):\n            for j in range(3):\n                row = (square//3) * 3 + i\n                col = (square % 3) * 3 + j\n                if board[row][col] == ".":\n                    continue\n                if board[row][col] in seen:\n                    return False\n                seen.add(board[row][col])\n    return True',timeComplexity:"O(1) - fixed size (9x9) board",spaceComplexity:"O(1) - fixed size sets"},{id:9,title:"Longest Consecutive Sequence",question:"Find the length of the longest consecutive sequence in an unsorted array.",hint:"Use a set for O(1) lookups and check for sequence starts.",oneLiner:"Use a set and expand sequences from the smallest number.",simpleExplanation:"We put all the numbers in a quick lookup set.\nThen we start from numbers that are the beginning of a sequence.\nWe count how long each chain goes.",mnemonics:['"Add to set" \u2192 num_set = set(nums)','"Start from beginning" \u2192 if num - 1 not in num_set:','"Expand right" \u2192 while num + streak in num_set: streak += 1'],code:"def longestConsecutive(nums):\n    numSet = set(nums)\n    longest = 0\n\n    for num in numSet:\n        if (num - 1) not in numSet:\n            length = 1\n            while (num + length) in numSet:\n                length += 1\n            longest = max(length, longest)\n    return longest",timeComplexity:"O(n) - we visit each number at most twice",spaceComplexity:"O(n) - for the set"}],o=[{id:1,title:"Valid Palindrome",question:"Check if a given string is a palindrome, considering only alphanumeric characters and ignoring cases.",hint:"Try using two pointers moving from both ends of the string, skipping non-alphanumeric characters.",oneLiner:"Use two pointers from both ends, skipping non-alphanumerics and comparing characters.",simpleExplanation:"We look at one letter from the front and one from the back.\nWe skip anything that's not a letter or number.\nIf everything matches going inward, it's a palindrome!",mnemonics:['"Skip non-letters" \u2192 if not s[l].isalnum(): l += 1','"Lowercase compare" \u2192 if s[l].lower() != s[r].lower(): return False','"Move pointers" \u2192 l += 1, r -= 1'],code:"def isPalindrome(s: str) -> bool:\n    left, right = 0, len(s) - 1\n    \n    while left < right:\n        while left < right and not s[left].isalnum():\n            left += 1\n        while left < right and not s[right].isalnum():\n            right -= 1\n            \n        if s[left].lower() != s[right].lower():\n            return False\n        \n        left += 1\n        right -= 1\n    \n    return True",timeComplexity:"O(N) - we process each character at most once",spaceComplexity:"O(1) - only using two pointers regardless of input size"},{id:2,title:"Two Sum II - Input Array Is Sorted",question:"Find two numbers in a sorted array that add up to a target.",hint:"Since the array is sorted, try using two pointers from both ends and adjust based on the sum.",oneLiner:"Use two pointers from both ends and move based on sum.",simpleExplanation:"We start from both ends of the list.\nIf the sum is too big, move the right one left.\nIf too small, move the left one right \u2014 until it fits!",mnemonics:['"Check sum" \u2192 if nums[l] + nums[r] == target: return','"Too big?" \u2192 if sum > target: r -= 1','"Too small?" \u2192 if sum < target: l += 1'],code:"def twoSum(numbers: list[int], target: int) -> list[int]:\n    left, right = 0, len(numbers) - 1\n    \n    while left < right:\n        curr_sum = numbers[left] + numbers[right]\n        \n        if curr_sum == target:\n            return [left + 1, right + 1]  # 1-based index\n        \n        if curr_sum < target:\n            left += 1\n        else:\n            right -= 1\n    \n    return []",timeComplexity:"O(N) - we process each element at most once",spaceComplexity:"O(1) - only using two pointers regardless of input size"},{id:3,title:"3Sum",question:"Find all unique triplets in an array that sum to zero.",hint:"Sort the array first, then use a combination of iteration and two pointers technique.",oneLiner:"Sort the array, then for each element, use two pointers to find pairs that complete the triplet.",simpleExplanation:"First, we sort all numbers.\nThen for each number, we look for two other numbers that add up to create zero.\nWe use two pointers to efficiently find these pairs.",mnemonics:['"Sort first" \u2192 nums.sort()','"Skip duplicates" \u2192 if i > 0 and nums[i] == nums[i-1]: continue','"Two pointers for sum" \u2192 left, right = i+1, len(nums)-1'],code:"def threeSum(nums: list[int]) -> list[list[int]]:\n    nums.sort()\n    res = []\n    \n    for i in range(len(nums) - 2):\n        if i > 0 and nums[i] == nums[i - 1]:  # Skip duplicates\n            continue\n        \n        left, right = i + 1, len(nums) - 1\n        \n        while left < right:\n            total = nums[i] + nums[left] + nums[right]\n            \n            if total == 0:\n                res.append([nums[i], nums[left], nums[right]])\n                \n                while left < right and nums[left] == nums[left + 1]:  # Skip duplicates\n                    left += 1\n                while left < right and nums[right] == nums[right - 1]:  # Skip duplicates\n                    right -= 1\n                \n                left += 1\n                right -= 1\n                \n            elif total < 0:\n                left += 1\n            else:\n                right -= 1\n                \n    return res",timeComplexity:"O(N\xb2) - sorting takes O(N log N), then we have nested loops",spaceComplexity:"O(1) - excluding the output array"},{id:4,title:"Container With Most Water",question:"Find two vertical lines that form a container with the maximum water storage.",hint:"Try starting with the widest container and strategically move inward.",oneLiner:"Use two pointers from ends and move the one with shorter height.",simpleExplanation:"We look at the widest container first.\nWe always keep the bigger height and try to make width smaller.\nWe keep track of the best result as we move inward.",mnemonics:['"Start ends" \u2192 l, r = 0, len(height) - 1','"Calculate area" \u2192 area = min(height[l], height[r]) * (r - l)','"Move pointer" \u2192 if height[l] < height[r]: l += 1 else: r -= 1'],code:"def maxArea(height: list[int]) -> int:\n    left, right = 0, len(height) - 1\n    max_water = 0\n    \n    while left < right:\n        max_water = max(max_water, (right - left) * min(height[left], height[right]))\n        \n        if height[left] < height[right]:\n            left += 1\n        else:\n            right -= 1\n    \n    return max_water",timeComplexity:"O(N) - we process each element at most once",spaceComplexity:"O(1) - only using constant extra space"},{id:5,title:"Trapping Rain Water",question:"Calculate the amount of rainwater that can be trapped between an array of heights.",hint:"For each position, the water trapped depends on the maximum heights to its left and right.",oneLiner:"Use two pointers with left/right max to accumulate water at each position.",simpleExplanation:"We look at the left and right sides of each block.\nWe keep track of the highest walls on both ends.\nWater is trapped if the block is lower than both sides.",mnemonics:['"Track maxes" \u2192 left_max = max(left_max, height[l])','"Trap water" \u2192 if height[l] < height[r]: water += left_max - height[l]','"Move inward" \u2192 l += 1 or r -= 1 depending on height'],code:"def trap(height: list[int]) -> int:\n    if not height:\n        return 0\n    \n    left, right = 0, len(height) - 1\n    left_max, right_max = 0, 0\n    trapped_water = 0\n    \n    while left < right:\n        if height[left] < height[right]:\n            if height[left] >= left_max:\n                left_max = height[left]\n            else:\n                trapped_water += left_max - height[left]\n            left += 1\n        else:\n            if height[right] >= right_max:\n                right_max = height[right]\n            else:\n                trapped_water += right_max - height[right]\n            right -= 1\n            \n    return trapped_water",timeComplexity:"O(N) - we process each element at most once",spaceComplexity:"O(1) - using constant extra space"}],l=[{id:1,title:"Valid Parentheses",question:"Given a string containing only ()[], determine if it is valid.",hint:"Use a stack to match opening and closing brackets.",oneLiner:"Use a stack to match every closing bracket with the latest opening one.",simpleExplanation:"Open brackets go into a bag.\nIf you see a closer, match it with the last opener.\nIf the bag is empty at the end, it's valid!",mnemonics:['"Push opener" \u2192 stack.append(char)',"\"Pop and match\" \u2192 top = stack.pop() if stack else '#'",'"Check match" \u2192 if mapping[char] != top: return False'],code:"def isValid(s: str) -> bool:\n    stack = []\n    mapping = {')': '(', '}': '{', ']': '['}\n    \n    for char in s:\n        if char in mapping:\n            top = stack.pop() if stack else '#'\n            if mapping[char] != top:\n                return False\n        else:\n            stack.append(char)\n    \n    return not stack",timeComplexity:"O(N) - one pass through the string",spaceComplexity:"O(N) - in worst case, all opening brackets"},{id:2,title:"Min Stack",question:"Implement a stack that supports push, pop, top, and retrieving the minimum element in constant time.",hint:"Use an auxiliary stack to track minimum values.",oneLiner:"Keep a second stack that always holds the current minimum.",simpleExplanation:"One stack is for real items.\nAnother stack is for the smallest so far.\nPeek the small stack to get the min anytime!",mnemonics:['"Push min" \u2192 if not min_stack or val <= min_stack[-1]: min_stack.append(val)','"Pop min too" \u2192 if popped == min_stack[-1]: min_stack.pop()','"Get min" \u2192 return min_stack[-1]'],code:"class MinStack:\n    def __init__(self):\n        self.stack = []\n        self.min_stack = []\n\n    def push(self, val: int) -> None:\n        self.stack.append(val)\n        if not self.min_stack or val <= self.min_stack[-1]:\n            self.min_stack.append(val)\n\n    def pop(self) -> None:\n        if self.stack.pop() == self.min_stack[-1]:\n            self.min_stack.pop()\n\n    def top(self) -> int:\n        return self.stack[-1]\n\n    def getMin(self) -> int:\n        return self.min_stack[-1]",timeComplexity:"O(1) - constant time for all operations",spaceComplexity:"O(N) - in worst case, we store each element twice"},{id:3,title:"Evaluate Reverse Polish Notation",question:"Evaluate an arithmetic expression in Reverse Polish Notation.",hint:"Use a stack to process numbers and operators.",oneLiner:"Use a stack to apply operators to previous numbers.",simpleExplanation:"Read numbers and put them in a stack.\nWhen you see a symbol, do math on the top two numbers.\nPut the result back and keep going!",mnemonics:['"Pop two, compute" \u2192 a = stack.pop(); b = stack.pop()','"Divide carefully" \u2192 stack.append(int(a / b))','"Push number" \u2192 stack.append(int(token))'],code:"def evalRPN(tokens: list[str]) -> int:\n    stack = []\n    for token in tokens:\n        if token in {'+', '-', '*', '/'}:\n            b, a = stack.pop(), stack.pop()\n            if token == '+':\n                stack.append(a + b)\n            elif token == '-':\n                stack.append(a - b)\n            elif token == '*':\n                stack.append(a * b)\n            elif token == '/':\n                stack.append(int(a / b))  # Ensure truncation towards zero\n        else:\n            stack.append(int(token))\n    \n    return stack[0]",timeComplexity:"O(N) - process each token once",spaceComplexity:"O(N) - in worst case, all tokens are numbers"},{id:4,title:"Generate Parentheses",question:"Generate all valid combinations of n pairs of parentheses.",hint:"Use backtracking with open and close counts.",oneLiner:"Use backtracking with open and close counters to build valid combinations.",simpleExplanation:"You can only close if you've opened one.\nKeep adding ( or ) if it's allowed.\nAdd to the list when it's full and balanced!",mnemonics:['"Base case full" \u2192 if len(s) == 2 * n: res.append(s)','"Try opening" \u2192 if left < n: backtrack(s + "(", ...)','"Try closing" \u2192 if right < left: backtrack(s + ")", ...)'],code:'def generateParenthesis(n: int) -> list[str]:\n    res = []\n    \n    def backtrack(s, left, right):\n        if len(s) == 2 * n:\n            res.append(s)\n            return\n        if left < n:\n            backtrack(s + "(", left + 1, right)\n        if right < left:\n            backtrack(s + ")", left, right + 1)\n    \n    backtrack("", 0, 0)\n    return res',timeComplexity:"O(4^n / \u221an) - approximate number of valid combinations",spaceComplexity:"O(N) - max recursion depth of 2n"},{id:5,title:"Daily Temperatures",question:"Given an array of temperatures, return an array where ans[i] is the number of days until a warmer temperature.",hint:"Use a monotonic stack to track indices of temperatures.",oneLiner:"Use a monotonic stack to find the next warmer day.",simpleExplanation:"Keep days in a stack until a warmer one shows up.\nThen pop and mark how long they waited.\nRepeat until all are checked.",mnemonics:['"Pop when warmer" \u2192 while stack and temperatures[stack[-1]] < temp:','"Set wait days" \u2192 res[idx] = i - idx','"Track index" \u2192 stack.append(i)'],code:"def dailyTemperatures(temperatures: list[int]) -> list[int]:\n    stack = []\n    res = [0] * len(temperatures)\n    \n    for i, temp in enumerate(temperatures):\n        while stack and temperatures[stack[-1]] < temp:\n            idx = stack.pop()\n            res[idx] = i - idx\n        stack.append(i)\n    \n    return res",timeComplexity:"O(N) - each temperature is pushed and popped at most once",spaceComplexity:"O(N) - in worst case, the stack stores all indices"},{id:6,title:"Car Fleet",question:"Given position and speed arrays of cars, return the number of fleets that arrive at the destination.",hint:"Sort by position and calculate arrival time for each car.",oneLiner:"Sort cars by position and use a stack to track merging fleets.",simpleExplanation:"Sort cars from back to front.\nSee how long each takes to reach the end.\nIf one catches another, they become a team!",mnemonics:['"Sort by position" \u2192 cars = sorted(zip(position, speed), reverse=True)','"Calc time to end" \u2192 time = (target - pos) / spd','"Stack only new fleets" \u2192 if not stack or time > stack[-1]: stack.append(time)'],code:"def carFleet(target: int, position: list[int], speed: list[int]) -> int:\n    cars = sorted(zip(position, speed), reverse=True)\n    stack = []\n    \n    for pos, spd in cars:\n        time = (target - pos) / spd\n        if not stack or time > stack[-1]:\n            stack.append(time)\n    \n    return len(stack)",timeComplexity:"O(N log N) - dominated by the sorting step",spaceComplexity:"O(N) - for the sorted array and stack"},{id:7,title:"Largest Rectangle in Histogram",question:"Find the largest rectangular area in a histogram.",hint:"Use a monotonic stack to calculate areas when heights decrease.",oneLiner:"Use a monotonic stack to compute max area rectangle at each drop.",simpleExplanation:"Go bar by bar, stack up when taller.\nIf a lower one comes, pop and measure.\nAlways track the biggest area!",mnemonics:['"Push height index" \u2192 stack.append(i)','"Pop and calc area" \u2192 width = i if not stack else i - stack[-1] - 1','"Update max area" \u2192 max_area = max(max_area, height * width)'],code:"def largestRectangleArea(heights: list[int]) -> int:\n    stack = []\n    max_area = 0\n    heights.append(0)  # Sentinel value\n    \n    for i, h in enumerate(heights):\n        while stack and heights[stack[-1]] > h:\n            height = heights[stack.pop()]\n            width = i if not stack else i - stack[-1] - 1\n            max_area = max(max_area, height * width)\n        stack.append(i)\n    \n    return max_area",timeComplexity:"O(N) - each bar is pushed and popped at most once",spaceComplexity:"O(N) - in worst case, the stack contains all bars"}],s=[{id:1,title:"Binary Search",question:"Find the position of a target value in a sorted array.",hint:"Use the sorted property to cut search space in half each time.",oneLiner:"Use two pointers to repeatedly cut the search range in half.",simpleExplanation:"We look in the middle of the list.\nIf it's not the number, we search only the left or right part.\nWe do this again and again until we find it or run out.",mnemonics:['"Set range" \u2192 low, high = 0, len(nums) - 1','"Check mid" \u2192 mid = (low + high) // 2','"Narrow search" \u2192 if nums[mid] < target: low = mid + 1 else: high = mid - 1'],code:"def binarySearch(nums, target):\n    left, right = 0, len(nums) - 1\n    \n    while left <= right:\n        mid = (left + right) // 2\n        if nums[mid] == target:\n            return mid\n        elif nums[mid] < target:\n            left = mid + 1\n        else:\n            right = mid - 1\n            \n    return -1",timeComplexity:"O(log n) - search space halves each iteration",spaceComplexity:"O(1) - constant extra space"},{id:2,title:"Search a 2D Matrix",question:"Search for a value in a row and column sorted matrix.",hint:"Treat the 2D matrix as a flattened sorted array for binary search.",oneLiner:"Treat the 2D matrix like a 1D array and use binary search.",simpleExplanation:"We pretend the grid is just one long list.\nWe use binary search on that list.\nWe change the middle number back to row and column to check it.",mnemonics:['"Convert index" \u2192 row = mid // cols; col = mid % cols','"Compare mid" \u2192 if matrix[row][col] == target: return True','"Adjust range" \u2192 low = mid + 1 or high = mid - 1'],code:"def searchMatrix(matrix, target):\n    if not matrix or not matrix[0]:\n        return False\n    \n    rows, cols = len(matrix), len(matrix[0])\n    left, right = 0, rows * cols - 1\n    \n    while left <= right:\n        mid = (left + right) // 2\n        mid_value = matrix[mid // cols][mid % cols]\n        \n        if mid_value == target:\n            return True\n        elif mid_value < target:\n            left = mid + 1\n        else:\n            right = mid - 1\n            \n    return False",timeComplexity:"O(log(m*n)) - binary search on flattened matrix",spaceComplexity:"O(1) - constant extra space"},{id:3,title:"Koko Eating Bananas",question:"Find the minimum eating speed to finish all bananas within a given time.",hint:"Use binary search on the range of possible eating speeds.",oneLiner:"Binary search the eating speed to find the minimum speed that finishes on time.",simpleExplanation:"We try different eating speeds.\nIf she can finish in time, we try slower ones.\nIf not, we try faster ones.",mnemonics:['"Search range" \u2192 low, high = 1, max(piles)','"Check time" \u2192 total_time = sum(ceil(pile / mid))','"Narrow search" \u2192 if time <= h: try slower; else: go faster'],code:"import math\n\ndef minEatingSpeed(piles, h):\n    left, right = 1, max(piles)\n    \n    def canFinish(speed):\n        return sum(math.ceil(pile / speed) for pile in piles) <= h\n    \n    while left < right:\n        mid = (left + right) // 2\n        if canFinish(mid):\n            right = mid\n        else:\n            left = mid + 1\n            \n    return left",timeComplexity:"O(n log m) - where m is max pile size",spaceComplexity:"O(1) - constant extra space"},{id:4,title:"Find Minimum in Rotated Sorted Array",question:"Find the minimum element in a rotated sorted array.",hint:"Use binary search and compare with the rightmost element to determine which half to search.",oneLiner:"Use binary search to find the smallest element by comparing with the rightmost.",simpleExplanation:"The smallest number is in the rotated part.\nWe keep checking the middle and comparing to the end.\nWe move left or right depending on which side is sorted.",mnemonics:['"Mid vs right" \u2192 if nums[mid] > nums[right]: search right','"Else search left" \u2192 right = mid','"Result is nums[left]" \u2192 return nums[left]'],code:"def findMin(nums):\n    left, right = 0, len(nums) - 1\n    \n    while left < right:\n        mid = (left + right) // 2\n        if nums[mid] > nums[right]:  \n            left = mid + 1\n        else:\n            right = mid  \n            \n    return nums[left]",timeComplexity:"O(log n) - binary search",spaceComplexity:"O(1) - constant extra space"},{id:5,title:"Search in Rotated Sorted Array",question:"Search for a target in a rotated sorted array.",hint:"Determine which half is sorted and check if target is in that half.",oneLiner:"Binary search while checking which half is sorted and target range.",simpleExplanation:"We split the list in half each time.\nWe check which half is in order.\nThen we pick the side where the target can be.",mnemonics:['"Left sorted?" \u2192 if nums[low] <= nums[mid]:','"Target in left?" \u2192 if nums[low] <= target < nums[mid]: high = mid - 1','"Otherwise search right" \u2192 low = mid + 1'],code:"def search(nums, target):\n    left, right = 0, len(nums) - 1\n    \n    while left <= right:\n        mid = (left + right) // 2\n        if nums[mid] == target:\n            return mid\n        if nums[left] <= nums[mid]:  \n            if nums[left] <= target < nums[mid]:\n                right = mid - 1\n            else:\n                left = mid + 1\n        else:  \n            if nums[mid] < target <= nums[right]:\n                left = mid + 1\n            else:\n                right = mid - 1\n                \n    return -1",timeComplexity:"O(log n) - binary search",spaceComplexity:"O(1) - constant extra space"},{id:6,title:"Time-Based Key-Value Store",question:"Design a time-based key-value store with set and get operations.",hint:"Store values with timestamps in sorted order and use binary search for lookups.",oneLiner:"Store timestamped values in a list and binary search for the latest one <= target time.",simpleExplanation:"We save every version of a value with the time it was saved.\nWhen asked for a time, we look for the latest version at or before that time.\nWe do this using binary search.",mnemonics:['"Store as list" \u2192 store[key].append((timestamp, value))','"Binary search timestamp" \u2192 while low <= high: check mid time','"Return latest <= timestamp" \u2192 res = value if time <= target'],code:'from collections import defaultdict\nimport bisect\n\nclass TimeMap:\n    def __init__(self):\n        self.store = defaultdict(list)\n\n    def set(self, key, value, timestamp):\n        self.store[key].append((timestamp, value))\n\n    def get(self, key, timestamp):\n        if key not in self.store:\n            return ""\n        \n        values = self.store[key]\n        idx = bisect.bisect_right(values, (timestamp, chr(255))) - 1\n        \n        return values[idx][1] if idx >= 0 else ""',timeComplexity:"set: O(1), get: O(log n)",spaceComplexity:"O(n) - to store all values"},{id:7,title:"Median of Two Sorted Arrays",question:"Find the median of two sorted arrays.",hint:"Use binary search on the smaller array to find the correct partition point.",oneLiner:"Use binary search to partition both arrays such that left half \u2264 right half.",simpleExplanation:"We cut both arrays in half in a smart way.\nWe want everything on the left half to be smaller than the right.\nWhen it's balanced, we take the middle numbers for the median.",mnemonics:['"Binary on smaller array" \u2192 if len(A) > len(B): swap','"Partition and check" \u2192 Aleft <= Bright and Bleft <= Aright','"Median calc" \u2192 if total even: avg of max(left), min(right); else: max(left)'],code:"def findMedianSortedArrays(nums1, nums2):\n    if len(nums1) > len(nums2):\n        nums1, nums2 = nums2, nums1  # Ensure nums1 is the smaller array\n\n    x, y = len(nums1), len(nums2)\n    left, right = 0, x\n\n    while left <= right:\n        partitionX = (left + right) // 2\n        partitionY = (x + y + 1) // 2 - partitionX\n\n        maxX = float('-inf') if partitionX == 0 else nums1[partitionX - 1]\n        minX = float('inf') if partitionX == x else nums1[partitionX]\n        maxY = float('-inf') if partitionY == 0 else nums2[partitionY - 1]\n        minY = float('inf') if partitionY == y else nums2[partitionY]\n\n        if maxX <= minY and maxY <= minX:\n            if (x + y) % 2 == 0:\n                return (max(maxX, maxY) + min(minX, minY)) / 2\n            else:\n                return max(maxX, maxY)\n        elif maxX > minY:\n            right = partitionX - 1\n        else:\n            left = partitionX + 1",timeComplexity:"O(log min(m,n)) - binary search on smaller array",spaceComplexity:"O(1) - constant extra space"}],u=[{id:1,title:"Best Time to Buy and Sell Stock",question:"Given an array where prices[i] is the price of a stock on day i, find the maximum profit.",hint:"Track the minimum price seen so far and calculate potential profit at each step.",oneLiner:"Track the minimum price so far and compute profit at each step.",simpleExplanation:"We watch the lowest price we've seen.\nThen we check how much we'd earn if we sold today.\nWe remember the best profit we ever found.",mnemonics:['"Track min" \u2192 min_price = min(min_price, price)','"Check profit" \u2192 profit = price - min_price','"Update best" \u2192 max_profit = max(max_profit, profit)'],code:"def maxProfit(prices: list[int]) -> int:\n    min_price = float('inf')\n    max_profit = 0\n    \n    for price in prices:\n        min_price = min(min_price, price)\n        max_profit = max(max_profit, price - min_price)\n    \n    return max_profit",timeComplexity:"O(N) - single pass through the array",spaceComplexity:"O(1) - using constant extra space"},{id:2,title:"Longest Substring Without Repeating Characters",question:"Find the length of the longest substring without repeating characters.",hint:"Use a sliding window and keep track of characters you've seen.",oneLiner:"Use a sliding window and a set/map to track characters.",simpleExplanation:"We move across the string, adding each new letter.\nIf we see a repeat, we shrink the start of the window.\nWe keep track of the longest clean stretch.",mnemonics:['"Check char in map" \u2192 if s[r] in seen: l = max(l, seen[s[r]] + 1)','"Store index" \u2192 seen[s[r]] = r','"Track max length" \u2192 res = max(res, r - l + 1)'],code:"def lengthOfLongestSubstring(s: str) -> int:\n    char_set = set()\n    left = max_length = 0\n    \n    for right in range(len(s)):\n        while s[right] in char_set:\n            char_set.remove(s[left])\n            left += 1\n        char_set.add(s[right])\n        max_length = max(max_length, right - left + 1)\n    \n    return max_length",timeComplexity:"O(N) - at most 2n operations in the worst case",spaceComplexity:"O(min(N, 26)) - limited by character set size"},{id:3,title:"Longest Repeating Character Replacement",question:"Find the length of the longest substring with at most k character replacements.",hint:"Use a sliding window and track the frequency of each character.",oneLiner:"Use sliding window; replace excess characters beyond the most frequent one.",simpleExplanation:"We build a window and count letters inside.\nWe make sure we don't replace more than k characters.\nIf we do, we shrink the window.",mnemonics:['"Track max freq" \u2192 max_count = max(counts.values())','"Valid window?" \u2192 if (right - left + 1) - max_count > k: shrink','"Update max" \u2192 res = max(res, window length)'],code:"from collections import Counter\n\ndef characterReplacement(s: str, k: int) -> int:\n    count = Counter()\n    left = max_length = max_freq = 0\n    \n    for right in range(len(s)):\n        count[s[right]] += 1\n        max_freq = max(max_freq, count[s[right]])\n        \n        if (right - left + 1) - max_freq > k:\n            count[s[left]] -= 1\n            left += 1\n        \n        max_length = max(max_length, right - left + 1)\n    \n    return max_length",timeComplexity:"O(N) - single pass through the string",spaceComplexity:"O(26) - limited to 26 uppercase letters"},{id:4,title:"Permutation in String",question:"Given two strings s1 and s2, check if s1's permutation is a substring of s2.",hint:"Use a sliding window of length s1 and compare character counts.",oneLiner:"Use sliding window with frequency counters and compare with target.",simpleExplanation:"We count letters in the small word.\nThen we move a window over the big word and check each group of letters.\nIf one window matches, we found a match!",mnemonics:['"Build counters" \u2192 Counter(s1) == Counter(window)','"Slide window" \u2192 add s2[i], remove s2[i - len(s1)]','"Compare counters" \u2192 if match: return True'],code:"from collections import Counter\n\ndef checkInclusion(s1: str, s2: str) -> bool:\n    if len(s1) > len(s2):\n        return False\n    \n    s1_count = Counter(s1)\n    s2_count = Counter(s2[:len(s1)])\n    \n    if s1_count == s2_count:\n        return True\n    \n    left = 0\n    for right in range(len(s1), len(s2)):\n        s2_count[s2[right]] += 1\n        s2_count[s2[left]] -= 1\n        if s2_count[s2[left]] == 0:\n            del s2_count[s2[left]]\n        left += 1\n        if s1_count == s2_count:\n            return True\n    \n    return False",timeComplexity:"O(N) - where N is the length of s2",spaceComplexity:"O(26) - limited to 26 lowercase letters"},{id:5,title:"Minimum Window Substring",question:"Given two strings s and t, find the minimum substring of s that contains all characters of t.",hint:"Use a sliding window and track character frequencies.",oneLiner:"Use sliding window and hashmap to shrink window once all chars are matched.",simpleExplanation:"We count the letters we need.\nAs we move forward, we check if we have enough of each letter.\nThen we shrink the window from the left to find the smallest one.",mnemonics:['"Need map" \u2192 need = Counter(t)','"Expand window" \u2192 window[s[r]] += 1','"Shrink if valid" \u2192 while formed == required: update res, move left'],code:'from collections import Counter\n\ndef minWindow(s: str, t: str) -> str:\n    if not t or not s:\n        return ""\n    \n    t_count = Counter(t)\n    window_count = Counter()\n    \n    left = right = formed = 0\n    required = len(t_count)\n    min_len = float("inf")\n    min_window = ""\n\n    while right < len(s):\n        window_count[s[right]] += 1\n        if window_count[s[right]] == t_count[s[right]]:\n            formed += 1\n\n        while formed == required:\n            if right - left + 1 < min_len:\n                min_len = right - left + 1\n                min_window = s[left:right+1]\n\n            window_count[s[left]] -= 1\n            if s[left] in t_count and window_count[s[left]] < t_count[s[left]]:\n                formed -= 1\n\n            left += 1\n        \n        right += 1\n    \n    return min_window',timeComplexity:"O(N) - where N is the length of s",spaceComplexity:"O(26) - limited to character set size"},{id:6,title:"Sliding Window Maximum",question:"Given an array nums and a window size k, return the maximum element in each window.",hint:"Use a deque to maintain indices of potential maximum elements.",oneLiner:"Use a deque to keep track of max values in the current window.",simpleExplanation:"We go through numbers with a window of size k.\nWe keep only the biggest numbers inside the window.\nWe throw out numbers that are too old or too small.",mnemonics:['"Pop smaller" \u2192 while q and nums[i] > nums[q[-1]]: q.pop()','"Pop out-of-window" \u2192 if q[0] <= i - k: q.popleft()','"Append max" \u2192 if i >= k - 1: res.append(nums[q[0]])'],code:"from collections import deque\n\ndef maxSlidingWindow(nums: list[int], k: int) -> list[int]:\n    if not nums:\n        return []\n    \n    deque_window = deque()\n    result = []\n\n    for i in range(len(nums)):\n        # Remove elements outside the window\n        if deque_window and deque_window[0] < i - k + 1:\n            deque_window.popleft()\n\n        # Remove smaller elements in k range\n        while deque_window and nums[deque_window[-1]] < nums[i]:\n            deque_window.pop()\n        \n        deque_window.append(i)\n\n        # Append max value once window size is reached\n        if i >= k - 1:\n            result.append(nums[deque_window[0]])\n\n    return result",timeComplexity:"O(N) - each element is processed at most twice",spaceComplexity:"O(K) - the deque never grows beyond size k"}],c=[{id:1,title:"Reverse Linked List",question:"Reverse a singly linked list.",hint:"Use three pointers to keep track of previous, current, and next nodes.",oneLiner:"Iteratively reverse pointers one node at a time.",simpleExplanation:"We go through the list one by one.\nWe turn each pointer backward instead of forward.\nWhen we finish, the list is flipped!",mnemonics:['"Track previous" \u2192 prev = None','"Flip pointer" \u2192 curr.next = prev','"Move forward" \u2192 prev, curr = curr, curr.next'],code:"def reverseList(head):\n    prev, curr = None, head\n    \n    while curr:\n        nxt = curr.next\n        curr.next = prev\n        prev = curr\n        curr = nxt\n    \n    return prev",timeComplexity:"O(n) - we visit each node once",spaceComplexity:"O(1) - we use constant extra space"},{id:2,title:"Merge Two Sorted Lists",question:"Merge two sorted linked lists into one sorted list.",hint:"Use a dummy node to build the merged list.",oneLiner:"Use two pointers to weave nodes into a sorted list.",simpleExplanation:"We compare heads of both lists.\nWe always pick the smaller one and keep going.\nWe attach leftover nodes at the end.",mnemonics:['"Dummy node start" \u2192 dummy = ListNode()','"Pick smaller" \u2192 if l1.val < l2.val: attach l1','"Link remainder" \u2192 tail.next = l1 or l2'],code:"def mergeTwoLists(l1, l2):\n    dummy = ListNode()\n    tail = dummy\n    \n    while l1 and l2:\n        if l1.val < l2.val:\n            tail.next = l1\n            l1 = l1.next\n        else:\n            tail.next = l2\n            l2 = l2.next\n        tail = tail.next\n\n    tail.next = l1 if l1 else l2\n    return dummy.next",timeComplexity:"O(n+m) - where n,m are lengths of input lists",spaceComplexity:"O(1) - we use constant extra space"},{id:3,title:"Linked List Cycle",question:"Detect if a linked list has a cycle.",hint:"Use fast and slow pointers (Floyd's Cycle Detection).",oneLiner:"Use two pointers (slow and fast) to detect a loop.",simpleExplanation:"One pointer moves fast, the other moves slow.\nIf they ever meet, there's a loop.\nIf the fast one finishes, there's no cycle.",mnemonics:['"Initialize pointers" \u2192 slow, fast = head, head','"Move fast x2" \u2192 fast = fast.next.next','"Check meeting point" \u2192 if slow == fast: return True'],code:"def hasCycle(head):\n    slow, fast = head, head\n\n    while fast and fast.next:\n        slow = slow.next\n        fast = fast.next.next\n        if slow == fast:\n            return True\n            \n    return False",timeComplexity:"O(n) - in worst case, we visit each node once",spaceComplexity:"O(1) - we use constant extra space"},{id:4,title:"Reorder List",question:"Reorder a linked list in-place as L0\u2192Ln\u2192L1\u2192Ln-1\u2192L2\u2192Ln-2...",hint:"Find the middle, reverse the second half, and merge the two halves.",oneLiner:"Split the list, reverse the second half, and merge both.",simpleExplanation:"We find the middle of the list.\nWe reverse the second half.\nThen we zig-zag merge the two parts.",mnemonics:['"Find mid" \u2192 slow = slow.next, fast = fast.next.next','"Reverse half" \u2192 second = reverse(middle)','"Merge halves" \u2192 while first and second: alternate attach'],code:"def reorderList(head):\n    if not head or not head.next:\n        return\n    \n    # Find middle\n    slow, fast = head, head\n    while fast and fast.next:\n        slow = slow.next\n        fast = fast.next.next\n\n    # Reverse second half\n    prev, curr = None, slow.next\n    slow.next = None  # Split list\n    while curr:\n        nxt = curr.next\n        curr.next = prev\n        prev = curr\n        curr = nxt\n\n    # Merge two halves\n    first, second = head, prev\n    while second:\n        tmp1, tmp2 = first.next, second.next\n        first.next = second\n        second.next = tmp1\n        first, second = tmp1, tmp2",timeComplexity:"O(n) - we visit each node a constant number of times",spaceComplexity:"O(1) - we use constant extra space"},{id:5,title:"Remove Nth Node From End of List",question:"Remove the nth node from the end of the list.",hint:"Use two pointers with a gap of n nodes between them.",oneLiner:"Use two pointers with n distance apart.",simpleExplanation:"We move one pointer n steps ahead.\nThen we move both together until the fast one ends.\nThe slow one is right before the node to remove.",mnemonics:['"Advance fast" \u2192 for _ in range(n): fast = fast.next','"Move both" \u2192 while fast.next: slow = slow.next','"Remove node" \u2192 slow.next = slow.next.next'],code:"def removeNthFromEnd(head, n):\n    dummy = ListNode(0, head)\n    fast, slow = dummy, dummy\n    \n    for _ in range(n + 1):\n        fast = fast.next\n    \n    while fast:\n        fast = fast.next\n        slow = slow.next\n    \n    slow.next = slow.next.next\n    return dummy.next",timeComplexity:"O(n) - we visit each node at most once",spaceComplexity:"O(1) - we use constant extra space"},{id:6,title:"Copy List with Random Pointer",question:"Clone a linked list with next and random pointers.",hint:"Create interleaved list, then fix random pointers, then separate lists.",oneLiner:"Interleave original and copied nodes, fix randoms, then split.",simpleExplanation:"We copy each node and put it right next to the original.\nThen we fix the random pointers.\nLast, we split them into two separate lists.",mnemonics:['"Clone nodes" \u2192 curr.next = Node(curr.val)','"Fix random" \u2192 curr.next.random = curr.random.next','"Separate lists" \u2192 original.next = clone.next; clone.next = clone.next.next'],code:"def copyRandomList(head):\n    if not head:\n        return None\n\n    # Step 1: Create new nodes interleaved with the old nodes\n    curr = head\n    while curr:\n        nxt = curr.next\n        curr.next = Node(curr.val, nxt, None)\n        curr = nxt\n\n    # Step 2: Assign random pointers\n    curr = head\n    while curr:\n        if curr.random:\n            curr.next.random = curr.random.next\n        curr = curr.next.next\n\n    # Step 3: Separate the two lists\n    old, new = head, head.next\n    new_head = head.next\n    while old:\n        old.next = old.next.next if old.next else None\n        new.next = new.next.next if new.next else None\n        old = old.next\n        new = new.next\n    \n    return new_head",timeComplexity:"O(n) - we make three passes through the list",spaceComplexity:"O(1) - excluding output list"},{id:7,title:"Add Two Numbers",question:"Add two numbers represented as linked lists (digits in reverse order).",hint:"Track carry and create new nodes as you sum digits.",oneLiner:"Add digits from each list node by node with carry.",simpleExplanation:"We add the numbers digit by digit.\nIf the sum is too big, we carry to the next one.\nWe build a new list as we go.",mnemonics:['"Add values + carry" \u2192 total = l1.val + l2.val + carry','"Carry forward" \u2192 carry = total // 10','"Create node" \u2192 current.next = ListNode(total % 10)'],code:"def addTwoNumbers(l1, l2):\n    dummy = ListNode()\n    curr, carry = dummy, 0\n\n    while l1 or l2 or carry:\n        val1 = l1.val if l1 else 0\n        val2 = l2.val if l2 else 0\n        carry, sum_val = divmod(val1 + val2 + carry, 10)\n        \n        curr.next = ListNode(sum_val)\n        curr = curr.next\n\n        l1 = l1.next if l1 else None\n        l2 = l2.next if l2 else None\n\n    return dummy.next",timeComplexity:"O(max(n,m)) - where n,m are the lengths of the lists",spaceComplexity:"O(max(n,m)) - for the result list"},{id:8,title:"Find The Duplicate Number",question:"Find the duplicate number in an array where each integer appears only once except for one.",hint:"Treat array values as pointers and use cycle detection.",oneLiner:"Use Floyd's Cycle Detection (like Linked List Cycle) on index mapping.",simpleExplanation:"We pretend the numbers are pointers in a list.\nWe find a cycle using slow and fast.\nThen we find where the cycle begins \u2014 that's the duplicate.",mnemonics:['"Find meeting" \u2192 slow = nums[slow]; fast = nums[nums[fast]]','"Find entrance" \u2192 slow = 0; move both till they meet','"Return dup" \u2192 return slow'],code:"def findDuplicate(nums):\n    slow, fast = nums[0], nums[0]\n    \n    while True:\n        slow = nums[slow]\n        fast = nums[nums[fast]]\n        if slow == fast:\n            break\n\n    slow = nums[0]\n    while slow != fast:\n        slow = nums[slow]\n        fast = nums[fast]\n\n    return slow",timeComplexity:"O(n) - we visit each number at most twice",spaceComplexity:"O(1) - we use constant extra space"},{id:9,title:"LRU Cache",question:"Design a Least Recently Used (LRU) cache with O(1) get and put operations.",hint:"Use a hash map and doubly linked list together.",oneLiner:"Use a hash map + doubly linked list to track usage order and values.",simpleExplanation:"We keep a list of recently used items.\nWhen something is used, we move it to the front.\nIf the cache is full, we remove the oldest from the back.",mnemonics:['"Get/move to front" \u2192 move_to_front(node)','"Insert new" \u2192 add node to head','"Evict old" \u2192 remove tail node if over capacity'],code:"from collections import OrderedDict\n\nclass LRUCache:\n    def __init__(self, capacity):\n        self.cache = OrderedDict()\n        self.capacity = capacity\n\n    def get(self, key):\n        if key in self.cache:\n            self.cache.move_to_end(key)\n            return self.cache[key]\n        return -1\n\n    def put(self, key, value):\n        if key in self.cache:\n            self.cache.move_to_end(key)\n        self.cache[key] = value\n        if len(self.cache) > self.capacity:\n            self.cache.popitem(last=False)",timeComplexity:"O(1) - for both get and put operations",spaceComplexity:"O(capacity) - for the cache"},{id:10,title:"Merge K Sorted Lists",question:"Merge k sorted linked lists into one sorted list.",hint:"Use a min heap to efficiently find the smallest node each time.",oneLiner:"Use a min-heap to always pick the smallest node among lists.",simpleExplanation:"We look at the first node from each list.\nWe always pick the smallest and move forward in that list.\nWe keep building a new sorted list.",mnemonics:['"Push all heads" \u2192 heapq.heappush(heap, (node.val, i, node))','"Pop smallest" \u2192 val, i, node = heapq.heappop(heap)','"Advance list" \u2192 heapq.heappush(heap, (node.next.val, i, node.next))'],code:"from heapq import heappush, heappop\n\ndef mergeKLists(lists):\n    heap = []\n    dummy = ListNode()\n    curr = dummy\n\n    for i, lst in enumerate(lists):\n        if lst:\n            heappush(heap, (lst.val, i, lst))\n    \n    while heap:\n        val, i, node = heappop(heap)\n        curr.next = node\n        curr = node\n        if node.next:\n            heappush(heap, (node.next.val, i, node.next))\n    \n    return dummy.next",timeComplexity:"O(n log k) - where n is total nodes and k is number of lists",spaceComplexity:"O(k) - for the heap"},{id:11,title:"Reverse Nodes in K-Group",question:"Reverse the nodes of the list k at a time and return the modified list.",hint:"Count k nodes, reverse them, and connect to next group.",oneLiner:"Group nodes in k, reverse in-place, and connect recursively or iteratively.",simpleExplanation:"We take chunks of k nodes.\nWe flip the order of each group.\nWe connect the reversed parts back together.",mnemonics:['"Count nodes" \u2192 for _ in range(k): if not curr: return head','"Reverse k" \u2192 reverse segment between head and k-th','"Link next group" \u2192 head.next = recurse/iterate with next group'],code:"def reverseKGroup(head, k):\n    def get_kth(curr, k):\n        while curr and k > 0:\n            curr = curr.next\n            k -= 1\n        return curr\n\n    dummy = ListNode(0)\n    dummy.next = head\n    group_prev = dummy\n\n    while True:\n        kth = get_kth(group_prev, k)\n        if not kth:\n            break\n        group_next = kth.next\n\n        # Reverse group\n        prev, curr = group_next, group_prev.next\n        while curr != group_next:\n            temp = curr.next\n            curr.next = prev\n            prev = curr\n            curr = temp\n\n        temp = group_prev.next\n        group_prev.next = kth\n        group_prev = temp\n\n    return dummy.next",timeComplexity:"O(n) - each node is reversed at most once",spaceComplexity:"O(1) - we use constant extra space"}],d=[{id:1,title:"Invert Binary Tree",question:"Invert a binary tree (swap all left and right children at every node).",hint:"Apply the inversion recursively at each node.",oneLiner:"Swap left and right at every node recursively.",simpleExplanation:"Flip every branch left-to-right.\nDo the same for children too.\nKeep flipping till the bottom!",mnemonics:['"Flip subtrees" \u2192 root.left, root.right = invertTree(root.right), invertTree(root.left)','"Base case" \u2192 if not root: return None','"Return flipped root" \u2192 return root'],code:"def invertTree(self, root):\n    if not root:\n        return None\n    root.left, root.right = self.invertTree(root.right), self.invertTree(root.left)\n    return root",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(H) - recursion stack, where H is the height (worst case O(N))"},{id:2,title:"Maximum Depth of Binary Tree",question:"Find the maximum depth (number of nodes along the longest path from root to leaf).",hint:"Use recursion to find the depth of both subtrees.",oneLiner:"Recursively get max depth from left and right, add one.",simpleExplanation:"Go down both left and right.\nFind the deeper one.\nAdd yourself to the count!",mnemonics:['"Check both sides" \u2192 maxDepth(root.left), maxDepth(root.right)','"Add 1 for current" \u2192 1 + max(...)','"Stop at null" \u2192 if not root: return 0'],code:"def maxDepth(self, root):\n    if not root:\n        return 0\n    return 1 + max(self.maxDepth(root.left), self.maxDepth(root.right))",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(H) - recursion stack, where H is the height"},{id:3,title:"Diameter of Binary Tree",question:"Find the length of the longest path between any two nodes in a binary tree.",hint:"Use depth-first search while tracking the longest path through each node.",oneLiner:"Track the longest path across any node via DFS.",simpleExplanation:"Find longest path between any two nodes.\nAt every node, try left + right path.\nUpdate the best as you go.",mnemonics:['"DFS returns depth" \u2192 return 1 + max(left, right)','"Update diameter" \u2192 diameter = max(diameter, left + right)','"Use nonlocal" \u2192 nonlocal diameter'],code:"def diameterOfBinaryTree(self, root):\n    diameter = 0\n\n    def depth(node):\n        nonlocal diameter\n        if not node:\n            return 0\n        left = depth(node.left)\n        right = depth(node.right)\n        diameter = max(diameter, left + right)\n        return 1 + max(left, right)\n\n    depth(root)\n    return diameter",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(H) - recursion stack, where H is the height"},{id:4,title:"Balanced Binary Tree",question:"Determine if a binary tree is height-balanced (depth of subtrees differs by at most 1).",hint:"Check balance while computing height to avoid redundant traversals.",oneLiner:"Use post-order DFS and return -1 if imbalance is detected.",simpleExplanation:"Check if both sides are even.\nIf one side too tall, mark broken.\nKeep bubbling -1 up the tree!",mnemonics:['"Check balance" \u2192 if abs(left - right) > 1: return -1','"Bubble imbalance" \u2192 if left == -1 or right == -1: return -1','"DFS returns height" \u2192 return 1 + max(left, right)'],code:"def isBalanced(self, root):\n    def dfs(node):\n        if not node:\n            return 0\n        left = dfs(node.left)\n        right = dfs(node.right)\n        if left == -1 or right == -1 or abs(left - right) > 1:\n            return -1\n        return 1 + max(left, right)\n    \n    return dfs(root) != -1",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(H) - recursion stack, where H is the height"},{id:5,title:"Same Tree",question:"Check if two binary trees are the same (have the same structure and values).",hint:"Compare the nodes recursively from the root down.",oneLiner:"DFS both trees and match all nodes and values.",simpleExplanation:"Walk both trees together.\nAt every node, check values.\nIf anything differs, stop!",mnemonics:['"Match value" \u2192 p.val == q.val','"Match left/right" \u2192 return isSameTree(p.left, q.left) and ...','"Null base case" \u2192 if not p and not q: return True'],code:"def isSameTree(self, p, q):\n    if not p and not q:\n        return True\n    if not p or not q or p.val != q.val:\n        return False\n    return self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(H) - recursion stack, where H is the height"},{id:6,title:"Subtree of Another Tree",question:"Check if a tree is a subtree of another tree.",hint:"Check if current roots match, or if the subtree matches anywhere deeper.",oneLiner:"Check current node or its children for subtree match.",simpleExplanation:"Is it the same tree right now?\nIf not, check left and right.\nOne match is all you need!",mnemonics:['"Check match" \u2192 isSameTree(root, subRoot)','"Recurse left/right" \u2192 isSubtree(root.left, ...) or ...','"Reuse sameTree logic" \u2192 def isSameTree(...)'],code:"def isSubtree(self, root, subRoot):\n    def isSameTree(p, q):\n        if not p and not q:\n            return True\n        if not p or not q or p.val != q.val:\n            return False\n        return isSameTree(p.left, q.left) and isSameTree(p.right, q.right)\n\n    if not root:\n        return False\n    return isSameTree(root, subRoot) or self.isSubtree(root.left, subRoot) or self.isSubtree(root.right, subRoot)",timeComplexity:"O(M*N) - where M,N are the sizes of the trees",spaceComplexity:"O(H) - recursion stack, where H is the height"},{id:7,title:"Lowest Common Ancestor of a Binary Search Tree",question:"Find the lowest common ancestor of two nodes in a binary search tree.",hint:"Use BST properties to navigate efficiently (values less than root go left, greater go right).",oneLiner:"Walk down and stop where values split.",simpleExplanation:"Look left if both are smaller.\nGo right if both are bigger.\nElse, you found the split!",mnemonics:['"Both left?" \u2192 if p.val < root.val and q.val < root.val:','"Both right?" \u2192 elif p.val > root.val and q.val > root.val:','"Split found" \u2192 return root'],code:"def lowestCommonAncestor(self, root, p, q):\n    while root:\n        if p.val < root.val and q.val < root.val:\n            root = root.left\n        elif p.val > root.val and q.val > root.val:\n            root = root.right\n        else:\n            return root",timeComplexity:"O(H) - where H is the height of the tree",spaceComplexity:"O(1) - iterative approach uses constant space"},{id:8,title:"Binary Tree Level Order Traversal",question:"Return the level order traversal of a binary tree (values grouped by levels).",hint:"Use breadth-first search with a queue to process nodes level by level.",oneLiner:"Use a queue to collect node values level by level.",simpleExplanation:"Start at the root.\nVisit every level, left to right.\nAdd children to the queue!",mnemonics:['"Loop level size" \u2192 for _ in range(len(queue)):','"Push children" \u2192 if node.left: queue.append(...)','"Save level" \u2192 result.append(level)'],code:"from collections import deque\n\ndef levelOrder(self, root):\n    if not root:\n        return []\n    queue, result = deque([root]), []\n    while queue:\n        level = []\n        for _ in range(len(queue)):\n            node = queue.popleft()\n            level.append(node.val)\n            if node.left:\n                queue.append(node.left)\n            if node.right:\n                queue.append(node.right)\n        result.append(level)\n    return result",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(N) - in worst case, the queue stores all nodes at the deepest level"},{id:9,title:"Binary Tree Right Side View",question:"Return the values visible from the right side of a binary tree (rightmost node at each level).",hint:"Use level order traversal and keep the rightmost node at each level.",oneLiner:"Save the last node of each level from left-to-right scan.",simpleExplanation:"You stand on the right side.\nSee the last node of each row.\nOnly those are visible!",mnemonics:['"Peek last" \u2192 result.append(queue[-1].val)','"BFS as usual" \u2192 for _ in range(len(queue)):','"Push children" \u2192 queue.append(node.left/right)'],code:"from collections import deque\n\ndef rightSideView(self, root):\n    if not root:\n        return []\n    queue, result = deque([root]), []\n    while queue:\n        result.append(queue[-1].val)\n        for _ in range(len(queue)):\n            node = queue.popleft()\n            if node.left:\n                queue.append(node.left)\n            if node.right:\n                queue.append(node.right)\n    return result",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(D) - where D is the tree's max width"},{id:10,title:"Count Good Nodes in Binary Tree",question:"Count nodes where all ancestors have values <= the node's value.",hint:"Track the maximum value seen on the path from root to current node.",oneLiner:"DFS down the tree and count nodes >= max seen so far.",simpleExplanation:"Start from root.\nIf you're bigger than all parents, count yourself.\nPass the max as you go down.",mnemonics:['"Compare with max" \u2192 count = 1 if node.val >= maxVal else 0','"Pass down max" \u2192 maxVal = max(maxVal, node.val)','"Sum results" \u2192 return count + dfs(left) + dfs(right)'],code:"def goodNodes(self, root):\n    def dfs(node, maxVal):\n        if not node:\n            return 0\n        count = 1 if node.val >= maxVal else 0\n        maxVal = max(maxVal, node.val)\n        return count + dfs(node.left, maxVal) + dfs(node.right, maxVal)\n\n    return dfs(root, root.val)",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(H) - recursion stack, where H is the height"},{id:11,title:"Validate Binary Search Tree",question:"Determine if a binary tree is a valid binary search tree (BST).",hint:"Track the valid range of values for each subtree.",oneLiner:"Use bounds to check if every node is within (min, max).",simpleExplanation:"Every left should be smaller.\nEvery right should be bigger.\nUse ranges to check!",mnemonics:['"Check value" \u2192 if not (low < node.val < high): return False','"Update bounds" \u2192 dfs(node.left, low, node.val)','"Return True for leaf" \u2192 if not node: return True'],code:"def isValidBST(self, root):\n    def dfs(node, low, high):\n        if not node:\n            return True\n        if not (low < node.val < high):\n            return False\n        return dfs(node.left, low, node.val) and dfs(node.right, node.val, high)\n\n    return dfs(root, float('-inf'), float('inf'))",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(H) - recursion stack, where H is the height"},{id:12,title:"Kth Smallest Element in a BST",question:"Find the kth smallest element in a binary search tree.",hint:"Use in-order traversal to visit nodes in ascending order.",oneLiner:"Inorder traversal gives sorted values\u2014return kth.",simpleExplanation:"Left \u2192 Root \u2192 Right gives sorted list.\nStop when you hit the kth value.\nUse a stack to go deep.",mnemonics:['"Go left" \u2192 while root: stack.append(root)','"Pop & count" \u2192 root = stack.pop(); k -= 1','"Found kth" \u2192 if k == 0: return root.val'],code:"def kthSmallest(self, root, k):\n    stack = []\n    while root or stack:\n        while root:\n            stack.append(root)\n            root = root.left\n        root = stack.pop()\n        k -= 1\n        if k == 0:\n            return root.val\n        root = root.right",timeComplexity:"O(H + k) - where H is the height of the tree",spaceComplexity:"O(H) - for the stack"},{id:13,title:"Construct Binary Tree from Preorder and Inorder Traversal",question:"Build a binary tree from its preorder and inorder traversal arrays.",hint:"Use the preorder array to identify the root, and inorder to determine left and right subtrees.",oneLiner:"Use preorder to pick roots, inorder to split left/right.",simpleExplanation:"First value is root.\nInorder tells you who's left/right.\nRecursively build the tree!",mnemonics:['"Map inorder index" \u2192 inorder_map = {val: idx for ...}','"Pick root" \u2192 root_val = preorder[pre_idx]','"Split subtrees" \u2192 helper(pre_idx+1, ..., in_idx-1)'],code:"def buildTree(self, preorder, inorder):\n    inorder_map = {val: idx for idx, val in enumerate(inorder)}\n    \n    def helper(pre_idx, in_left, in_right):\n        if in_left > in_right:\n            return None\n        root_val = preorder[pre_idx]\n        root = TreeNode(root_val)\n        in_idx = inorder_map[root_val]\n        root.left = helper(pre_idx + 1, in_left, in_idx - 1)\n        root.right = helper(pre_idx + (in_idx - in_left) + 1, in_idx + 1, in_right)\n        return root\n\n    return helper(0, 0, len(inorder) - 1)",timeComplexity:"O(N) - we process each node once",spaceComplexity:"O(N) - for the hash map and recursion stack"},{id:14,title:"Binary Tree Maximum Path Sum",question:"Find the maximum path sum between any two nodes in a binary tree.",hint:"Track both the maximum path sum and the maximum path sum ending at each node.",oneLiner:"DFS each node and track best path going through it.",simpleExplanation:"Try every path that bends at a node.\nTrack the best total sum.\nOnly return max single-leg path upward!",mnemonics:['"Ignore negatives" \u2192 left = max(dfs(node.left), 0)','"Update global max" \u2192 max_sum = max(max_sum, left + right + node.val)','"Return one leg" \u2192 return node.val + max(left, right)'],code:"def maxPathSum(self, root):\n    max_sum = float('-inf')\n\n    def dfs(node):\n        nonlocal max_sum\n        if not node:\n            return 0\n        left = max(dfs(node.left), 0)\n        right = max(dfs(node.right), 0)\n        max_sum = max(max_sum, left + right + node.val)\n        return node.val + max(left, right)\n\n    dfs(root)\n    return max_sum",timeComplexity:"O(N) - we visit each node once",spaceComplexity:"O(H) - recursion stack, where H is the height"},{id:15,title:"Serialize and Deserialize Binary Tree",question:"Design an algorithm to serialize and deserialize a binary tree.",hint:"Use a preorder traversal with a special null marker.",oneLiner:"Turn the tree into a nested list and JSON it.",simpleExplanation:"Turn tree into a string.\nSend it over the wire.\nRebuild it later!",mnemonics:['"Listify tree" \u2192 [val, left, right]','"Use JSON" \u2192 json.dumps(...) / json.loads(...)','"Recursive decode" \u2192 deserialize(lst[1]), deserialize(lst[2])'],code:"def serialize(self, root):\n    return json.dumps([] if not root else [root.val, self.serialize(root.left), self.serialize(root.right)])\n\ndef deserialize(self, data):\n    lst = json.loads(data)\n    if not lst:\n        return None\n    node = TreeNode(lst[0])\n    node.left = self.deserialize(lst[1])\n    node.right = self.deserialize(lst[2])\n    return node",timeComplexity:"O(N) - we process each node once",spaceComplexity:"O(N) - for the serialized string"}],f=[{id:1,title:"Implement Trie (Prefix Tree)",question:"Design a data structure that supports inserting, searching, and prefix matching for strings",hint:"Think about how to represent character-by-character traversal using nested dictionaries",oneLiner:"Use a nested dictionary where each node is a character map, ending with a special end marker.",simpleExplanation:"We build a tree where each letter has its own branch.\nWe follow each letter step by step when adding a word.\nA special symbol tells us when a word ends.",mnemonics:['"Start root" \u2192 self.root = {}','"Insert char by char" \u2192 node = node.setdefault(char, {})',"\"Mark end of word\" \u2192 node['#'] = True"],code:"class TrieNode:\n    def __init__(self):\n        self.children = {}\n        self.isWord = False\n\nclass Trie:\n    def __init__(self):\n        self.root = TrieNode()\n\n    def insert(self, word):\n        node = self.root\n        for ch in word:\n            if ch not in node.children:\n                node.children[ch] = TrieNode()\n            node = node.children[ch]\n        node.isWord = True\n\n    def search(self, word):\n        node = self._find(word)\n        return node is not None and node.isWord\n\n    def startsWith(self, prefix):\n        return self._find(prefix) is not None\n\n    def _find(self, word):\n        node = self.root\n        for ch in word:\n            if ch not in node.children:\n                return None\n            node = node.children[ch]\n        return node",timeComplexity:"insert: O(L), search: O(L), startsWith: O(L) where L is word length",spaceComplexity:"O(N) where N is total characters inserted"},{id:2,title:"Design Add and Search Words Data Structure",question:"Implement a data structure that can add words and search for words with wildcards",hint:"How would you handle a '.' character that can match any letter during search?",oneLiner:"Extend Trie with DFS to handle wildcards (.) during search.",simpleExplanation:"We store words in a special tree (Trie).\nWhen searching, we can use . to mean any letter.\nWe check all possible paths for matches.",mnemonics:["\"Dot means explore\" \u2192 if char == '.': try all children","\"End match\" \u2192 if at end and '#' in node: return True",'"DFS search" \u2192 searchHelper(word, index, node)'],code:"class WordDictionary:\n    def __init__(self):\n        self.root = {}\n\n    def addWord(self, word):\n        node = self.root\n        for ch in word:\n            node = node.setdefault(ch, {})\n        node['#'] = True  # End of word\n\n    def search(self, word):\n        def dfs(node, i):\n            if i == len(word):\n                return '#' in node\n            if word[i] == '.':\n                return any(dfs(child, i + 1) for child in node if child != '#')\n            return word[i] in node and dfs(node[word[i]], i + 1)\n\n        return dfs(self.root, 0)",timeComplexity:"addWord: O(L), search: Worst case O(26^L) if all characters are .",spaceComplexity:"O(N) where N is total characters inserted"},{id:3,title:"Word Search II",question:"Given an m\xd7n board of characters and a list of words, find all words that can be formed on the board",hint:"Could you use a Trie to quickly check if a prefix exists in the word list during board traversal?",oneLiner:"Build a Trie of words, then DFS through board to match prefixes.",simpleExplanation:"We put all words into a search tree (Trie).\nThen we walk around the board letter by letter.\nIf we match a word path, we add it to our answers.",mnemonics:['"Build Trie first" \u2192 for word in words: insert(word)','"Explore neighbors" \u2192 dfs(i, j, node)',"\"Found word\" \u2192 if '#' in node: add to result"],code:"class TrieNode:\n    def __init__(self):\n        self.children = {}\n        self.word = None  # Store word at the end\n\nclass Solution:\n    def findWords(self, board, words):\n        root = TrieNode()\n\n        # Build Trie\n        for word in words:\n            node = root\n            for ch in word:\n                if ch not in node.children:\n                    node.children[ch] = TrieNode()\n                node = node.children[ch]\n            node.word = word\n\n        res = []\n        rows, cols = len(board), len(board[0])\n\n        def dfs(r, c, node):\n            char = board[r][c]\n            if char not in node.children:\n                return\n            nxt_node = node.children[char]\n            if nxt_node.word:\n                res.append(nxt_node.word)\n                nxt_node.word = None  # Avoid duplicates\n\n            board[r][c] = '#'\n            for dr, dc in [(-1,0), (1,0), (0,-1), (0,1)]:\n                nr, nc = r + dr, c + dc\n                if 0 <= nr < rows and 0 <= nc < cols and board[nr][nc] != '#':\n                    dfs(nr, nc, nxt_node)\n            board[r][c] = char\n\n        for r in range(rows):\n            for c in range(cols):\n                dfs(r, c, root)\n\n        return res",timeComplexity:"Building Trie: O(W * L), DFS Search: O(M * N * 4^L)",spaceComplexity:"O(W * L) for Trie + O(L) recursion depth"}],p=[{id:1,title:"Subsets",question:"Generate all possible subsets of a given set of distinct integers.",hint:"Use backtracking to recursively build all combinations.",oneLiner:"Use backtracking to include or exclude each number.",simpleExplanation:"We pick numbers one by one.\nEach time, we decide to keep it or skip it.\nThat gives us all possible combinations.",mnemonics:['"Start with empty list" \u2192 res = [[]]','"Try adding" \u2192 dfs(index + 1, path + [nums[i]])','"Try skipping" \u2192 dfs(index + 1, path)'],code:"def subsets(self, nums):\n    result = []\n    def backtrack(start, path):\n        result.append(path)\n        for i in range(start, len(nums)):\n            backtrack(i + 1, path + [nums[i]])\n    backtrack(0, [])\n    return result",timeComplexity:"O(2^n) - we generate all possible subsets",spaceComplexity:"O(n) - maximum depth of recursion stack"},{id:2,title:"Combination Sum",question:"Find all unique combinations of candidates where the chosen numbers sum to a target.",hint:"Use backtracking to try different combinations, and each number can be used unlimited times.",oneLiner:"Use DFS to try combinations, reusing the same number.",simpleExplanation:"We keep adding numbers until we hit the target.\nWe can use the same number again.\nIf it's too much, we stop and go back.",mnemonics:['"Base case" \u2192 if target == 0: add path','"Too big" \u2192 if target < 0: return','"Try again" \u2192 dfs(i, path + [candidates[i]], target - candidates[i])'],code:"def combinationSum(self, candidates, target):\n    result = []\n    def backtrack(start, target, path):\n        if target == 0:\n            result.append(path)\n            return\n        for i in range(start, len(candidates)):\n            if candidates[i] > target:\n                continue\n            backtrack(i, target - candidates[i], path + [candidates[i]])\n    candidates.sort()\n    backtrack(0, target, [])\n    return result",timeComplexity:"O(N^(T/M)) - where T is target and M is minimum value",spaceComplexity:"O(T/M) - maximum recursion depth"},{id:3,title:"Combination Sum II",question:"Find all unique combinations in candidates where the chosen numbers sum to target (no duplicates allowed).",hint:"Sort the array first to handle duplicates easily.",oneLiner:"Like Combination Sum but skip duplicates and don't reuse elements.",simpleExplanation:"We can't use the same number again.\nWe also skip duplicates to avoid repeat combos.\nWe keep trying until the sum matches the target.",mnemonics:['"Sort first" \u2192 candidates.sort()','"Skip duplicates" \u2192 if i > start and candidates[i] == candidates[i - 1]: continue','"DFS without reuse" \u2192 dfs(i + 1, path + [candidates[i]], target - candidates[i])'],code:"def combinationSum2(self, candidates, target):\n    result = []\n    candidates.sort()\n    def backtrack(start, target, path):\n        if target == 0:\n            result.append(path)\n            return\n        prev = -1\n        for i in range(start, len(candidates)):\n            if candidates[i] == prev:\n                continue\n            if candidates[i] > target:\n                break\n            backtrack(i + 1, target - candidates[i], path + [candidates[i]])\n            prev = candidates[i]\n    backtrack(0, target, [])\n    return result",timeComplexity:"O(2^n) - worst case, all combinations",spaceComplexity:"O(n) - maximum recursion depth"},{id:4,title:"Permutations",question:"Return all possible permutations of a list of distinct integers.",hint:"Track which numbers have been used in the current permutation.",oneLiner:"Use backtracking to build all possible orders.",simpleExplanation:"We make all different orders of the numbers.\nWe pick one at a time and don't repeat it.\nWhen the list is full, we save it.",mnemonics:['"Track used" \u2192 if num in used: continue','"Choose number" \u2192 path.append(num)','"Backtrack" \u2192 path.pop() and used.remove(num)'],code:"def permute(self, nums):\n    result = []\n    def backtrack(path, options):\n        if not options:\n            result.append(path)\n            return\n        for i in range(len(options)):\n            backtrack(path + [options[i]], options[:i] + options[i+1:])\n    backtrack([], nums)\n    return result",timeComplexity:"O(n!) - we generate all permutations",spaceComplexity:"O(n) - maximum recursion depth"},{id:5,title:"Subsets II",question:"Return all possible subsets of a list of integers that might contain duplicates.",hint:"Sort the array and skip duplicates at the same level of recursion.",oneLiner:"Backtracking with duplicate skip using sorted input.",simpleExplanation:"Like normal subsets, but now we skip duplicates.\nWe sort the list so we can spot repeats.\nWe only use the first time a number shows up at a level.",mnemonics:['"Sort input" \u2192 nums.sort()','"Skip repeat at level" \u2192 if i > start and nums[i] == nums[i - 1]: continue','"DFS normally" \u2192 dfs(i + 1, path + [nums[i]])'],code:"def subsetsWithDup(self, nums):\n    result = []\n    nums.sort()\n    def backtrack(start, path):\n        result.append(path)\n        for i in range(start, len(nums)):\n            if i > start and nums[i] == nums[i - 1]:\n                continue\n            backtrack(i + 1, path + [nums[i]])\n    backtrack(0, [])\n    return result",timeComplexity:"O(2^n) - worst case, all subsets",spaceComplexity:"O(n) - maximum recursion depth"},{id:6,title:"Word Search",question:"Given a grid and a word, find if the word exists in the grid. Letters must be adjacent.",hint:"Use backtracking to explore all possible paths through the grid.",oneLiner:"Backtrack through board cells matching word letters.",simpleExplanation:"We try to find each letter one by one.\nWe can only move up/down/left/right.\nIf it works, we return true!",mnemonics:['"Check match" \u2192 if board[i][j] != word[pos]: return',"\"Mark visited\" \u2192 board[i][j] = '#'",'"Unmark (backtrack)" \u2192 board[i][j] = original_letter'],code:"def exist(self, board, word):\n    rows, cols = len(board), len(board[0])\n    def backtrack(r, c, index):\n        if index == len(word):\n            return True\n        if r < 0 or r >= rows or c < 0 or c >= cols or board[r][c] != word[index]:\n            return False\n        temp, board[r][c] = board[r][c], '#'\n        found = (backtrack(r+1, c, index+1) or\n                 backtrack(r-1, c, index+1) or\n                 backtrack(r, c+1, index+1) or\n                 backtrack(r, c-1, index+1))\n        board[r][c] = temp\n        return found\n    for r in range(rows):\n        for c in range(cols):\n            if backtrack(r, c, 0):\n                return True\n    return False",timeComplexity:"O(M\xd7N\xd74^L) - where L is word length",spaceComplexity:"O(L) - recursion depth equals word length"},{id:7,title:"Palindrome Partitioning",question:"Partition a string such that every substring is a palindrome. Return all possible partitions.",hint:"Use backtracking to try different cutting points in the string.",oneLiner:"Use backtracking to cut the string at every palindrome point.",simpleExplanation:"We break the string into pieces.\nOnly cut when the piece is a palindrome.\nWe keep cutting until the whole string is split.",mnemonics:['"Check palindrome" \u2192 if s[l:r+1] == s[l:r+1][::-1]','"Cut and continue" \u2192 dfs(end + 1, path + [s[start:end+1]])','"Add to result" \u2192 if start == len(s): res.append(path)'],code:"def partition(self, s):\n    result = []\n    def is_palindrome(sub):\n        return sub == sub[::-1]\n    def backtrack(start, path):\n        if start == len(s):\n            result.append(path)\n            return\n        for end in range(start + 1, len(s) + 1):\n            if is_palindrome(s[start:end]):\n                backtrack(end, path + [s[start:end]])\n    backtrack(0, [])\n    return result",timeComplexity:"O(N\xd72^N) - checking palindromes adds a factor of N",spaceComplexity:"O(N) - recursion depth is at most N"},{id:8,title:"Letter Combinations of a Phone Number",question:"Given a string containing digits from 2-9, return all possible letter combinations.",hint:"Create a mapping of digits to letters and use backtracking.",oneLiner:"Backtrack all digit-letter mappings like a tree.",simpleExplanation:"Each number maps to letters.\nWe pick one letter per number.\nWe try every combination possible.",mnemonics:["\"Map digits\" \u2192 digit_map = {'2': 'abc', ...}",'"For each digit" \u2192 for letter in digit_map[digit]:','"Backtrack" \u2192 dfs(index + 1, path + letter)'],code:"def letterCombinations(self, digits):\n    if not digits:\n        return []\n    phone = {\n        '2': 'abc', '3': 'def', '4': 'ghi', '5': 'jkl',\n        '6': 'mno', '7': 'pqrs', '8': 'tuv', '9': 'wxyz'\n    }\n    result = []\n    def backtrack(index, path):\n        if index == len(digits):\n            result.append(path)\n            return\n        for char in phone[digits[index]]:\n            backtrack(index + 1, path + char)\n    backtrack(0, '')\n    return result",timeComplexity:"O(4^N) - each digit maps to at most 4 letters",spaceComplexity:"O(N) - recursion depth equals input length"},{id:9,title:"N Queens",question:"Place N queens on an N\xd7N chessboard so that no two queens attack each other.",hint:"Track which columns, diagonals, and anti-diagonals are occupied.",oneLiner:"Place queens row by row, checking for safe spots.",simpleExplanation:"We try to put queens one row at a time.\nWe make sure they don't attack each other.\nIf it works, we save the board setup.",mnemonics:['"Loop columns" \u2192 for col in range(n):','"Check safe" \u2192 if col not in cols and row+col not in diag1 and row-col not in diag2','"Place & recurse" \u2192 dfs(row + 1) and backtrack positions'],code:"def solveNQueens(self, n):\n    cols = set()\n    diag1 = set()  # r + c\n    diag2 = set()  # r - c\n    \n    result = []\n    board = [['.' for _ in range(n)] for _ in range(n)]\n    \n    def backtrack(r):\n        if r == n:\n            copy = [''.join(row) for row in board]\n            result.append(copy)\n            return\n\n        for c in range(n):\n            if c in cols or (r + c) in diag1 or (r - c) in diag2:\n                continue\n\n            cols.add(c)\n            diag1.add(r + c)\n            diag2.add(r - c)\n            board[r][c] = 'Q'\n\n            backtrack(r + 1)\n\n            cols.remove(c)\n            diag1.remove(r + c)\n            diag2.remove(r - c)\n            board[r][c] = '.'\n    \n    backtrack(0)\n    return result",timeComplexity:"O(N!) - we try each valid permutation of queen placements",spaceComplexity:"O(N) - for the board and tracking structures"}],m=[{id:1,title:"Kth Largest Element in a Stream",question:"Design a class to find the kth largest element in a stream of numbers.",hint:"Maintain a min-heap of size k to efficiently track the kth largest element.",oneLiner:"Maintain a min-heap of size `k` to track the Kth largest element.",simpleExplanation:"We keep the biggest `k` numbers in a bucket.\nWe throw out the smallest one if we get too many.\nThe Kth largest is always the smallest in our bucket.",mnemonics:['"Push to heap" \u2192 heapq.heappush(self.heap, val)','"Pop if oversized" \u2192 if len(self.heap) > k: heapq.heappop(self.heap)','"Return Kth" \u2192 return self.heap[0]'],code:"import heapq\n\nclass KthLargest:\n    def __init__(self, k, nums):\n        self.k = k\n        self.min_heap = nums\n        heapq.heapify(self.min_heap)\n        while len(self.min_heap) > k:\n            heapq.heappop(self.min_heap)\n\n    def add(self, val):\n        heapq.heappush(self.min_heap, val)\n        if len(self.min_heap) > self.k:\n            heapq.heappop(self.min_heap)\n        return self.min_heap[0]",timeComplexity:"init: O(n log k), add: O(log k)",spaceComplexity:"O(k) - to store the heap of size k"},{id:2,title:"Last Stone Weight",question:"Smash stones together and return the final weight of the last stone (if any).",hint:"Use a max-heap (simulated with a min-heap using negative values) to efficiently get the largest stones.",oneLiner:"Use a max-heap (invert numbers) to always smash the heaviest stones.",simpleExplanation:"We take the two heaviest stones.\nIf they're different, we smash and put the leftover back.\nWe keep doing that until one or zero stones are left.",mnemonics:['"Max heap" \u2192 heap = [-x for x in stones]','"Pop two largest" \u2192 a = -heapq.heappop(heap), b = -heapq.heappop(heap)','"Push back if diff" \u2192 if a != b: heapq.heappush(heap, -(a - b))'],code:"import heapq\n\ndef lastStoneWeight(stones):\n    stones = [-s for s in stones]\n    heapq.heapify(stones)\n    while len(stones) > 1:\n        first = -heapq.heappop(stones)\n        second = -heapq.heappop(stones)\n        if first != second:\n            heapq.heappush(stones, -(first - second))\n    return -stones[0] if stones else 0",timeComplexity:"O(n log n) - heap operations for each stone",spaceComplexity:"O(n) - for the heap"},{id:3,title:"K Closest Points to Origin",question:"Find the k closest points to the origin (0, 0) from a list of points.",hint:"Use a heap to keep track of the k closest points based on their distance from the origin.",oneLiner:"Use a max-heap of size `k` with negative distances.",simpleExplanation:"We find how far each point is from the center.\nWe keep only the closest `k` ones.\nAt the end, we give back those points.",mnemonics:['"Calculate dist" \u2192 dist = x*x + y*y','"Max heap trick" \u2192 heapq.heappush(heap, (-dist, (x, y)))','"Pop if > k" \u2192 if len(heap) > k: heapq.heappop(heap)'],code:"import heapq\n\ndef kClosest(points, k):\n    heap = []\n    for (x, y) in points:\n        dist = -(x**2 + y**2)\n        if len(heap) < k:\n            heapq.heappush(heap, (dist, x, y))\n        else:\n            heapq.heappushpop(heap, (dist, x, y))\n    return [(x, y) for (dist, x, y) in heap]",timeComplexity:"O(n log k) - heap operations for each point",spaceComplexity:"O(k) - for the heap"},{id:4,title:"Kth Largest Element in an Array",question:"Find the kth largest element in an unsorted array.",hint:"Use a min-heap of size k to track the k largest elements.",oneLiner:"Use a min-heap of size `k` to track top elements.",simpleExplanation:"We look through all the numbers.\nWe keep a bucket with the largest `k` ones.\nThe smallest in that bucket is the answer.",mnemonics:['"Push to heap" \u2192 heapq.heappush(heap, num)','"Trim to k size" \u2192 if len(heap) > k: heapq.heappop(heap)','"Return top" \u2192 return heap[0]'],code:"import heapq\n\ndef findKthLargest(nums, k):\n    return heapq.nlargest(k, nums)[-1]\n\n# Alternative implementation:\ndef findKthLargest_alt(nums, k):\n    heap = []\n    for num in nums:\n        heapq.heappush(heap, num)\n        if len(heap) > k:\n            heapq.heappop(heap)\n    return heap[0]",timeComplexity:"O(n log k) - heap operations for each element",spaceComplexity:"O(k) - for the heap"},{id:5,title:"Task Scheduler",question:"Find the minimum time needed to execute all tasks with cooldown constraints.",hint:"Greedily schedule the most frequent tasks first to minimize idle time.",oneLiner:"Use a greedy strategy with a max-heap and cooldown logic.",simpleExplanation:"We want to do tasks without repeating too soon.\nWe do the most frequent task first.\nIf we wait, we fill gaps with idle time.",mnemonics:['"Count tasks" \u2192 freq = Counter(tasks)','"Max heap" \u2192 heap = [-cnt for cnt in freq.values()]','"Cooldown cycle" \u2192 for i in range(n + 1): fill tasks or idle'],code:"from collections import Counter\nimport heapq\n\ndef leastInterval(tasks, n):\n    task_counts = Counter(tasks)\n    max_heap = [-cnt for cnt in task_counts.values()]\n    heapq.heapify(max_heap)\n    time = 0\n    while max_heap:\n        temp = []\n        for _ in range(n + 1):\n            if max_heap:\n                temp.append(heapq.heappop(max_heap))\n        for item in temp:\n            if item + 1 < 0:\n                heapq.heappush(max_heap, item + 1)\n        time += n + 1 if max_heap else len(temp)\n    return time",timeComplexity:"O(n) - processing each task once",spaceComplexity:"O(1) - at most 26 task types (letters)"},{id:6,title:"Design Twitter",question:"Design a simplified version of Twitter with posting, following, and news feed functionality.",hint:"Use heaps to efficiently merge and retrieve the most recent tweets from followed users.",oneLiner:"Use a heap to get the 10 most recent tweets across users.",simpleExplanation:"Each user has their own tweet list.\nWe mix them and keep only the latest 10.\nWe also track who follows whom.",mnemonics:['"Tweet store" \u2192 self.tweets = {user: []}','"Heap feed" \u2192 heapq.heappush(heap, (-time, tweet))','"Follows set" \u2192 self.followees[user].add(followee)'],code:"import heapq\nfrom collections import defaultdict, deque\n\nclass Twitter:\n    def __init__(self):\n        self.time = 0\n        self.tweets = defaultdict(deque)\n        self.followees = defaultdict(set)\n\n    def postTweet(self, userId, tweetId):\n        self.tweets[userId].appendleft((self.time, tweetId))\n        self.time += 1\n\n    def getNewsFeed(self, userId):\n        heap = []\n        self.followees[userId].add(userId)\n        for followee in self.followees[userId]:\n            for tweet in self.tweets[followee]:\n                heapq.heappush(heap, tweet)\n                if len(heap) > 10:\n                    heapq.heappop(heap)\n        result = []\n        while heap:\n            result.append(heapq.heappop(heap)[1])\n        return result[::-1]\n\n    def follow(self, followerId, followeeId):\n        self.followees[followerId].add(followeeId)\n\n    def unfollow(self, followerId, followeeId):\n        self.followees[followerId].discard(followeeId)",timeComplexity:"postTweet: O(1), getNewsFeed: O(F + T log T)",spaceComplexity:"O(U + T) - users and tweets"},{id:7,title:"Find Median from Data Stream",question:"Design a data structure that supports adding integers and finding the median.",hint:"Use two heaps to track the lower and upper halves of the data stream.",oneLiner:"Use two heaps (max-heap + min-heap) to balance lower and upper halves.",simpleExplanation:"We keep small numbers on one side, big ones on the other.\nThe middle is easy to find when both sides are balanced.\nWe add numbers and move between sides as needed.",mnemonics:['"Two heaps" \u2192 small = MaxHeap, large = MinHeap','"Balance heaps" \u2192 if len(small) > len(large): move one over','"Get median" \u2192 return (top of small + top of large) / 2'],code:"import heapq\n\nclass MedianFinder:\n    def __init__(self):\n        self.small = []  # Max heap (inverted min heap)\n        self.large = []  # Min heap\n\n    def addNum(self, num):\n        heapq.heappush(self.small, -num)\n        if (self.small and self.large and\n                (-self.small[0] > self.large[0])):\n            heapq.heappush(self.large, -heapq.heappop(self.small))\n        if len(self.small) > len(self.large) + 1:\n            heapq.heappush(self.large, -heapq.heappop(self.small))\n        if len(self.large) > len(self.small):\n            heapq.heappush(self.small, -heapq.heappop(self.large))\n\n    def findMedian(self):\n        if len(self.small) > len(self.large):\n            return -self.small[0]\n        return (-self.small[0] + self.large[0]) / 2",timeComplexity:"addNum: O(log n), findMedian: O(1)",spaceComplexity:"O(n) - to store all elements"}],h=[{id:1,title:"Insert Interval",question:"Given a set of non-overlapping intervals, insert a new interval into the set, merging if necessary.",hint:"Think about handling intervals before, during, and after the overlap separately.",oneLiner:"Scan and merge intervals while inserting the new one in the correct place.",simpleExplanation:"Check which intervals come before the new one.\nThen merge the ones that overlap with it.\nAfter that, just add what's left!",mnemonics:['"Add before" \u2192 while i < n and intervals[i][1] < newInterval[0]: result.append(intervals[i])','"Merge overlap" \u2192 newInterval[0] = min(newInterval[0], intervals[i][0])','"Add remaining" \u2192 while i < n: result.append(intervals[i])'],code:"def insert(intervals, newInterval):\n    result = []\n    i = 0\n    n = len(intervals)\n\n    # Add all intervals ending before newInterval starts\n    while i < n and intervals[i][1] < newInterval[0]:\n        result.append(intervals[i])\n        i += 1\n\n    # Merge overlapping intervals\n    while i < n and intervals[i][0] <= newInterval[1]:\n        newInterval[0] = min(newInterval[0], intervals[i][0])\n        newInterval[1] = max(newInterval[1], intervals[i][1])\n        i += 1\n    result.append(newInterval)\n\n    # Add remaining intervals\n    while i < n:\n        result.append(intervals[i])\n        i += 1\n\n    return result",timeComplexity:"O(n) - we process each interval once",spaceComplexity:"O(n) - for the result list"},{id:2,title:"Merge Intervals",question:"Given a collection of intervals, merge all overlapping intervals.",hint:"Sort intervals by start time to make overlaps contiguous.",oneLiner:"Sort intervals and merge overlapping ones into bigger blocks.",simpleExplanation:"Sort your blocks by when they start.\nIf two blocks touch or overlap, combine them.\nKeep adding non-overlapping ones!",mnemonics:['"Sort by start" \u2192 intervals.sort(key=lambda x: x[0])','"Merge check" \u2192 if current[0] <= prev[1]: prev[1] = max(prev[1], current[1])','"New block" \u2192 else: merged.append(current)'],code:"def merge(intervals):\n    if not intervals:\n        return []\n\n    # Sort intervals based on the start time\n    intervals.sort(key=lambda x: x[0])\n    merged = [intervals[0]]\n\n    for current in intervals[1:]:\n        prev = merged[-1]\n        if current[0] <= prev[1]:  # Overlapping intervals\n            prev[1] = max(prev[1], current[1])\n        else:\n            merged.append(current)\n\n    return merged",timeComplexity:"O(n log n) - dominated by the sorting step",spaceComplexity:"O(n) - for the merged list"},{id:3,title:"Non-Overlapping Intervals",question:"Find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.",hint:"Sort by end time and greedily select non-overlapping intervals.",oneLiner:"Sort by end time and greedily keep non-overlapping intervals.",simpleExplanation:"Pick intervals that end the earliest.\nIf they don't bump into the next one, keep them.\nSubtract the number you kept from total.",mnemonics:['"Sort by end" \u2192 intervals.sort(key=lambda x: x[1])','"Skip overlap" \u2192 if intervals[i][0] >= end:','"Remove extras" \u2192 return len(intervals) - count'],code:"def eraseOverlapIntervals(intervals):\n    if not intervals:\n        return 0\n\n    # Sort intervals based on the end time\n    intervals.sort(key=lambda x: x[1])\n    end = intervals[0][1]\n    count = 1\n\n    for i in range(1, len(intervals)):\n        if intervals[i][0] >= end:\n            count += 1\n            end = intervals[i][1]\n\n    return len(intervals) - count",timeComplexity:"O(n log n) - dominated by the sorting step",spaceComplexity:"O(1) - using constant extra space"},{id:4,title:"Meeting Rooms",question:"Given an array of meeting time intervals, determine if a person could attend all meetings.",hint:"Check if any meetings overlap after sorting.",oneLiner:"Sort intervals and check for any overlaps between meetings.",simpleExplanation:"Line up all your meetings by start time.\nIf one starts before the last one ended, you can't go!\nNo overlaps? You're good to attend all.",mnemonics:['"Sort by start" \u2192 intervals.sort(key=lambda x: x[0])','"Overlap check" \u2192 if intervals[i][0] < intervals[i - 1][1]: return False','"All good" \u2192 return True'],code:"def canAttendMeetings(intervals):\n    # Sort intervals based on the start time\n    intervals.sort(key=lambda x: x[0])\n\n    for i in range(1, len(intervals)):\n        if intervals[i][0] < intervals[i - 1][1]:\n            return False\n    return True",timeComplexity:"O(n log n) - dominated by the sorting step",spaceComplexity:"O(1) - using constant extra space"},{id:5,title:"Meeting Rooms II",question:"Find the minimum number of conference rooms required for a set of meeting intervals.",hint:"Use a min heap to track when rooms become available.",oneLiner:"Use a min-heap to track meeting end times and allocate rooms.",simpleExplanation:"Use rooms when meetings overlap.\nFree rooms that end before the next starts.\nCount how many rooms you needed.",mnemonics:['"Sort by start" \u2192 intervals.sort(key=lambda x: x[0])','"Reuse room" \u2192 if min_heap and min_heap[0] <= interval[0]: heapq.heappop(min_heap)','"Add end time" \u2192 heapq.heappush(min_heap, interval[1])'],code:"import heapq\n\ndef minMeetingRooms(intervals):\n    if not intervals:\n        return 0\n\n    # Sort intervals based on the start time\n    intervals.sort(key=lambda x: x[0])\n    min_heap = []\n\n    for interval in intervals:\n        if min_heap and min_heap[0] <= interval[0]:\n            heapq.heappop(min_heap)\n        heapq.heappush(min_heap, interval[1])\n\n    return len(min_heap)",timeComplexity:"O(n log n) - dominated by sorting and heap operations",spaceComplexity:"O(n) - for the heap in worst case"},{id:6,title:"Minimum Interval to Include Each Query",question:"Find the size of the smallest interval that includes each query point.",hint:"Process queries in ascending order and use a min heap to track valid intervals.",oneLiner:"Use a heap to track valid intervals for each sorted query.",simpleExplanation:'Sort your intervals and questions.\nFor each question, keep the smallest interval that fits.\nIf none fit, say "no size!"',mnemonics:['"Sort by start/query" \u2192 intervals.sort(), queries_sorted = sorted(enumerate(queries), key=lambda x: x[1])','"Push valid" \u2192 heapq.heappush(min_heap, (end - start + 1, end))','"Pop expired" \u2192 while min_heap and min_heap[0][1] < query: heapq.heappop(min_heap)'],code:"import heapq\n\ndef minInterval(intervals, queries):\n    intervals.sort(key=lambda x: x[0])\n    queries_sorted = sorted(enumerate(queries), key=lambda x: x[1])\n    result = [-1] * len(queries)\n    min_heap = []\n    i = 0\n\n    for index, query in queries_sorted:\n        while i < len(intervals) and intervals[i][0] <= query:\n            start, end = intervals[i]\n            heapq.heappush(min_heap, (end - start + 1, end))\n            i += 1\n\n        while min_heap and min_heap[0][1] < query:\n            heapq.heappop(min_heap)\n\n        if min_heap:\n            result[index] = min_heap[0][0]\n\n    return result",timeComplexity:"O((n + q) log n) - where n is intervals and q is queries",spaceComplexity:"O(n) - for the heap in worst case"}],g=[{id:1,title:"Maximum Subarray",question:"Find the contiguous subarray within a one-dimensional array of numbers that has the largest sum.",hint:"Use Kadane's algorithm to keep track of the best subarray ending at each position.",oneLiner:"Use Kadane's algorithm to track the best subarray sum ending at each index.",simpleExplanation:"Add each number to your score.\nIf it hurts more than helps, start fresh.\nKeep the highest score!",mnemonics:['"Choose max path" \u2192 current_sum = max(num, current_sum + num)','"Track highest" \u2192 max_sum = max(max_sum, current_sum)','"Start small" \u2192 current_sum = max_sum = nums[0]'],code:"def maxSubArray(nums):\n    current_sum = max_sum = nums[0]\n    for num in nums[1:]:\n        current_sum = max(num, current_sum + num)\n        max_sum = max(max_sum, current_sum)\n    return max_sum",timeComplexity:"O(n) - one pass through the array",spaceComplexity:"O(1) - constant extra space"},{id:2,title:"Jump Game",question:"Given an array where each element represents your maximum jump length, determine if you can reach the last index.",hint:"Track the furthest index you can reach as you iterate through the array.",oneLiner:"Track the furthest index reachable at every step.",simpleExplanation:"Jump from stone to stone.\nIf you can't reach one, stop.\nGo as far as you can!",mnemonics:['"Too far to jump?" \u2192 if i > max_reach: return False','"Keep extending" \u2192 max_reach = max(max_reach, i + num)','"Goal achieved" \u2192 return True'],code:"def canJump(nums):\n    max_reach = 0\n    for i, num in enumerate(nums):\n        if i > max_reach:\n            return False\n        max_reach = max(max_reach, i + num)\n        if max_reach >= len(nums) - 1:\n            return True\n    return True",timeComplexity:"O(n) - one pass through the array",spaceComplexity:"O(1) - constant extra space"},{id:3,title:"Jump Game II",question:"Find the minimum number of jumps to reach the last index.",hint:"Track the current range and update it when you've explored all current possibilities.",oneLiner:"Count jumps when current range ends and extend to farthest.",simpleExplanation:"Each jump gets you closer to the goal.\nWait till you run out of steps.\nThen take the next big jump!",mnemonics:['"Track farthest" \u2192 farthest = max(farthest, i + nums[i])','"Jump when needed" \u2192 if i == current_end: jumps += 1; current_end = farthest','"Stop at end" \u2192 for i in range(len(nums) - 1):'],code:"def jump(nums):\n    jumps = current_end = farthest = 0\n    for i in range(len(nums) - 1):\n        farthest = max(farthest, i + nums[i])\n        if i == current_end:\n            jumps += 1\n            current_end = farthest\n    return jumps",timeComplexity:"O(n) - one pass through the array",spaceComplexity:"O(1) - constant extra space"},{id:4,title:"Gas Station",question:"Find a starting gas station index to complete a circular route if possible.",hint:"If total gas >= total cost, there must be a solution. Track the current tank to find it.",oneLiner:"Track total gas vs cost and reset start when running dry.",simpleExplanation:"Drive your toy car around the track.\nIf you run out, try the next start.\nIf there's more gas than cost, you'll make it!",mnemonics:['"Reset on empty" \u2192 if current_tank < 0: start_index = i + 1; current_tank = 0','"Check total" \u2192 return start_index if total_tank >= 0 else -1','"Add net gain" \u2192 total_tank += gas[i] - cost[i]'],code:"def canCompleteCircuit(gas, cost):\n    total_tank = current_tank = start_index = 0\n    for i in range(len(gas)):\n        total_tank += gas[i] - cost[i]\n        current_tank += gas[i] - cost[i]\n        if current_tank < 0:\n            start_index = i + 1\n            current_tank = 0\n    return start_index if total_tank >= 0 else -1",timeComplexity:"O(n) - one pass through the arrays",spaceComplexity:"O(1) - constant extra space"},{id:5,title:"Hand of Straights",question:"Determine if a hand of cards can be rearranged into groups of consecutive cards.",hint:"Sort the cards and greedily form groups starting with the smallest available card.",oneLiner:"Use a min-heap to form straight hands from smallest cards.",simpleExplanation:"Group cards into stairs like 3-4-5.\nStart with the smallest step.\nIf a step is missing, the group falls!",mnemonics:['"Build stair group" \u2192 for i in range(first, first + groupSize):','"Check step" \u2192 if count[i] == 0: return False','"Pop if done" \u2192 if count[i] == 0 and i == min_heap[0]: heapq.heappop(min_heap)'],code:"from collections import Counter\nimport heapq\n\ndef isNStraightHand(hand, groupSize):\n    if len(hand) % groupSize != 0:\n        return False\n\n    count = Counter(hand)\n    min_heap = list(count.keys())\n    heapq.heapify(min_heap)\n\n    while min_heap:\n        first = min_heap[0]\n        for i in range(first, first + groupSize):\n            if count[i] == 0:\n                return False\n            count[i] -= 1\n            if count[i] == 0:\n                if i != min_heap[0]:\n                    return False\n                heapq.heappop(min_heap)\n    return True",timeComplexity:"O(n log n) - sorting and heap operations",spaceComplexity:"O(n) - for the counter and heap"},{id:6,title:"Merge Triplets to Form Target Triplet",question:"Determine if it's possible to merge triplets to form a target triplet.",hint:"Only consider triplets where each element is less than or equal to the target.",oneLiner:"Pick only triplets \u2264 target and track matched positions.",simpleExplanation:"Each robot part must be same or smaller.\nFind triplets that match one or more parts.\nCollect all 3 to build your robot!",mnemonics:['"Filter valid" \u2192 if all(triplet[i] <= target[i] for i in range(3)):','"Track matches" \u2192 if triplet[i] == target[i]: good.add(i)','"Need all parts" \u2192 return len(good) == 3'],code:"def mergeTriplets(triplets, target):\n    good = set()\n    for triplet in triplets:\n        if all(triplet[i] <= target[i] for i in range(3)):\n            for i in range(3):\n                if triplet[i] == target[i]:\n                    good.add(i)\n    return len(good) == 3",timeComplexity:"O(n) - one pass through the triplets",spaceComplexity:"O(1) - constant extra space"},{id:7,title:"Partition Labels",question:"Partition a string into as many parts as possible so that each letter appears in at most one part.",hint:"Track the last occurrence of each character and use that to determine partition points.",oneLiner:"Use each character's last occurrence to determine cut points.",simpleExplanation:"You want to cut paper without repeating letters.\nWait until the last of all letters in the part.\nThen make a cut!",mnemonics:['"Last seen" \u2192 last = {c: i for i, c in enumerate(S)}','"Cut when done" \u2192 if i == j: result.append(i - anchor + 1); anchor = i + 1','"Extend end" \u2192 j = max(j, last[c])'],code:"def partitionLabels(S):\n    last = {c: i for i, c in enumerate(S)}\n    j = anchor = 0\n    result = []\n    for i, c in enumerate(S):\n        j = max(j, last[c])\n        if i == j:\n            result.append(i - anchor + 1)\n            anchor = i + 1\n    return result",timeComplexity:"O(n) - two passes through the string",spaceComplexity:"O(1) - constant extra space (at most 26 letters)"},{id:8,title:"Valid Parenthesis String",question:"Determine if a string with '(', ')', and '*' characters can form valid parentheses.",hint:"Track the possible range of open parentheses using two variables.",oneLiner:"Track a possible open-parentheses range with '*' as wildcard.",simpleExplanation:"You're stacking cups.\n'*' can be a cup or nothing.\nJust don't let the stack fall!",mnemonics:['"Range tracking" \u2192 low -= 1; high += 1 (for *)','"Clamp to zero" \u2192 if low < 0: low = 0','"Early exit" \u2192 if high < 0: return False'],code:"def checkValidString(s: str) -> bool:\n    low = high = 0  # Range of possible open parentheses count\n\n    for char in s:\n        if char == '(':\n            low += 1\n            high += 1\n        elif char == ')':\n            low -= 1\n            high -= 1\n        else:  # char == '*'\n            low -= 1   # treat '*' as ')'\n            high += 1  # treat '*' as '('\n\n        # Clamp low to 0 since we can't have negative open brackets\n        if high < 0:\n            return False\n        if low < 0:\n            low = 0\n\n    return low == 0",timeComplexity:"O(n) - one pass through the string",spaceComplexity:"O(1) - constant extra space"}],y=[{id:1,title:"Number of Islands",question:"Given a 2D grid map of '1's (land) and '0's (water), count the number of islands.",hint:"Use DFS or BFS to explore connected land cells.",oneLiner:"Use DFS to flood-fill land and count how many times it starts.",simpleExplanation:"See land? Dive in and mark all connected land.\nGo up, down, left, right \u2014 turn it to water.\nCount how many dives you did!",mnemonics:["\"Land found \u2192 dive!\" \u2192 if grid[r][c] == '1': dfs(r, c); count += 1","\"Flood fill\" \u2192 grid[r][c] = '0'",'"Recursive splash" \u2192 dfs(r + 1, c), dfs(r - 1, c), dfs(r, c + 1), dfs(r, c - 1)'],code:"def numIslands(grid):\n    if not grid:\n        return 0\n\n    def dfs(r, c):\n        if r < 0 or r >= len(grid) or c < 0 or c >= len(grid[0]) or grid[r][c] == '0':\n            return\n        grid[r][c] = '0'  # Mark as visited\n        dfs(r + 1, c)\n        dfs(r - 1, c)\n        dfs(r, c + 1)\n        dfs(r, c - 1)\n\n    count = 0\n    for r in range(len(grid)):\n        for c in range(len(grid[0])):\n            if grid[r][c] == '1':\n                dfs(r, c)\n                count += 1\n    return count",timeComplexity:"O(M \xd7 N), where M is the number of rows and N is the number of columns",spaceComplexity:"O(M \xd7 N) in worst case for recursion stack"},{id:2,title:"Max Area of Island",question:"Find the maximum area of an island in a 2D grid.",hint:"Track area while using DFS/BFS to explore islands.",oneLiner:"DFS to count connected land areas and track the max size.",simpleExplanation:"Explore each island like a treasure map.\nCount each land you step on.\nKeep the biggest number!",mnemonics:['"Step on land" \u2192 return 1 + dfs(...) + ...','"Sink it" \u2192 grid[r][c] = 0','"Track best" \u2192 max_area = max(max_area, dfs(r, c))'],code:"def maxAreaOfIsland(grid):\n    if not grid:\n        return 0\n\n    def dfs(r, c):\n        if r < 0 or r >= len(grid) or c < 0 or c >= len(grid[0]) or grid[r][c] == 0:\n            return 0\n        grid[r][c] = 0  # Mark as visited\n        return 1 + dfs(r + 1, c) + dfs(r - 1, c) + dfs(r, c + 1) + dfs(r, c - 1)\n\n    max_area = 0\n    for r in range(len(grid)):\n        for c in range(len(grid[0])):\n            if grid[r][c] == 1:\n                max_area = max(max_area, dfs(r, c))\n    return max_area",timeComplexity:"O(M \xd7 N), where M is rows and N is columns",spaceComplexity:"O(M \xd7 N) in worst case for recursion stack"},{id:3,title:"Clone Graph",question:"Create a deep copy of a connected undirected graph.",hint:"Use a hash map to map original nodes to their clones.",oneLiner:"Use DFS and a hashmap to copy each node and its neighbors.",simpleExplanation:"Copy the node. Then copy its friends.\nDon't copy the same kid twice!\nUse a notebook to remember who you copied.",mnemonics:['"Memoize node" \u2192 old_to_new[node] = copy','"Visit neighbors" \u2192 copy.neighbors.append(dfs(neighbor))','"Return copy" \u2192 return old_to_new[node]'],code:"class Node:\n    def __init__(self, val=0, neighbors=None):\n        self.val = val\n        self.neighbors = neighbors if neighbors is not None else []\n\ndef cloneGraph(node):\n    if not node:\n        return None\n\n    old_to_new = {}\n\n    def dfs(node):\n        if node in old_to_new:\n            return old_to_new[node]\n        copy = Node(node.val)\n        old_to_new[node] = copy\n        for neighbor in node.neighbors:\n            copy.neighbors.append(dfs(neighbor))\n        return copy\n\n    return dfs(node)",timeComplexity:"O(N + M), where N is nodes and M is edges",spaceComplexity:"O(N) for mapping old nodes to new nodes"},{id:4,title:"Walls and Gates",question:"Fill each empty room with the distance to its nearest gate.",hint:"Use multi-source BFS starting from all gates.",oneLiner:"Use BFS from every gate to fill rooms with the shortest distance.",simpleExplanation:"Start walking from every open gate.\nStep by step, add 1 to your count.\nStop if you hit a wall!",mnemonics:['"Start from gates" \u2192 if rooms[r][c] == 0: queue.append((r, c))','"Step update" \u2192 rooms[rr][cc] = rooms[r][c] + 1','"BFS directions" \u2192 for dr, dc in [(1,0), (-1,0), (0,1), (0,-1)]'],code:"from collections import deque\n\ndef wallsAndGates(rooms):\n    if not rooms:\n        return\n\n    rows, cols = len(rooms), len(rooms[0])\n    queue = deque()\n\n    for r in range(rows):\n        for c in range(cols):\n            if rooms[r][c] == 0:\n                queue.append((r, c))\n\n    directions = [(1, 0), (-1, 0), (0, 1), (0, -1)]\n    while queue:\n        r, c = queue.popleft()\n        for dr, dc in directions:\n            rr, cc = r + dr, c + dc\n            if 0 <= rr < rows and 0 <= cc < cols and rooms[rr][cc] == float('inf'):\n                rooms[rr][cc] = rooms[r][c] + 1\n                queue.append((rr, cc))",timeComplexity:"O(M \xd7 N), where M is rows and N is columns",spaceComplexity:"O(M \xd7 N) for the queue in worst case"},{id:5,title:"Rotting Oranges",question:"Determine the minimum time required for all oranges to become rotten.",hint:"Use BFS with a time counter to track each minute of rot spread.",oneLiner:"Use BFS to spread rot from all rotten oranges minute by minute.",simpleExplanation:"Rotten oranges spread the stink.\nEach minute, they infect their neighbors.\nIf any fresh ones are left, return -1!",mnemonics:['"Start with all rotten" \u2192 if grid[r][c] == 2: queue.append((r, c, 0))','"Spread the rot" \u2192 grid[rr][cc] = 2','"Track time" \u2192 minutes = max(minutes, cur_minute)'],code:"from collections import deque\n\ndef orangesRotting(grid):\n    if not grid:\n        return -1\n\n    rows, cols = len(grid), len(grid[0])\n    queue = deque()\n    fresh_oranges = 0\n\n    for r in range(rows):\n        for c in range(cols):\n            if grid[r][c] == 2:\n                queue.append((r, c, 0))\n            elif grid[r][c] == 1:\n                fresh_oranges += 1\n\n    directions = [(1, 0), (-1, 0), (0, 1), (0, -1)]\n    minutes = 0\n\n    while queue:\n        r, c, minutes = queue.popleft()\n        for dr, dc in directions:\n            rr, cc = r + dr, c + dc\n            if 0 <= rr < rows and 0 <= cc < cols and grid[rr][cc] == 1:\n                grid[rr][cc] = 2\n                fresh_oranges -= 1\n                queue.append((rr, cc, minutes + 1))\n\n    return minutes if fresh_oranges == 0 else -1",timeComplexity:"O(M \xd7 N), where M is rows and N is columns",spaceComplexity:"O(M \xd7 N) for the queue in worst case"},{id:6,title:"Pacific Atlantic Water Flow",question:"Find grid coordinates where water can flow to both Pacific and Atlantic oceans.",hint:"Start from ocean edges and work inward to find reachable cells.",oneLiner:"DFS from both ocean edges to find cells that can reach both.",simpleExplanation:"Water flows downhill or flat.\nStart from each ocean and mark the cells.\nReturn where both oceans meet!",mnemonics:['"Visit cell" \u2192 visited.add((r, c))','"DFS only higher/equal" \u2192 if heights[r][c] < prev_height: return','"Intersect both oceans" \u2192 return list(pacific & atlantic)'],code:"def pacificAtlantic(heights):\n    if not heights:\n        return []\n\n    m, n = len(heights), len(heights[0])\n    pacific = set()\n    atlantic = set()\n\n    def dfs(r, c, visited, prev_height):\n        if (\n            (r, c) in visited or\n            r < 0 or c < 0 or r >= m or c >= n or\n            heights[r][c] < prev_height\n        ):\n            return\n        visited.add((r, c))\n        for dr, dc in [(1, 0), (-1, 0), (0, 1), (0, -1)]:\n            dfs(r + dr, c + dc, visited, heights[r][c])\n\n    for i in range(m):\n        dfs(i, 0, pacific, heights[i][0])\n        dfs(i, n - 1, atlantic, heights[i][n - 1])\n    for j in range(n):\n        dfs(0, j, pacific, heights[0][j])\n        dfs(m - 1, j, atlantic, heights[m - 1][j])\n\n    return list(pacific & atlantic)",timeComplexity:"O(m \xd7 n), where m is rows and n is columns",spaceComplexity:"O(m \xd7 n) for the sets and recursion stack"},{id:7,title:"Surrounded Regions",question:"Capture all regions surrounded by X in a board.",hint:"Mark border-connected O's first, then flip the rest.",oneLiner:"Use DFS to mark safe 'O's on the border, then flip the rest.",simpleExplanation:"Mark the border O's as safe.\nFlip all trapped O's to X.\nFlip the safe ones back.",mnemonics:["\"Safe marker\" \u2192 board[r][c] = '#'","\"Flip trapped\" \u2192 if board[i][j] == 'O': board[i][j] = 'X'","\"Restore safe\" \u2192 if board[i][j] == '#': board[i][j] = 'O'"],code:"def solve(board):\n    if not board or not board[0]:\n        return\n\n    m, n = len(board), len(board[0])\n\n    def dfs(r, c):\n        if r < 0 or c < 0 or r >= m or c >= n or board[r][c] != 'O':\n            return\n        board[r][c] = '#'\n        for dr, dc in [(1, 0), (-1, 0), (0, 1), (0, -1)]:\n            dfs(r + dr, c + dc)\n\n    for i in range(m):\n        dfs(i, 0)\n        dfs(i, n - 1)\n    for j in range(n):\n        dfs(0, j)\n        dfs(m - 1, j)\n\n    for i in range(m):\n        for j in range(n):\n            if board[i][j] == 'O':\n                board[i][j] = 'X'\n            elif board[i][j] == '#':\n                board[i][j] = 'O'",timeComplexity:"O(m \xd7 n), each cell processed at most twice",spaceComplexity:"O(m \xd7 n) for the recursion stack in worst case"},{id:8,title:"Course Schedule",question:"Determine if it's possible to finish all courses given prerequisites.",hint:"Use topological sort to check if there's any cycle in the graph.",oneLiner:"Use topological sort to check if all courses can be completed.",simpleExplanation:"Take courses with no prerequisites.\nRemove them from the graph.\nIf all courses can be taken, there's no cycle!",mnemonics:['"Count pre-reqs" \u2192 indegree[course] += 1','"Start with zero prereqs" \u2192 if indegree[c] == 0: queue.append(c)','"All courses?" \u2192 return count == numCourses'],code:"from collections import defaultdict, deque\n\ndef canFinish(numCourses, prerequisites):\n    # Build adjacency list and indegree count\n    graph = defaultdict(list)\n    indegree = [0] * numCourses\n    \n    for course, prereq in prerequisites:\n        graph[prereq].append(course)\n        indegree[course] += 1\n    \n    # Start with courses that have no prerequisites\n    queue = deque([c for c in range(numCourses) if indegree[c] == 0])\n    count = 0\n    \n    while queue:\n        curr = queue.popleft()\n        count += 1\n        \n        for next_course in graph[curr]:\n            indegree[next_course] -= 1\n            if indegree[next_course] == 0:\n                queue.append(next_course)\n    \n    return count == numCourses",timeComplexity:"O(V + E), where V is vertices and E is edges",spaceComplexity:"O(V + E) for the adjacency list and queue"}],b=[{id:1,title:"Network Delay Time",question:"Given a network of n nodes, labeled from 1 to n, and times representing travel times as directed edges, find the minimum time for all nodes to receive a signal starting from a given node k.",hint:"Use Dijkstra's algorithm to find shortest paths from the source node.",oneLiner:"Use Dijkstra's algorithm to find shortest time to all nodes.",simpleExplanation:"We send a signal from one point.\nWe figure out how fast it can reach every other point.\nThe longest of those times is our answer.",mnemonics:['"Build graph" \u2192 graph[u].append((v, w))','"Min-heap Dijkstra" \u2192 heappop(heap) gives node with smallest time','"Update time" \u2192 if new_time < dist[v]: update and push'],code:"class Solution:\ndef networkDelayTime(self, times: List[List[int]], n: int, k: int) -> int:\n    edges = collections.defaultdict(list)\n    for u, v, w in times:\n        edges[u].append((v, w))\n\n    minHeap = [(0, k)]\n    visit = set()\n    t = 0\n    while minHeap:\n        w1, n1 = heapq.heappop(minHeap)\n        if n1 in visit:\n            continue\n        visit.add(n1)\n        t = w1\n\n        for n2, w2 in edges[n1]:\n            if n2 not in visit:\n                heapq.heappush(minHeap, (w1 + w2, n2))\n    return t if len(visit) == n else -1",timeComplexity:"O(E log V) - where E is edges and V is vertices",spaceComplexity:"O(V) - to store distances to all vertices"},{id:2,title:"Reconstruct Itinerary",question:"Given a list of airline tickets, reconstruct the itinerary in order starting from 'JFK'. If there are multiple valid itineraries, return the lexicographically smallest one.",hint:"Use a greedy DFS approach to pick the lexicographically smallest destination at each step.",oneLiner:"Use DFS + min-heap to build lexicographically smallest itinerary.",simpleExplanation:"We treat each airport as a point.\nWe travel using the smallest possible word (alphabetically).\nWhen all tickets are used, that's our path.",mnemonics:['"Build min-heap graph" \u2192 graph[frm].append(to); heapify','"DFS visit" \u2192 while graph[airport]: dfs(next_dest)','"Build itinerary" \u2192 res.appendleft(airport)'],code:'class Solution:\ndef findItinerary(self, tickets: List[List[str]]) -> List[str]:\n    adj = defaultdict(list)\n    for src, dst in sorted(tickets)[::-1]:\n        adj[src].append(dst)\n        \n    stack = ["JFK"]\n    res = []\n    \n    while stack:\n        curr = stack[-1]\n        if not adj[curr]:\n            res.append(stack.pop())\n        else:\n            stack.append(adj[curr].pop())\n            \n    return res[::-1]',timeComplexity:"O(E log E) - where E is the number of edges/tickets",spaceComplexity:"O(V + E) - to store the graph and result"},{id:3,title:"Min Cost to Connect All Points",question:"Given an array of points on a 2D plane, return the minimum cost to connect all points where the cost between two points is their Manhattan distance.",hint:"Use a minimum spanning tree algorithm like Prim's or Kruskal's.",oneLiner:"Use Prim's algorithm (MST) with min-heap for Manhattan distances.",simpleExplanation:"We connect all dots with the least total cost.\nWe always choose the shortest connection that's not yet used.\nWhen all points are connected, we stop.",mnemonics:['"Heap init" \u2192 heap = [(0, 0)] (cost, node)','"Track visited" \u2192 if node not in visited: add to cost','"Push neighbors" \u2192 for every next_point: heappush with distance'],code:"class Solution:\ndef minCostConnectPoints(self, points: List[List[int]]) -> int:\n    n, node = len(points), 0\n    dist = [100000000] * n\n    visit = [False] * n\n    edges, res = 0, 0\n\n    while edges < n - 1:\n        visit[node] = True\n        nextNode = -1\n        for i in range(n):\n            if visit[i]:\n                continue\n            curDist = (abs(points[i][0] - points[node][0]) + \n                       abs(points[i][1] - points[node][1]))\n            dist[i] = min(dist[i], curDist)\n            if nextNode == -1 or dist[i] < dist[nextNode]:\n                nextNode = i\n                \n        res += dist[nextNode]\n        node = nextNode\n        edges += 1\n\n    return res",timeComplexity:"O(V\xb2) - where V is the number of points",spaceComplexity:"O(V) - to store distances and visited array"},{id:4,title:"Swim in Rising Water",question:"Find the least time until you can reach the bottom right square in a grid where the depth of water at time t is t.",hint:"Use Dijkstra's algorithm or binary search to find the minimum time required.",oneLiner:"Use Dijkstra-style BFS to always swim in the minimum rising level.",simpleExplanation:"We treat the grid like a pool filling up.\nWe can only move to spots that are less than or equal to the current water level.\nWe find the smallest max value along the path to the bottom.",mnemonics:['"Heap by elevation" \u2192 heappush(heap, (elevation, r, c))','"Track max" \u2192 max_time = max(max_time, grid[r][c])','"Stop at end" \u2192 if r == n-1 and c == n-1: return max_time'],code:"class Solution:\ndef swimInWater(self, grid: List[List[int]]) -> int:\n    N = len(grid)\n    visit = set()\n    minH = [[grid[0][0], 0, 0]]  # (time/max-height, r, c)\n    directions = [[0, 1], [0, -1], [1, 0], [-1, 0]]\n\n    visit.add((0, 0))\n    while minH:\n        t, r, c = heapq.heappop(minH)\n        if r == N - 1 and c == N - 1:\n            return t\n        for dr, dc in directions:\n            neiR, neiC = r + dr, c + dc\n            if (neiR < 0 or neiC < 0 or \n                neiR == N or neiC == N or\n                (neiR, neiC) in visit\n            ):\n                continue\n            visit.add((neiR, neiC))\n            heapq.heappush(minH, [max(t, grid[neiR][neiC]), neiR, neiC])",timeComplexity:"O(N\xb2 log N) - where N is the grid size",spaceComplexity:"O(N\xb2) - for the visited set and heap"},{id:5,title:"Alien Dictionary",question:"Given a sorted dictionary of alien words, derive the order of letters in the alien language.",hint:"Construct a graph where each edge (a,b) means 'a comes before b', then perform topological sort.",oneLiner:"Build graph from character order and use topological sort (BFS).",simpleExplanation:"We look at word pairs to learn which letter comes first.\nWe build a graph of rules from those pairs.\nThen we sort the letters based on what comes before what.",mnemonics:['"Build graph" \u2192 if a != b: graph[a].add(b); indegree[b] += 1','"Start with 0 indegree" \u2192 queue = letters with indegree 0','"Topo sort" \u2192 while queue: pop letter, reduce indegrees'],code:'function alienOrder(words) {\n  const adj = {};\n  const indegree = {};\n\n  for (const word of words) {\n    for (const char of word) {\n      adj[char] = new Set();\n      indegree[char] = 0;\n    }\n  }\n\n  for (let i = 0; i < words.length - 1; i++) {\n    const [w1, w2] = [words[i], words[i + 1]];\n    const minLen = Math.min(w1.length, w2.length);\n    if (w1.length > w2.length && w1.slice(0, minLen) === w2) return "";\n\n    for (let j = 0; j < minLen; j++) {\n      if (w1[j] !== w2[j]) {\n        if (!adj[w1[j]].has(w2[j])) {\n          adj[w1[j]].add(w2[j]);\n          indegree[w2[j]]++;\n        }\n        break;\n      }\n    }\n  }\n\n  const queue = [];\n  for (const char in indegree) {\n    if (indegree[char] === 0) queue.push(char);\n  }\n\n  const res = [];\n  while (queue.length) {\n    const char = queue.shift();\n    res.push(char);\n    for (const neighbor of adj[char]) {\n      indegree[neighbor]--;\n      if (indegree[neighbor] === 0) queue.push(neighbor);\n    }\n  }\n\n  return res.length === Object.keys(indegree).length ? res.join("") : "";\n}',timeComplexity:"O(C) - where C is the total length of all words",spaceComplexity:"O(1) - at most 26 letters in alphabet"},{id:6,title:"Cheapest Flights Within K Stops",question:"Find the cheapest price from source to destination with at most k stops.",hint:"Use Bellman-Ford or BFS with a queue to track the number of stops.",oneLiner:"Use modified BFS (Bellman-Ford style) with (cost, node, stops).",simpleExplanation:"We look for the cheapest flight path with limited stops.\nWe explore each city step by step.\nWe avoid paths that are too long or expensive.",mnemonics:['"Queue with stops" \u2192 queue = [(0, src, 0)]','"If stops \u2264 K" \u2192 push (cost + price, next, stops + 1)','"Track cheapest" \u2192 if city == dst: return cost'],code:"function findCheapestPrice(n, flights, src, dst, k) {\n  const prices = new Array(n).fill(Infinity);\n  prices[src] = 0;\n  \n  const adj = Array.from({ length: n }, () => []);\n  for (const [u, v, cost] of flights) {\n    adj[u].push([v, cost]);\n  }\n\n  const queue = [[0, src, 0]];\n\n  while (queue.length) {\n    const [cost, node, stops] = queue.shift();\n    if (stops > k) continue;\n\n    for (const [nei, price] of adj[node]) {\n      const nextCost = cost + price;\n      if (nextCost < prices[nei]) {\n        prices[nei] = nextCost;\n        queue.push([nextCost, nei, stops + 1]);\n      }\n    }\n  }\n\n  return prices[dst] === Infinity ? -1 : prices[dst];\n}",timeComplexity:"O(V + E*K) - where V is vertices, E is edges",spaceComplexity:"O(V) - to store the prices array"}],v=[{id:1,title:"Climbing Stairs",question:"Given n steps, you can climb 1 or 2 steps at a time. Find the number of distinct ways to reach the top.",hint:"Think about how many ways you can reach each step from previous steps.",oneLiner:"Use Fibonacci-style bottom-up DP to count steps.",simpleExplanation:"You can climb 1 or 2 stairs at a time.\nCount how many ways to get to each stair.\nIt's like adding ways from two previous steps.",mnemonics:['"Fibonacci step" \u2192 first, second = second, first + second','"Start base" \u2192 first, second = 1, 2','"Return top" \u2192 return second'],code:"def climbStairs(n):\n    if n <= 2:\n        return n\n    first, second = 1, 2\n    for _ in range(3, n + 1):\n        first, second = second, first + second\n    return second",timeComplexity:"O(n) - one pass through the steps",spaceComplexity:"O(1) - constant extra space"},{id:2,title:"Min Cost Climbing Stairs",question:"Given an array cost where cost[i] is the cost of the i-th step, find the minimum cost to reach the top.",hint:"For each step, decide whether to jump from 1 or 2 steps back based on minimum cost.",oneLiner:"Track min cost to reach each stair by choosing the cheaper path.",simpleExplanation:"Every stair has a price.\nYou can jump one or two ahead.\nAlways pay the cheaper way!",mnemonics:['"Take cheaper path" \u2192 first, second = second, cost[i] + min(first, second)','"Start base" \u2192 first, second = cost[0], cost[1]','"Choose last" \u2192 return min(first, second)'],code:"def minCostClimbingStairs(cost):\n    n = len(cost)\n    first, second = cost[0], cost[1]\n    for i in range(2, n):\n        first, second = second, cost[i] + min(first, second)\n    return min(first, second)",timeComplexity:"O(n) - one pass through the cost array",spaceComplexity:"O(1) - constant extra space"},{id:3,title:"House Robber",question:"Given an array of house values, find the maximum amount you can rob without robbing adjacent houses.",hint:"For each house, decide whether to rob it (and skip the previous) or skip it.",oneLiner:"Use DP to choose max between robbing current or skipping it.",simpleExplanation:"Can't rob two houses in a row.\nEach time, choose: rob this or skip it.\nKeep track of best steal.",mnemonics:['"Rob or skip" \u2192 first, second = second, max(second, first + num)','"Track rolling max" \u2192 first, second = 0, 0','"Final loot" \u2192 return second'],code:"def rob(nums):\n    if not nums:\n        return 0\n    if len(nums) == 1:\n        return nums[0]\n    first, second = 0, 0\n    for num in nums:\n        first, second = second, max(second, first + num)\n    return second",timeComplexity:"O(n) - one pass through nums array",spaceComplexity:"O(1) - constant extra space"},{id:4,title:"House Robber II",question:"Similar to House Robber, but houses are in a circle. Find the maximum amount you can rob.",hint:"Break the circle by solving the problem twice, once skipping the first house and once skipping the last.",oneLiner:"Run house robber on both circle-split paths and return the best.",simpleExplanation:"First and last houses are neighbors.\nSo rob from 0 to n-2 or from 1 to n-1.\nTake the better of the two!",mnemonics:['"Rob linearly" \u2192 rob_linear(nums[:-1]), rob_linear(nums[1:])','"Rolling max again" \u2192 first, second = second, max(second, first + num)','"Return max plan" \u2192 return max(...)'],code:"def rob(nums):\n    def rob_linear(houses):\n        first, second = 0, 0\n        for num in houses:\n            first, second = second, max(second, first + num)\n        return second\n\n    if len(nums) == 1:\n        return nums[0]\n    return max(rob_linear(nums[:-1]), rob_linear(nums[1:]))",timeComplexity:"O(n) - two linear passes",spaceComplexity:"O(1) - constant extra space"},{id:5,title:"Longest Palindromic Substring",question:"Find the longest palindromic substring in a given string.",hint:"Expand around centers to find palindromes, considering both odd and even length cases.",oneLiner:"Expand around each center to find longest mirror substring.",simpleExplanation:"A palindrome reads the same both ways.\nTry expanding around every letter.\nKeep the longest one you find!",mnemonics:['"Expand center" \u2192 while s[left] == s[right]: left--, right++','"Two tries" \u2192 expand(i, i), expand(i, i+1)','"Track longest" \u2192 if len(temp) > len(longest): longest = temp'],code:'def longestPalindrome(s):\n    def expand_around_center(left, right):\n        while left >= 0 and right < len(s) and s[left] == s[right]:\n            left -= 1\n            right += 1\n        return s[left + 1:right]\n\n    longest = ""\n    for i in range(len(s)):\n        # Odd length palindrome\n        temp = expand_around_center(i, i)\n        if len(temp) > len(longest):\n            longest = temp\n        # Even length palindrome\n        temp = expand_around_center(i, i + 1)\n        if len(temp) > len(longest):\n            longest = temp\n    return longest',timeComplexity:"O(n\xb2) - expand up to n times for each center",spaceComplexity:"O(1) - constant extra space (not counting result)"},{id:6,title:"Decode Ways",question:"Find the number of ways to decode a string of digits, where 'A'=1, 'B'=2, ..., 'Z'=26.",hint:"Use DP to track the number of ways to decode at each position.",oneLiner:"Use DP to count valid decodings considering one or two digits at a time.",simpleExplanation:"Start from the end of the string.\nAt each step, try one digit or two digits.\nAdd up the possibilities!",mnemonics:['"Try one digit" \u2192 if valid(s[i]): dp[i] += dp[i+1]','"Try two digits" \u2192 if valid(s[i:i+2]): dp[i] += dp[i+2]','"Base case" \u2192 dp[n] = 1 (one way to decode empty string)'],code:"def numDecodings(s):\n    if not s or s[0] == '0':\n        return 0\n        \n    n = len(s)\n    dp = [0] * (n + 1)\n    dp[n] = 1  # Empty string has one way to decode\n    dp[n-1] = 1 if s[n-1] != '0' else 0\n    \n    for i in range(n-2, -1, -1):\n        if s[i] != '0':  # Single digit\n            dp[i] += dp[i+1]\n        \n        # Two digits\n        if s[i] == '1' or (s[i] == '2' and s[i+1] <= '6'):\n            dp[i] += dp[i+2]\n    \n    return dp[0]",timeComplexity:"O(n) - one pass through the string",spaceComplexity:"O(n) - for the DP array (can be optimized to O(1))"},{id:7,title:"Coin Change",question:"Find the fewest number of coins needed to make up a given amount.",hint:"Use bottom-up DP to compute the minimum coins needed for each subamount.",oneLiner:"Use DP to build up the minimum coins needed for each amount.",simpleExplanation:"For each smaller amount, we know the best way.\nTo get a larger amount, try each coin.\nPick the solution that uses fewest coins!",mnemonics:['"Try each coin" \u2192 dp[i] = min(dp[i], dp[i-coin] + 1)','"Initialize max" \u2192 dp = [amount+1] * (amount+1)','"Check impossible" \u2192 return -1 if dp[amount] > amount else dp[amount]'],code:"def coinChange(coins, amount):\n    dp = [float('inf')] * (amount + 1)\n    dp[0] = 0\n    \n    for coin in coins:\n        for i in range(coin, amount + 1):\n            dp[i] = min(dp[i], dp[i - coin] + 1)\n    \n    return dp[amount] if dp[amount] != float('inf') else -1",timeComplexity:"O(amount * n) - where n is the number of coins",spaceComplexity:"O(amount) - for the DP array"},{id:8,title:"Maximum Product Subarray",question:"Find the contiguous subarray with the largest product.",hint:"Track both maximum and minimum products as you go (since negatives can flip the result).",oneLiner:"Track both max and min product because negatives can flip the sign.",simpleExplanation:"We need to track both max and min.\nA big negative \xd7 negative = big positive.\nAt each step, the new num can flip everything!",mnemonics:['"Track both" \u2192 curr_max, curr_min = max/min(num, num*curr_max, num*curr_min)','"Max can flip" \u2192 if num is negative, swap curr_max and curr_min','"Track result" \u2192 result = max(result, curr_max)'],code:"def maxProduct(nums):\n    if not nums:\n        return 0\n    \n    result = curr_max = curr_min = nums[0]\n    \n    for num in nums[1:]:\n        values = (num, num * curr_max, num * curr_min)\n        curr_max, curr_min = max(values), min(values)\n        result = max(result, curr_max)\n    \n    return result",timeComplexity:"O(n) - one pass through the array",spaceComplexity:"O(1) - constant extra space"},{id:9,title:"Word Break",question:"Determine if a string can be segmented into space-separated words from a dictionary.",hint:"Use DP to track which substrings can be formed with dictionary words.",oneLiner:"Use DP to mark reachable positions in the string via dictionary words.",simpleExplanation:"Start at the beginning of the string.\nFrom each position we can reach, try all dictionary words.\nMark new positions we can reach with those words.",mnemonics:['"Mark reachable" \u2192 dp[i+len(word)] = True','"Check prefix" \u2192 if dp[i] and s[i:i+len(word)] == word:','"Return end" \u2192 return dp[len(s)]'],code:"def wordBreak(s, wordDict):\n    n = len(s)\n    dp = [False] * (n + 1)\n    dp[0] = True  # Empty string is always formable\n    \n    for i in range(n):\n        if not dp[i]:\n            continue\n        for word in wordDict:\n            if s[i:i+len(word)] == word:\n                dp[i + len(word)] = True\n                if dp[n]:  # Early termination\n                    return True\n    \n    return dp[n]",timeComplexity:"O(n * m * k) - where n is string length, m is dict size, k is avg word length",spaceComplexity:"O(n) - for the DP array"},{id:10,title:"Palindromic Substrings",question:"Count the number of palindromic substrings in a given string.",hint:"Expand around centers to find all palindromes.",oneLiner:"Expand around each possible center (n centers for odd, n-1 for even).",simpleExplanation:"Check every position as a center.\nExpand outward as long as characters match.\nCount both odd and even-length palindromes!",mnemonics:['"Expand center" \u2192 while s[l] == s[r]: count += 1','"Odd and even" \u2192 countSubstrings(i, i), countSubstrings(i, i+1)','"Break when mismatch" \u2192 if l < 0 or r >= len(s) or s[l] != s[r]: break'],code:"def countSubstrings(s):\n    count = 0\n    n = len(s)\n    \n    def expand_around_center(left, right):\n        nonlocal count\n        while left >= 0 and right < n and s[left] == s[right]:\n            count += 1\n            left -= 1\n            right += 1\n    \n    for i in range(n):\n        # Odd length palindromes\n        expand_around_center(i, i)\n        # Even length palindromes\n        expand_around_center(i, i + 1)\n    \n    return count",timeComplexity:"O(n\xb2) - expand up to n times for each center",spaceComplexity:"O(1) - constant extra space"}],w=[{id:1,title:"Unique Paths",question:"Find the number of unique paths from top-left to bottom-right of an m\xd7n grid, moving only right or down.",hint:"Think about how many ways you can reach each cell in the grid.",oneLiner:"Build bottom-up by storing path counts from the bottom row to the top.",simpleExplanation:"You can move right or down in a grid.\nEach cell holds total paths from there.\nStart at the bottom and fill the top!",mnemonics:['"Start with rightmost path as 1s" \u2192 row = [1] * n','"Move bottom-up" \u2192 newRow[j] = newRow[j+1] + row[j]','"Top-left holds the answer" \u2192 return row[0]'],code:"def uniquePaths(self, m: int, n: int) -> int:\n    row = [1] * n\n\n    for i in range(m - 1):\n        newRow = [1] * n\n        for j in range(n - 2, -1, -1):\n            newRow[j] = newRow[j + 1] + row[j]\n        row = newRow\n    return row[0]",timeComplexity:"O(m\xd7n) - we process each cell once",spaceComplexity:"O(n) - we only store two rows at a time"},{id:2,title:"Longest Common Subsequence",question:"Find the length of the longest subsequence common to two strings.",hint:"Use a 2D table to track matching characters between the strings.",oneLiner:"Compare characters bottom-up and store best matches.",simpleExplanation:"Look for common letters in two words.\nIf letters match, grow your chain.\nRemember best paths from the future!",mnemonics:['"Match adds 1" \u2192 curr[j] = 1 + prev[j + 1]','"Else take max" \u2192 curr[j] = max(curr[j + 1], prev[j])','"Swap rows" \u2192 prev, curr = curr, prev'],code:"def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n    if len(text1) < len(text2):\n        text1, text2 = text2, text1\n        \n    prev = [0] * (len(text2) + 1)\n    curr = [0] * (len(text2) + 1)\n\n    for i in range(len(text1) - 1, -1, -1):\n        for j in range(len(text2) - 1, -1, -1):\n            if text1[i] == text2[j]:\n                curr[j] = 1 + prev[j + 1]\n            else:\n                curr[j] = max(curr[j + 1], prev[j])\n        prev, curr = curr, prev\n\n    return prev[0]",timeComplexity:"O(m\xd7n) - where m,n are the lengths of the strings",spaceComplexity:"O(min(m,n)) - we only store two rows"},{id:3,title:"Best Time to Buy/Sell Stock III",question:"Find the maximum profit from at most two transactions (buy one and sell one share).",hint:"Track the best profit for different states: after first buy, first sell, second buy, and second sell.",oneLiner:"Track two transactions using rolling DP updates from right to left.",simpleExplanation:"You can buy and sell twice.\nTrack your best profits in reverse.\nKeep updating what to buy/sell!",mnemonics:['"Buy max profit" \u2192 dp_buy = max(dp1_sell - price, dp1_buy)','"Sell max profit" \u2192 dp_sell = max(dp2_buy + price, dp1_sell)','"Shift state" \u2192 dp2_buy = dp1_buy'],code:"def maxProfit(self, prices: List[int]) -> int:\n    n = len(prices)\n    dp1_buy, dp1_sell = 0, 0  \n    dp2_buy = 0\n\n    for i in range(n - 1, -1, -1):\n        dp_buy = max(dp1_sell - prices[i], dp1_buy)\n        dp_sell = max(dp2_buy + prices[i], dp1_sell)\n        dp2_buy = dp1_buy\n        dp1_buy, dp1_sell = dp_buy, dp_sell\n\n    return dp1_buy",timeComplexity:"O(n) - one pass through the prices array",spaceComplexity:"O(1) - using constant extra space"},{id:4,title:"Coin Change II",question:"Find the number of combinations that make up an amount using an array of coins.",hint:"Use a bottom-up approach, considering each coin one at a time.",oneLiner:"Use DP to count all combinations to reach an amount.",simpleExplanation:"You can use each coin as many times.\nTry every way to make the target.\nCount how many combos reach it!",mnemonics:['"Init base case" \u2192 dp[0] = 1','"Use each coin" \u2192 nextDP[a] += nextDP[a - coin]','"Swap arrays" \u2192 dp = nextDP'],code:"def change(self, amount: int, coins: List[int]) -> int:\n    dp = [0] * (amount + 1)\n    dp[0] = 1\n    for i in range(len(coins) - 1, -1, -1):\n        nextDP = [0] * (amount + 1)\n        nextDP[0] = 1\n\n        for a in range(1, amount + 1):\n            nextDP[a] = dp[a]\n            if a - coins[i] >= 0:\n                nextDP[a] += nextDP[a - coins[i]]\n        dp = nextDP\n    return dp[amount]",timeComplexity:"O(amount \xd7 n) - where n is the number of coins",spaceComplexity:"O(amount) - for the DP arrays"},{id:5,title:"Target Sum",question:"Find ways to assign + and - to each number in an array to reach a target sum.",hint:"Instead of using a 2D array, use maps to track all possible sums at each step.",oneLiner:"DP maps every possible sum from \xb1 choices of nums.",simpleExplanation:"Each number can be + or \u2013.\nTry both for every total.\nCount all paths to your goal!",mnemonics:['"Try both signs" \u2192 next_dp[total \xb1 num] += count','"Loop through totals" \u2192 for total, count in dp.items():','"Final result" \u2192 return dp[target]'],code:"def findTargetSumWays(self, nums: List[int], target: int) -> int:\n    dp = defaultdict(int)\n    dp[0] = 1\n\n    for num in nums:\n        next_dp = defaultdict(int)\n        for total, count in dp.items():\n            next_dp[total + num] += count\n            next_dp[total - num] += count\n        dp = next_dp\n        \n    return dp[target]",timeComplexity:"O(n\xd7sum) - where sum is the sum of all numbers",spaceComplexity:"O(sum) - for the dictionary"},{id:6,title:"Interleaving String",question:"Determine if s3 is an interleaving of s1 and s2 (preserving order of characters).",hint:"Use DP to track whether we can form s3 up to a certain point using s1 and s2.",oneLiner:"Use 1D DP to check if s3 can be formed by interleaving s1 and s2.",simpleExplanation:"Mix two strings to make the third.\nCheck every possible merge.\nDon't lose track of match order!",mnemonics:['"Check char match" \u2192 if s1[i] == s3[i+j] and dp[j]','"Also try s2" \u2192 if s2[j] == s3[i+j] and nextDp','"Update DP" \u2192 dp[j] = res'],code:"def isInterleave(self, s1: str, s2: str, s3: str) -> bool:\n    m, n = len(s1), len(s2)\n    if m + n != len(s3):\n        return False\n    if n < m:\n        s1, s2 = s2, s1\n        m, n = n, m\n    \n    dp = [False for _ in range(n + 1)]\n    dp[n] = True\n    for i in range(m, -1, -1):\n        nextDp = True\n        for j in range(n - 1, -1, -1):\n            res = False\n            if i < m and s1[i] == s3[i + j] and dp[j]:\n                res = True\n            if j < n and s2[j] == s3[i + j] and nextDp:\n                res = True\n            dp[j] = res\n            nextDp = dp[j]\n    return dp[0]",timeComplexity:"O(m\xd7n) - where m,n are the lengths of s1 and s2",spaceComplexity:"O(min(m,n)) - for the DP array"},{id:7,title:"Longest Increasing Path in Matrix",question:"Find the length of the longest increasing path in a matrix.",hint:"Use memoization to avoid recalculating the same cell multiple times.",oneLiner:"DFS + memoization to get the longest increasing path from each cell.",simpleExplanation:"Climb from one number to bigger ones.\nRemember best steps from each point.\nReturn the longest trail!",mnemonics:['"Cache results" \u2192 if (r, c) in dp: return dp[(r, c)]','"Try all 4 dirs" \u2192 dfs(r \xb1 1, c), dfs(r, c \xb1 1)','"Max of all paths" \u2192 return max(dp.values())'],code:"def longestIncreasingPath(self, matrix: List[List[int]]) -> int:\n    ROWS, COLS = len(matrix), len(matrix[0])\n    dp = {}  # (r, c) -> LIP\n\n    def dfs(r, c, prevVal):\n        if (r < 0 or r == ROWS or c < 0 or \n            c == COLS or matrix[r][c] <= prevVal\n        ):\n            return 0\n        if (r, c) in dp:\n            return dp[(r, c)]\n\n        res = 1\n        res = max(res, 1 + dfs(r + 1, c, matrix[r][c]))\n        res = max(res, 1 + dfs(r - 1, c, matrix[r][c]))\n        res = max(res, 1 + dfs(r, c + 1, matrix[r][c]))\n        res = max(res, 1 + dfs(r, c - 1, matrix[r][c]))\n        dp[(r, c)] = res\n        return res\n\n    for r in range(ROWS):\n        for c in range(COLS):\n            dfs(r, c, -1)\n    return max(dp.values())",timeComplexity:"O(m\xd7n) - each cell is processed once",spaceComplexity:"O(m\xd7n) - for the cache"},{id:8,title:"Distinct Subsequences",question:"Count the number of distinct subsequences of s that equal t.",hint:"Use DP to track the number of ways to form t[0...j] using s[0...i].",oneLiner:"Use DP to count all ways s can form t as a subsequence.",simpleExplanation:"You can skip letters in s to form t.\nEvery match gives a new way.\nAdd the number of paths together!",mnemonics:['"Base case" \u2192 dp[n] = 1','"Match char" \u2192 if s[i] == t[j]: res += prev','"Update dp" \u2192 dp[j] = res'],code:"def numDistinct(self, s: str, t: str) -> int:\n    m, n = len(s), len(t)\n    dp = [0] * (n + 1)\n\n    dp[n] = 1\n    for i in range(m - 1, -1, -1):\n        prev = 1\n        for j in range(n - 1, -1, -1):\n            res = dp[j]\n            if s[i] == t[j]:\n                res += prev\n\n            prev = dp[j]\n            dp[j] = res \n            \n    return dp[0]",timeComplexity:"O(m\xd7n) - where m,n are the lengths of s and t",spaceComplexity:"O(n) - for the DP array"},{id:9,title:"Edit Distance",question:"Find the minimum number of operations to convert one string to another.",hint:"Use DP to track the minimum operations needed for each prefix of both strings.",oneLiner:"Bottom-up DP tracks minimum ops to convert one string to another.",simpleExplanation:"To match two words, you can insert, delete, or replace.\nTake the fewest steps possible.\nTry from the end back to the start.",mnemonics:['"Match? Skip" \u2192 if word1[i] == word2[j]: dp[j] = nextDp','"Else try all" \u2192 dp[j] = 1 + min(dp[j], dp[j + 1], nextDp)','"Track next" \u2192 nextDp = temp'],code:"def minDistance(self, word1: str, word2: str) -> int:\n    m, n = len(word1), len(word2)\n    if m < n:\n        m, n = n, m\n        word1, word2 = word2, word1\n    \n    dp = [n - i for i in range(n + 1)]\n\n    for i in range(m - 1, -1, -1):\n        nextDp = dp[n]\n        dp[n] = m - i\n        for j in range(n - 1, -1, -1):\n            temp = dp[j]\n            if word1[i] == word2[j]:\n                dp[j] = nextDp\n            else:\n                dp[j] = 1 + min(dp[j], dp[j + 1], nextDp)\n            nextDp = temp\n    return dp[0]",timeComplexity:"O(m\xd7n) - where m,n are the lengths of the strings",spaceComplexity:"O(min(m,n)) - for the DP array"},{id:10,title:"Burst Balloons",question:"Find the maximum coins you can collect by bursting balloons.",hint:"Use DP to consider the last balloon to burst in each range.",oneLiner:"Use interval DP to track max coins from bursting every balloon last in range.",simpleExplanation:"Pop balloons for coins!\nTry each as the last in range.\nStore the best coins for each section.",mnemonics:['"Add padding" \u2192 new_nums = [1] + nums + [1]','"Burst last in (l,r)" \u2192 coins = L * i * R + dp[l][i-1] + dp[i+1][r]','"Try all i" \u2192 for i in range(l, r + 1):'],code:"def maxCoins(self, nums):\n    n = len(nums)\n    new_nums = [1] + nums + [1]\n\n    dp = [[0] * (n + 2) for _ in range(n + 2)]\n    for l in range(n, 0, -1):\n        for r in range(l, n + 1):\n            for i in range(l, r + 1):\n                coins = new_nums[l - 1] * new_nums[i] * new_nums[r + 1]\n                coins += dp[l][i - 1] + dp[i + 1][r]\n                dp[l][r] = max(dp[l][r], coins)\n\n    return dp[1][n]",timeComplexity:"O(n\xb3) - three nested loops",spaceComplexity:"O(n\xb2) - for the 2D DP array"},{id:11,title:"Regular Expression Matching",question:"Implement regular expression matching with support for '.' and '*'.",hint:"Use DP to track whether subpatterns match substrings.",oneLiner:"Match s and p with backtracking and support for . and *.",simpleExplanation:"Match characters step-by-step.\nIf * shows up, skip or use it.\nUse memory to speed up match!",mnemonics:["\"Check match\" \u2192 s[i] == p[j] or p[j] == '.'","\"Handle '*'\" \u2192 res = dp[j + 2] or (match and dp[j])",'"Update DP" \u2192 dp[j], dp1 = res, dp[j]'],code:'def isMatch(self, s: str, p: str) -> bool:\n    dp = [False] * (len(p) + 1)\n    dp[len(p)] = True\n    \n    for i in range(len(s), -1, -1):\n        dp1 = dp[len(p)]\n        dp[len(p)] = (i == len(s))\n        \n        for j in range(len(p) - 1, -1, -1):\n            match = i < len(s) and (s[i] == p[j] or p[j] == ".")\n            res = False\n            if (j + 1) < len(p) and p[j + 1] == "*":\n                res = dp[j + 2]\n                if match:\n                    res |= dp[j]\n            elif match:\n                res = dp1\n            dp[j], dp1 = res, dp[j]\n\n    return dp[0]',timeComplexity:"O(m\xd7n) - where m,n are the lengths of s and p",spaceComplexity:"O(n) - for the DP array"}],x=[{id:1,title:"Single Number",question:"Find the single number that appears only once in an array where all other numbers appear twice.",hint:"Consider using the XOR operation to cancel out duplicates.",oneLiner:"Use XOR to cancel out all duplicate numbers, leaving the single one.",simpleExplanation:"Every number appears twice except one.\nMatching numbers cancel each other out.\nOnly the lonely one stays!",mnemonics:['"Cancel duplicates" \u2192 result ^= num','"Start with zero" \u2192 result = 0','"Return the lone survivor" \u2192 return result'],code:"def singleNumber(nums):\n    result = 0\n    for num in nums:\n        # XOR operation: a ^ a = 0 and a ^ 0 = a\n        # So all pairs will cancel out, leaving only the single number\n        result ^= num\n    return result",timeComplexity:"O(n) - one pass through the array",spaceComplexity:"O(1) - constant extra space"},{id:2,title:"Number of 1 Bits",question:"Count the number of '1' bits in an unsigned integer.",hint:"A powerful bit manipulation trick: n & (n-1) clears the rightmost set bit.",oneLiner:"Use n & (n - 1) to clear the rightmost 1 until n becomes 0.",simpleExplanation:"Look at a number's binary.\nEvery time you chop off a 1, count it.\nKeep chopping till there are none!",mnemonics:['"Chop rightmost 1" \u2192 n &= (n - 1)','"Count each chop" \u2192 count += 1','"Loop until empty" \u2192 while n:'],code:"def hammingWeight(n):\n    count = 0\n    while n:\n        # n & (n-1) removes the rightmost 1 bit\n        n &= (n - 1)\n        count += 1\n    return count",timeComplexity:"O(k) - where k is the number of 1 bits",spaceComplexity:"O(1) - constant extra space"},{id:3,title:"Counting Bits",question:"Count the number of '1' bits in each number from 0 to n.",hint:"Reuse previously calculated results with dynamic programming.",oneLiner:"Build up the 1-bit count using previous results and last bit.",simpleExplanation:"Every number is made from smaller ones.\nCopy their 1-count and add the last bit.\nStore the count and keep going!",mnemonics:['"Right shift reuse" \u2192 result[i >> 1] + (i & 1)','"Start from zero" \u2192 result = [0] * (n + 1)','"Build bottom-up" \u2192 for i in range(1, n + 1):'],code:"def countBits(n):\n    # Initialize result array with 0 for the first element\n    result = [0] * (n + 1)\n    \n    for i in range(1, n + 1):\n        # For any number i, result[i] = result[i >> 1] + (i & 1)\n        # This works because i >> 1 is i / 2, and i & 1 is the last bit\n        result[i] = result[i >> 1] + (i & 1)\n    \n    return result",timeComplexity:"O(n) - we process each number from 0 to n",spaceComplexity:"O(n) - for the output array"},{id:4,title:"Reverse Bits",question:"Reverse the bits of a 32-bit unsigned integer.",hint:"Build the result bit by bit, shifting and OR-ing.",oneLiner:"Shift and build the reversed number bit-by-bit.",simpleExplanation:"Read one bit at a time from right to left.\nPut it in the new number from left to right.\nDo this 32 times!",mnemonics:['"Shift left & add" \u2192 result = (result << 1) | (n & 1)','"Shift n right" \u2192 n >>= 1','"Do it 32 times" \u2192 for i in range(32):'],code:"def reverseBits(n):\n    result = 0\n    for i in range(32):\n        # Left shift result by 1 to make space for the next bit\n        result <<= 1\n        # Add the least significant bit of n to result\n        result |= (n & 1)\n        # Right shift n by 1 to process the next bit\n        n >>= 1\n    \n    return result",timeComplexity:"O(1) - constant time (always 32 operations)",spaceComplexity:"O(1) - constant extra space"},{id:5,title:"Missing Number",question:"Find the missing number in a sequence of 0 to n.",hint:"Use properties of XOR to find the missing element.",oneLiner:"Use XOR to cancel out all matching numbers and find the missing one.",simpleExplanation:"XOR all numbers from 0 to n.\nXOR all numbers in the array.\nWhat remains is the missing number!",mnemonics:['"XOR indices" \u2192 result ^= i','"XOR values" \u2192 result ^= nums[i]','"XOR missing index" \u2192 result ^= n'],code:"def missingNumber(nums):\n    result = len(nums)\n    for i in range(len(nums)):\n        result ^= i ^ nums[i]\n    return result",timeComplexity:"O(n) - one pass through the array",spaceComplexity:"O(1) - constant extra space"},{id:6,title:"Sum of Two Integers",question:"Calculate the sum of two integers without using the + or - operators.",hint:"Use bitwise operations to simulate addition.",oneLiner:"Use XOR for sum without carry and AND with shift for carry.",simpleExplanation:"XOR gives sum without carry.\nAND with shift gives the carry.\nRepeat until no carry left!",mnemonics:['"Sum without carry" \u2192 a ^ b','"Generate carry" \u2192 (a & b) << 1','"Repeat until done" \u2192 while b != 0:'],code:"def getSum(a, b):\n    mask = 0xFFFFFFFF  # 32-bit mask\n    \n    while b != 0:\n        # Calculate carry\n        carry = ((a & b) & mask) << 1\n        # Sum without carry\n        a = (a ^ b) & mask\n        b = carry\n    \n    # Convert back to signed integer if needed\n    return a if a <= 0x7FFFFFFF else ~(a ^ mask)",timeComplexity:"O(1) - constant time (maximum 32 iterations)",spaceComplexity:"O(1) - constant extra space"},{id:7,title:"Reverse Integer",question:"Reverse a 32-bit signed integer, returning 0 if the result overflows.",hint:"Extract digits by modulo and build the reverse number while checking for overflow.",oneLiner:"Extract digits from the end and build the number in reverse order.",simpleExplanation:"Pick off digits from the end one by one.\nAdd each to the reversed number.\nCheck for 32-bit integer overflow!",mnemonics:['"Extract digit" \u2192 pop = x % 10','"Build reverse" \u2192 rev = rev * 10 + pop','"Check overflow" \u2192 if rev > 2^31-1 or rev < -2^31: return 0'],code:"def reverse(x):\n    # Handle negative numbers\n    is_negative = x < 0\n    x = abs(x)\n    \n    reversed_x = 0\n    while x > 0:\n        # Extract last digit\n        digit = x % 10\n        # Remove last digit from x\n        x //= 10\n        # Add digit to reversed_x\n        reversed_x = reversed_x * 10 + digit\n    \n    # Check for overflow\n    if reversed_x > 2**31 - 1:\n        return 0\n    \n    return -reversed_x if is_negative else reversed_x",timeComplexity:"O(log n) - we process each digit",spaceComplexity:"O(1) - constant extra space"}],k=[{id:1,title:"Rotate Image",question:"Rotate an n\xd7n matrix 90 degrees clockwise in-place.",hint:"Think about swapping elements in a strategic way.",oneLiner:"Transpose the matrix and reverse each row.",simpleExplanation:"We flip the square along the slanty diagonal.\nThen we flip each row like turning a page.\nNow it looks rotated!",mnemonics:['"Flip + Transpose" \u2192 matrix[:] = list(zip(*matrix[::-1]))','"Turn inside out" \u2192 Transpose first, reverse next','"In-place magic" \u2192 Modify the same matrix'],code:"def rotate(self, matrix: List[List[int]]) -> None:\n    # Reverse the matrix vertically\n    matrix.reverse()\n\n    # Transpose the matrix\n    for i in range(len(matrix)):\n        for j in range(i + 1, len(matrix)):\n            matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]",timeComplexity:"O(N\xb2) - we touch each element in the matrix",spaceComplexity:"O(1) - we rotate in-place without extra space"},{id:2,title:"Spiral Matrix",question:"Return all elements of a matrix in spiral order, starting from the outside and spiraling inward.",hint:"Traverse the matrix in a spiral pattern: right, down, left, up, and repeat.",oneLiner:"Peel outer layers one by one in spiral order.",simpleExplanation:"We grab the top row, then go down the side.\nThen we go backwards along the bottom, then up.\nRepeat this spiral till everything's picked.",mnemonics:['"Peel & Rotate" \u2192 res += matrix.pop(0); matrix = list(zip(*matrix))[::-1]','"Right-Down-Left-Up" \u2192 Classic spiral movement','"Shrink the box" \u2192 Matrix gets smaller every loop'],code:"def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n    res = []\n    directions = [(0, 1), (1, 0), (0, -1), (-1, 0)]\n    steps = [len(matrix[0]), len(matrix) - 1]\n\n    r, c, d = 0, -1, 0\n    while steps[d & 1]:\n        for i in range(steps[d & 1]):\n            r += directions[d][0]\n            c += directions[d][1]\n            res.append(matrix[r][c])\n        steps[d & 1] -= 1\n        d += 1\n        d %= 4\n    return res",timeComplexity:"O(M\xd7N) - we visit each element once",spaceComplexity:"O(1) - excluding the output array"},{id:3,title:"Set Matrix Zeroes",question:"Given a matrix, if an element is 0, set its entire row and column to 0.",hint:"Use the first row and column as markers without using extra space.",oneLiner:"Use first row and column to mark zeros to be set later.",simpleExplanation:"If something is zero, we remember its row and column.\nWe use the first row and column as sticky notes.\nLater we turn whole rows and columns to zeros.",mnemonics:['"Mark for zero" \u2192 matrix[i][0] = matrix[0][j] = 0','"First row/col = hint board"','"Wipe after scan" \u2192 Do changes only after scanning'],code:"def setZeroes(self, matrix: List[List[int]]) -> None:\n    ROWS, COLS = len(matrix), len(matrix[0])\n    rowZero = False\n\n    for r in range(ROWS):\n        for c in range(COLS):\n            if matrix[r][c] == 0:\n                matrix[0][c] = 0\n                if r > 0:\n                    matrix[r][0] = 0\n                else:\n                    rowZero = True\n\n    for r in range(1, ROWS):\n        for c in range(1, COLS):\n            if matrix[0][c] == 0 or matrix[r][0] == 0:\n                matrix[r][c] = 0\n\n    if matrix[0][0] == 0:\n        for r in range(ROWS):\n            matrix[r][0] = 0\n\n    if rowZero:\n        for c in range(COLS):\n            matrix[0][c] = 0",timeComplexity:"O(M\xd7N) - we scan the matrix twice",spaceComplexity:"O(1) - we use the matrix itself to track zeros"},{id:4,title:"Happy Number",question:"Determine if a number is 'happy': replace it with the sum of squares of its digits, and repeat until 1 or a cycle.",hint:"Use a technique to detect cycles, like fast and slow pointers.",oneLiner:"Loop sum of squares of digits until 1 or repeat.",simpleExplanation:"We square and add each digit.\nIf we reach 1, it's a happy number!\nIf we loop, it's stuck and unhappy.",mnemonics:['"Sum of digit squares" \u2192 n = sum(int(c)**2 for c in str(n))','"Loop with memory" \u2192 seen = set()','"Stop at 1 or cycle" \u2192 while n != 1 and n not in seen: ...'],code:"def isHappy(self, n: int) -> bool:\n    slow, fast = n, self.sumOfSquares(n)\n    power = lam = 1\n    \n    while slow != fast:\n        if power == lam:\n            slow = fast\n            power *= 2\n            lam = 0\n        fast = self.sumOfSquares(fast)\n        lam += 1\n    return True if fast == 1 else False\n\ndef sumOfSquares(self, n: int) -> int:\n    output = 0\n    while n:\n        digit = n % 10\n        digit = digit ** 2\n        output += digit\n        n = n // 10\n    return output",timeComplexity:"O(log n) - number of digits decreases quickly",spaceComplexity:"O(1) - using constant extra space with Floyd's cycle detection"},{id:5,title:"Plus One",question:"Given a non-empty array of digits representing a non-negative integer, increment it by one.",hint:"Handle carry operations from right to left.",oneLiner:"Add from the back, handle carry, insert if needed.",simpleExplanation:"We add 1 to the last digit.\nIf it turns into 10, we carry the 1.\nIf it carries all the way, we add a new digit!",mnemonics:['"Go backward" \u2192 for i in reversed(range(len(digits)))','"Break early if no carry"','"Insert 1 if overflow" \u2192 digits.insert(0, 1)'],code:"def plusOne(self, digits: List[int]) -> List[int]:\n    one = 1\n    i = 0\n    digits.reverse()\n\n    while one:\n        if i < len(digits):\n            if digits[i] == 9:\n                digits[i] = 0\n            else:\n                digits[i] += 1\n                one = 0\n        else:\n            digits.append(one)\n            one = 0\n        i += 1\n\n    digits.reverse()\n    return digits",timeComplexity:"O(N) - potentially examine all digits",spaceComplexity:"O(1) - excluding output array, constant extra space"},{id:6,title:"Pow(x, n)",question:"Implement pow(x, n), which calculates x raised to the power n.",hint:"Use binary exponentiation for efficiency.",oneLiner:"Use divide and conquer to reduce power fast.",simpleExplanation:"Split the problem into two smaller ones.\nUse the result to build the big one back.\nRepeat until tiny and fast.",mnemonics:['"Halve and square" \u2192 pow(x * x, n // 2)','"Odd n needs extra x" \u2192 x * pow(...) if n % 2 else pow(...)','"Fast power = Binary Exponentiation"'],code:"def myPow(self, x: float, n: int) -> float:\n    if x == 0:\n        return 0\n    if n == 0:\n        return 1\n    \n    res = 1\n    power = abs(n)\n    \n    while power:\n        if power & 1:\n            res *= x\n        x *= x\n        power >>= 1\n    \n    return res if n >= 0 else 1 / res",timeComplexity:"O(log n) - binary exponentiation",spaceComplexity:"O(1) - constant extra space"},{id:7,title:"Multiply Strings",question:"Given two non-negative integers represented as strings, multiply them without converting directly to integers.",hint:"Simulate the traditional multiplication algorithm digit by digit.",oneLiner:"Simulate grade-school multiplication using arrays.",simpleExplanation:"We multiply each digit like on paper.\nAdd to the right place using carry.\nAt the end, remove leading zeroes.",mnemonics:['"Multiply and place" \u2192 res[i + j + 1] += d1 * d2','"Add carry" \u2192 res[i + j] += res[i + j + 1] // 10',"\"Join digits\" \u2192 ''.join(map(str, res)).lstrip('0')"],code:'def multiply(self, num1: str, num2: str) -> str:\n    if "0" in [num1, num2]:\n        return "0"\n\n    res = [0] * (len(num1) + len(num2))\n    num1, num2 = num1[::-1], num2[::-1]\n    for i1 in range(len(num1)):\n        for i2 in range(len(num2)):\n            digit = int(num1[i1]) * int(num2[i2])\n            res[i1 + i2] += digit\n            res[i1 + i2 + 1] += res[i1 + i2] // 10\n            res[i1 + i2] = res[i1 + i2] % 10\n\n    res, beg = res[::-1], 0\n    while beg < len(res) and res[beg] == 0:\n        beg += 1\n    res = map(str, res[beg:])\n    return "".join(res)',timeComplexity:"O(m*n) - where m,n are the lengths of input strings",spaceComplexity:"O(m+n) - for the result array"},{id:8,title:"Detect Squares",question:"Design a data structure that supports adding points and counting squares that can be formed.",hint:"Store points by coordinates and check for square formations efficiently.",oneLiner:"For each new point, check other 3 corners needed to make a square.",simpleExplanation:"When we add a point, we remember it.\nTo count squares, we try using that point as one corner.\nWe find 3 other points that make a square with it!",mnemonics:['"Store count of all points" \u2192 self.points = defaultdict(int)','"Same y = square start" \u2192 Loop all points with same y','"Check distance & match" \u2192 count += self.points[...] * ...'],code:"class DetectSquares:\n    def __init__(self):\n        self.ptsCount = defaultdict(lambda: defaultdict(int))\n\n    def add(self, point: List[int]) -> None:\n        self.ptsCount[point[0]][point[1]] += 1\n\n    def count(self, point: List[int]) -> int:\n        res = 0\n        x1, y1 = point\n        for y2 in self.ptsCount[x1]:\n            side = y2 - y1\n            if side == 0:\n                continue\n\n            x3, x4 = x1 + side, x1 - side\n            res += (self.ptsCount[x1][y2] * self.ptsCount[x3][y1] *\n                    self.ptsCount[x3][y2])\n\n            res += (self.ptsCount[x1][y2] * self.ptsCount[x4][y1] *\n                    self.ptsCount[x4][y2])\n        return res",timeComplexity:"add: O(1), count: O(N) where N is the number of points sharing an x-coordinate",spaceComplexity:"O(N) where N is the total number of points"}];var S=t(579);const C=()=>{const[e,n]=(0,r.useState)([{id:1,name:"Arrays and Hashing",problems:9,available:!0},{id:2,name:"Two Pointers",problems:5,available:!0},{id:3,name:"Stack",problems:7,available:!0},{id:4,name:"Binary Search",problems:7,available:!0},{id:5,name:"Sliding Window",problems:6,available:!0},{id:6,name:"Linked List",problems:11,available:!0},{id:7,name:"Trees",problems:15,available:!0},{id:8,name:"Tries",problems:3,available:!0},{id:9,name:"Backtracking",problems:9,available:!0},{id:10,name:"Heap/Priority Queue",problems:7,available:!0},{id:11,name:"Intervals",problems:6,available:!0},{id:12,name:"Greedy",problems:8,available:!0},{id:13,name:"Advanced Graphs",problems:6,available:!0},{id:14,name:"Graphs",problems:13,available:!0},{id:15,name:"1-D Dynamic Programming",problems:12,available:!0},{id:16,name:"2-D Dynamic Programming",problems:11,available:!0},{id:17,name:"Bit Manipulation",problems:7,available:!0},{id:18,name:"Math & Geometry",problems:8,available:!0}]),t={1:a,2:o,3:l,4:s,5:u,6:c,7:d,8:f,9:p,10:m,11:h,12:g,13:b,14:y,15:v,16:w,17:x,18:k},[i,C]=(0,r.useState)(null),[_,E]=(0,r.useState)([]),[O,T]=(0,r.useState)(null),[N,L]=(0,r.useState)({});(0,r.useEffect)((()=>{if(i){const e=t[i.id]||[];E(e),L({})}}),[i]);const q=()=>{O?T(null):C(null)};return(0,S.jsxs)("div",{className:"min-h-screen bg-gray-50",children:[(0,S.jsx)("style",{children:"\n  .perspective-lg {\n    perspective: 1000px;\n  }\n  \n  .transform-style-preserve-3d {\n    transform-style: preserve-3d;\n  }\n  \n  .backface-hidden {\n    backface-visibility: hidden;\n  }\n  \n  .rotate-y-180 {\n    transform: rotateY(180deg);\n  }\n"}),!i&&(0,S.jsxs)("div",{className:"p-6",children:[(0,S.jsx)("h1",{className:"text-3xl font-bold text-center mb-8",children:"LeetCode Flashcards"}),(0,S.jsx)("h2",{className:"text-xl mb-4",children:"Select a Topic"}),(0,S.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:e.map((e=>(0,S.jsxs)("div",{onClick:()=>(e=>{e.available&&(C(e),T(null))})(e),className:"p-4 rounded-lg cursor-pointer "+(e.available?"bg-blue-100 hover:bg-blue-200":"bg-gray-100 cursor-not-allowed"),children:[(0,S.jsx)("h3",{className:"font-bold",children:e.name}),(0,S.jsxs)("p",{className:"text-sm",children:[e.problems," problem",1!==e.problems?"s":"",!e.available&&" (Coming soon)"]})]},e.id)))})]}),i&&!O&&(0,S.jsxs)("div",{className:"p-6",children:[(0,S.jsxs)("div",{className:"flex items-center mb-6",children:[(0,S.jsx)("button",{onClick:q,className:"mr-4 bg-gray-200 hover:bg-gray-300 p-2 rounded",children:"\u2190 Back"}),(0,S.jsxs)("h1",{className:"text-2xl font-bold",children:[i.name," Flashcards"]})]}),0===_.length?(0,S.jsx)("p",{children:"No flashcards available for this topic yet."}):(0,S.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:_.map((e=>{const n=N[e.id];return(0,S.jsx)("div",{className:"h-64 perspective-lg",children:(0,S.jsxs)("div",{className:"relative h-full w-full transition-transform duration-500 transform-style-preserve-3d "+(n?"rotate-y-180":""),onClick:()=>L({...N,[e.id]:!n}),children:[(0,S.jsx)("div",{className:"absolute w-full h-full bg-blue-50 border border-blue-200 rounded-lg p-5 shadow-md backface-hidden cursor-pointer",children:(0,S.jsxs)("div",{className:"flex flex-col h-full",children:[(0,S.jsx)("h3",{className:"font-bold text-lg text-blue-700 mb-4",children:e.title}),(0,S.jsxs)("div",{className:"flex-grow mb-4",children:[(0,S.jsx)("h4",{className:"font-medium mb-2",children:"Question:"}),(0,S.jsx)("p",{className:"text-sm",children:e.question})]}),(0,S.jsxs)("div",{className:"mt-auto border-t border-blue-200 pt-3",children:[(0,S.jsx)("h4",{className:"font-medium text-sm mb-1",children:"Hint:"}),(0,S.jsx)("p",{className:"text-sm italic text-gray-600",children:e.hint})]}),(0,S.jsx)("p",{className:"text-xs text-center mt-2 text-gray-400",children:"Click to flip"})]})}),(0,S.jsx)("div",{className:"absolute w-full h-full bg-white border border-gray-200 rounded-lg p-4 shadow-md backface-hidden rotate-y-180 overflow-auto cursor-pointer",children:(0,S.jsxs)("div",{className:"flex flex-col h-full",children:[(0,S.jsx)("h3",{className:"font-bold text-lg text-gray-800",children:e.title}),(0,S.jsxs)("div",{className:"flex-grow overflow-auto",children:[(0,S.jsxs)("div",{className:"mb-3",children:[(0,S.jsx)("h4",{className:"font-medium text-sm",children:"In One Line:"}),(0,S.jsx)("p",{className:"text-sm",children:e.oneLiner})]}),(0,S.jsxs)("div",{className:"mb-3",children:[(0,S.jsx)("h4",{className:"font-medium text-sm",children:"Simple Explanation:"}),(0,S.jsx)("p",{className:"text-xs whitespace-pre-line",children:e.simpleExplanation})]}),(0,S.jsxs)("div",{className:"mb-3",children:[(0,S.jsx)("h4",{className:"font-medium text-sm",children:"Mnemonics:"}),(0,S.jsx)("ul",{className:"text-xs list-disc pl-4",children:e.mnemonics.map(((e,n)=>(0,S.jsx)("li",{children:e},n)))})]})]}),(0,S.jsx)("button",{className:"mt-auto block w-full py-1 bg-green-100 text-green-800 rounded text-sm",onClick:n=>{n.stopPropagation(),(e=>{T(e)})(e)},children:"View Full Details"})]})})]})},e.id)}))})]}),i&&O&&(0,S.jsxs)("div",{className:"p-6",children:[(0,S.jsxs)("div",{className:"flex items-center mb-6",children:[(0,S.jsx)("button",{onClick:q,className:"mr-4 bg-gray-200 hover:bg-gray-300 p-2 rounded",children:"\u2190 Back"}),(0,S.jsx)("h1",{className:"text-xl font-bold",children:O.title})]}),(0,S.jsxs)("div",{className:"bg-white rounded-lg shadow-lg p-6 mb-6",children:[(0,S.jsxs)("div",{className:"mb-4",children:[(0,S.jsx)("h2",{className:"text-lg font-semibold mb-2",children:"Question:"}),(0,S.jsx)("p",{children:O.question})]}),(0,S.jsxs)("div",{className:"mb-4",children:[(0,S.jsx)("h2",{className:"text-lg font-semibold mb-2",children:"In One Line:"}),(0,S.jsx)("p",{children:O.oneLiner})]}),(0,S.jsxs)("div",{className:"mb-4",children:[(0,S.jsx)("h2",{className:"text-lg font-semibold mb-2",children:"Simple Explanation:"}),(0,S.jsx)("p",{className:"whitespace-pre-line",children:O.simpleExplanation})]}),(0,S.jsxs)("div",{className:"mb-4",children:[(0,S.jsx)("h2",{className:"text-lg font-semibold mb-2",children:"Mnemonics:"}),(0,S.jsx)("ul",{className:"list-disc pl-6",children:O.mnemonics.map(((e,n)=>(0,S.jsx)("li",{children:e},n)))})]})]}),(0,S.jsxs)("div",{className:"bg-gray-800 text-white p-4 rounded-lg mb-4",children:[(0,S.jsx)("h2",{className:"text-lg font-semibold mb-2",children:"Code Implementation:"}),(0,S.jsx)("pre",{className:"overflow-x-auto text-sm",children:(0,S.jsx)("code",{children:O.code})})]}),(0,S.jsxs)("div",{className:"bg-white rounded-lg shadow p-4",children:[(0,S.jsxs)("div",{className:"mb-2",children:[(0,S.jsx)("span",{className:"font-semibold",children:"Time Complexity:"})," ",O.timeComplexity]}),(0,S.jsxs)("div",{children:[(0,S.jsx)("span",{className:"font-semibold",children:"Space Complexity:"})," ",O.spaceComplexity]})]})]})]})},_=e=>{e&&e instanceof Function&&t.e(453).then(t.bind(t,453)).then((n=>{let{getCLS:t,getFID:r,getFCP:i,getLCP:a,getTTFB:o}=n;t(e),r(e),i(e),a(e),o(e)}))};i.createRoot(document.getElementById("root")).render((0,S.jsx)(r.StrictMode,{children:(0,S.jsx)(C,{})})),_()})();
//# sourceMappingURL=main.4705d323.js.map